{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/BlockNoteEditor.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport \"@blocknote/core/fonts/inter.css\";\r\nimport { useCreateBlockNote } from \"@blocknote/react\";\r\nimport { BlockNoteView } from \"@blocknote/mantine\";\r\nimport \"@blocknote/mantine/style.css\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { BlockNoteSchema, defaultBlockSpecs, locales } from \"@blocknote/core\";\r\nimport Toast from \"./Toast\";\r\n\r\n// Add custom styles for dark mode\r\nimport \"./editor-styles.css\";\r\n\r\ninterface BlockNoteEditorProps {\r\n    initialContent?: any[];\r\n    onChange?: (content: any[]) => void;\r\n    isDarkMode?: boolean;\r\n    className?: string;\r\n    readOnly?: boolean;\r\n    placeholder?: string;\r\n    onEditorReady?: (editor: any) => void;\r\n    allowMedia?: boolean;\r\n}\r\n\r\n// Uploads a file and returns the URL to the uploaded file\r\nasync function uploadFile(file: File) {\r\n    if (!file.type.startsWith('image/') && !file.type.startsWith('audio/') && !file.type.startsWith('video/')) {\r\n        return ''\r\n    }\r\n\r\n    let presigned_url = '';\r\n\r\n    try {\r\n        // First, get a presigned URL for the file\r\n        const presignedUrlResponse = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/file/presigned-url/create`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                content_type: file.type\r\n            })\r\n        });\r\n\r\n        if (!presignedUrlResponse.ok) {\r\n            throw new Error('Failed to get presigned URL');\r\n        }\r\n\r\n        const presignedData = await presignedUrlResponse.json();\r\n\r\n        presigned_url = presignedData.presigned_url;\r\n    } catch (error) {\r\n        console.error(\"Error getting presigned URL for file:\", error);\r\n    }\r\n\r\n    if (!presigned_url) {\r\n        // If we couldn't get a presigned URL, try direct upload to the backend\r\n        try {\r\n            console.log(\"Attempting direct upload to backend\");\r\n\r\n            // Create FormData for the file upload\r\n            const formData = new FormData();\r\n            formData.append('file', file, file.name);\r\n            formData.append('content_type', file.type);\r\n\r\n            // Upload directly to the backend\r\n            const uploadResponse = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/file/upload-local`, {\r\n                method: 'POST',\r\n                body: formData\r\n            });\r\n\r\n            if (!uploadResponse.ok) {\r\n                throw new Error(`Failed to upload audio to backend: ${uploadResponse.status}`);\r\n            }\r\n\r\n            const uploadData = await uploadResponse.json();\r\n            const file_static_path = uploadData.static_url;\r\n\r\n            const static_url = `${process.env.NEXT_PUBLIC_BACKEND_URL}${file_static_path}`;\r\n\r\n            console.log('File uploaded successfully to backend');\r\n\r\n            return static_url;\r\n        } catch (error) {\r\n            console.error('Error with direct upload to backend:', error);\r\n            throw error;\r\n        }\r\n    } else {\r\n        // Upload the file to S3 using the presigned URL\r\n        try {\r\n            let fileBlob = new Blob([file], { type: file.type });\r\n\r\n            // Upload to S3 using the presigned URL with WAV content type\r\n            const uploadResponse = await fetch(presigned_url, {\r\n                method: 'PUT',\r\n                body: fileBlob,\r\n                headers: {\r\n                    'Content-Type': file.type\r\n                }\r\n            });\r\n\r\n            if (!uploadResponse.ok) {\r\n                throw new Error(`Failed to upload file to S3: ${uploadResponse.status}`);\r\n            }\r\n\r\n            console.log('File uploaded successfully to S3');\r\n            // Update the request body with the file information\r\n            return uploadResponse.url\r\n        } catch (error) {\r\n            console.error('Error uploading file to S3:', error);\r\n            throw error;\r\n        }\r\n    }\r\n}\r\n\r\nasync function resolveFileUrl(url: string) {\r\n    if (!url || !url.includes(\"?X-Amz-Algorithm=AWS4-HMAC-SHA256\")) {\r\n        return url;\r\n    }\r\n\r\n    if (url.includes(`${process.env.NEXT_PUBLIC_BACKEND_URL}/`)) {\r\n        return url;\r\n    }\r\n\r\n    let uuid = url.split('/').pop()?.split('.')[0] || '';\r\n    let fileType = url.split('.').pop()?.split('?')[0] || '';\r\n\r\n    try {\r\n        // Get presigned URL\r\n        const presignedResponse = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/file/presigned-url/get?uuid=${uuid}&file_extension=${fileType}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n\r\n        if (!presignedResponse.ok) {\r\n            throw new Error('Failed to get presigned URL for file');\r\n        }\r\n\r\n        const { url } = await presignedResponse.json();\r\n        return url;\r\n    } catch (error) {\r\n        console.error('Error fetching file:', error);\r\n    }\r\n}\r\n\r\n// Function to check if a URL is a YouTube link\r\nfunction isYouTubeLink(url: string): boolean {\r\n    return url.includes('youtube.com') || url.includes('youtu.be');\r\n}\r\n\r\nexport default function BlockNoteEditor({\r\n    initialContent = [],\r\n    onChange,\r\n    isDarkMode = true, // Default to dark mode\r\n    className = \"\",\r\n    readOnly = false,\r\n    placeholder = \"Enter text or type '/' for commands\",\r\n    onEditorReady,\r\n    allowMedia = true,\r\n}: BlockNoteEditorProps) {\r\n    const locale = locales[\"en\"];\r\n    const editorContainerRef = useRef<HTMLDivElement>(null);\r\n    const isUpdatingContent = useRef(false);\r\n    const lastContent = useRef<any[]>([]);\r\n    const editorRef = useRef<any>(null);\r\n\r\n    // Replace the boolean showToast with a toast object\r\n    const [toast, setToast] = useState({\r\n        show: false,\r\n        title: '',\r\n        description: '',\r\n        emoji: ''\r\n    });\r\n\r\n    // Add a timeout ref to store the timeout ID\r\n    const toastTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n    // Extract blocks we don't want based on configuration\r\n    let enabledBlocks;\r\n    if (allowMedia) {\r\n        // If media is allowed, exclude only these blocks\r\n        const { table, file, ...allowedBlockSpecs } = defaultBlockSpecs;\r\n        enabledBlocks = allowedBlockSpecs;\r\n    } else {\r\n        // If media is not allowed, also exclude all media blocks\r\n        const { table, video, audio, file, image, ...allowedBlockSpecs } = defaultBlockSpecs;\r\n        enabledBlocks = allowedBlockSpecs;\r\n    }\r\n\r\n    // Create a schema with only the allowed blocks\r\n    const schema = BlockNoteSchema.create({\r\n        blockSpecs: enabledBlocks,\r\n    });\r\n\r\n    // Creates a new editor instance with the custom schema\r\n    const editor = useCreateBlockNote({\r\n        initialContent: initialContent.length > 0 ? initialContent : undefined,\r\n        uploadFile,\r\n        resolveFileUrl,\r\n        schema, // Use our custom schema with limited blocks\r\n        dictionary: {\r\n            ...locale,\r\n            placeholders: {\r\n                ...locale.placeholders,\r\n                emptyDocument: placeholder,\r\n            },\r\n        },\r\n    });\r\n\r\n    // Store the editor instance in a ref for later use\r\n    useEffect(() => {\r\n        if (editor) {\r\n            editorRef.current = editor;\r\n        }\r\n    }, [editor]);\r\n\r\n    // Update the function to handle closing the toast\r\n    const handleCloseToast = () => {\r\n        setToast(prev => ({ ...prev, show: false }));\r\n\r\n        // Clear any existing timeout\r\n        if (toastTimeoutRef.current) {\r\n            clearTimeout(toastTimeoutRef.current);\r\n            toastTimeoutRef.current = null;\r\n        }\r\n    };\r\n\r\n    // Update the effect that checks for YouTube links\r\n    useEffect(() => {\r\n        if (editor && allowMedia) {\r\n            const handleVideoBlockChange = () => {\r\n                // Skip checking during programmatic updates\r\n                if (isUpdatingContent.current) return;\r\n\r\n                // Get all video blocks\r\n                const blocks = editor.document;\r\n\r\n                blocks.forEach(block => {\r\n                    // Check if this is a video block\r\n                    // @ts-ignore - TypeScript doesn't recognize custom block types\r\n                    if (block.type === \"video\") {\r\n                        // Check if the URL is a YouTube link\r\n                        // @ts-ignore - TypeScript doesn't recognize props on custom block types\r\n                        const videoUrl = block.props?.url || \"\";\r\n                        if (videoUrl && isYouTubeLink(videoUrl)) {\r\n                            // Show toast with customized properties\r\n                            setToast({\r\n                                show: true,\r\n                                title: \"Cannot embed YouTube videos yet\",\r\n                                description: \"Please use video file URLs (e.g. link to a mp4 file) instead\",\r\n                                emoji: \"🚫\"\r\n                            });\r\n\r\n                            // Clear any existing timeout\r\n                            if (toastTimeoutRef.current) {\r\n                                clearTimeout(toastTimeoutRef.current);\r\n                            }\r\n\r\n                            // Set a new timeout to auto-hide the toast after 5 seconds\r\n                            toastTimeoutRef.current = setTimeout(() => {\r\n                                setToast(prev => ({ ...prev, show: false }));\r\n                            }, 5000);\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n\r\n            // Listen for content changes to detect YouTube links\r\n            editor.onEditorContentChange(handleVideoBlockChange);\r\n\r\n            // Cleanup function to clear timeout when component unmounts\r\n            return () => {\r\n                if (toastTimeoutRef.current) {\r\n                    clearTimeout(toastTimeoutRef.current);\r\n                }\r\n            };\r\n        }\r\n    }, [editor, allowMedia]);\r\n\r\n    // Provide the editor instance to the parent component if onEditorReady is provided\r\n    useEffect(() => {\r\n        if (onEditorReady && editor) {\r\n            onEditorReady(editor);\r\n        }\r\n    }, [editor, onEditorReady]);\r\n\r\n    // Update editor content when initialContent changes\r\n    useEffect(() => {\r\n        if (editor && initialContent && initialContent.length > 0) {\r\n            // Set flag to prevent triggering onChange during programmatic update\r\n            isUpdatingContent.current = true;\r\n\r\n            try {\r\n                // Only replace blocks if the content has actually changed\r\n                const currentContentStr = JSON.stringify(editor.document);\r\n                const newContentStr = JSON.stringify(initialContent);\r\n\r\n                if (currentContentStr !== newContentStr) {\r\n                    editor.replaceBlocks(editor.document, initialContent);\r\n                    lastContent.current = initialContent;\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error updating editor content:\", error);\r\n            } finally {\r\n                // Reset flag after update\r\n                isUpdatingContent.current = false;\r\n            }\r\n        }\r\n    }, [editor, initialContent]);\r\n\r\n    // Handle content changes with debouncing to avoid rapid state updates\r\n    useEffect(() => {\r\n        if (onChange && editor) {\r\n            const handleChange = () => {\r\n                // Prevent handling changes if we're currently updating content\r\n                if (isUpdatingContent.current) return;\r\n\r\n                const currentContent = editor.document;\r\n                onChange(currentContent);\r\n            };\r\n\r\n            // Add change listener\r\n            editor.onEditorContentChange(handleChange);\r\n        }\r\n    }, [editor, onChange]);\r\n\r\n    // Add a method to focus the editor\r\n    useEffect(() => {\r\n        if (editor && editorRef.current) {\r\n            // Add a focus method to the editor ref\r\n            // Use a different name for the method to avoid potential name conflicts\r\n            editorRef.current.focusEditor = () => {\r\n                try {\r\n                    // Check if we're already focused to prevent recursion\r\n                    const activeElement = document.activeElement;\r\n                    const editorElement = editorContainerRef.current?.querySelector('[contenteditable=\"true\"]');\r\n\r\n                    // Only focus if we're not already focused\r\n                    if (editorElement && activeElement !== editorElement) {\r\n                        editor.focus();\r\n                    }\r\n                } catch (err) {\r\n                    console.error(\"Error focusing editor:\", err);\r\n                }\r\n            };\r\n        }\r\n    }, [editor]);\r\n\r\n    // Add effect to handle clicks in the empty space of editor blocks\r\n    useEffect(() => {\r\n        if (editor && editorContainerRef.current && !readOnly) {\r\n            const handleEditorClick = (e: MouseEvent) => {\r\n                // Don't interfere with normal clicks on content\r\n                const target = e.target as HTMLElement;\r\n\r\n                // Check if we're clicking on the editor container but not on an actual block content\r\n                const isEditorContainer = target.classList.contains('bn-block-content')\r\n\r\n                if (isEditorContainer) {\r\n                    // Find the closest block element to the click\r\n                    const blockElements = editorContainerRef.current?.querySelectorAll('.bn-block');\r\n                    if (!blockElements || blockElements.length === 0) return;\r\n\r\n                    // Find the block at the click position\r\n                    let closestBlock: Element | null = null;\r\n                    let minDistance = Infinity;\r\n\r\n                    blockElements.forEach(block => {\r\n                        const rect = block.getBoundingClientRect();\r\n                        // Check if the click is on the same line as this block (y-axis)\r\n                        if (e.clientY >= rect.top && e.clientY <= rect.bottom) {\r\n                            const distance = Math.abs(e.clientY - (rect.top + rect.height / 2));\r\n                            if (distance < minDistance) {\r\n                                minDistance = distance;\r\n                                closestBlock = block;\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    if (closestBlock) {\r\n                        // Explicitly reassert the type right where we need it\r\n                        const block = closestBlock as HTMLElement;\r\n                        // Get the editable element within the block\r\n                        const editableContent = block.querySelector('.bn-inline-content') as HTMLElement;\r\n\r\n                        if (editableContent) {\r\n                            // Focus and place cursor at the end\r\n                            editableContent.focus();\r\n\r\n                            // Set selection to the end of the content\r\n                            const range = document.createRange();\r\n                            const sel = window.getSelection();\r\n\r\n                            range.selectNodeContents(editableContent);\r\n                            range.collapse(false); // false means collapse to end\r\n\r\n                            if (sel) {\r\n                                sel.removeAllRanges();\r\n                                sel.addRange(range);\r\n                            }\r\n\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            const editorContainer = editorContainerRef.current;\r\n            editorContainer.addEventListener('click', handleEditorClick);\r\n\r\n            return () => {\r\n                editorContainer.removeEventListener('click', handleEditorClick);\r\n            };\r\n        }\r\n    }, [editor, readOnly]);\r\n\r\n    return (\r\n        <div\r\n            ref={editorContainerRef}\r\n            className={`h-full dark-editor-container ${className}`}\r\n            // Add click handler to prevent event propagation\r\n            onClick={(e) => {\r\n                e.stopPropagation();\r\n            }}\r\n            // Prevent mousedown from bubbling up which can cause focus issues\r\n            onMouseDown={(e) => {\r\n                e.stopPropagation();\r\n            }}\r\n        >\r\n            <BlockNoteView\r\n                editor={editor}\r\n                theme={isDarkMode ? \"dark\" : \"light\"}\r\n                className={isDarkMode ? \"dark-editor\" : \"\"}\r\n                editable={!readOnly}\r\n            />\r\n\r\n            {/* Update Toast component to use the toast object */}\r\n            <Toast\r\n                show={toast.show}\r\n                title={toast.title}\r\n                description={toast.description}\r\n                emoji={toast.emoji}\r\n                onClose={handleCloseToast}\r\n            />\r\n        </div>\r\n    );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 478, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/lib/utils/localStorage.ts"],"sourcesContent":["// Safe localStorage wrapper to handle SSR and errors\r\nexport const safeLocalStorage = {\r\n    getItem: (key: string): string | null => {\r\n        try {\r\n            if (typeof window !== 'undefined') {\r\n                return localStorage.getItem(key);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error accessing localStorage:', error);\r\n        }\r\n        return null;\r\n    },\r\n    setItem: (key: string, value: string): void => {\r\n        try {\r\n            if (typeof window !== 'undefined') {\r\n                localStorage.setItem(key, value);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error writing to localStorage:', error);\r\n        }\r\n    }\r\n}; "],"names":[],"mappings":"AAAA,qDAAqD;;;;AAC9C,MAAM,mBAAmB;IAC5B,SAAS,CAAC;QACN,IAAI;YACA,wCAAmC;gBAC/B,OAAO,aAAa,OAAO,CAAC;YAChC;QACJ,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,iCAAiC;QACnD;QACA,OAAO;IACX;IACA,SAAS,CAAC,KAAa;QACnB,IAAI;YACA,wCAAmC;gBAC/B,aAAa,OAAO,CAAC,KAAK;YAC9B;QACJ,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,kCAAkC;QACpD;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 512, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/ChatPlaceholderView.tsx"],"sourcesContent":["import React from 'react';\r\n\r\ninterface ChatPlaceholderViewProps {\r\n    taskType: 'quiz' | 'learning_material';\r\n    isChatHistoryLoaded: boolean;\r\n    isTestMode: boolean;\r\n    inputType?: string;\r\n    viewOnly?: boolean;\r\n    responseType?: 'chat' | 'exam';\r\n}\r\n\r\nconst ChatPlaceholderView: React.FC<ChatPlaceholderViewProps> = ({\r\n    taskType,\r\n    isChatHistoryLoaded,\r\n    isTestMode,\r\n    inputType = 'text',\r\n    viewOnly = false,\r\n    responseType = 'chat'\r\n}) => {\r\n    return (\r\n        <div className=\"flex flex-col items-center justify-center h-full w-full\">\r\n            {!isChatHistoryLoaded && !isTestMode ? (\r\n                // Loading spinner while chat history is loading\r\n                <div className=\"flex flex-col items-center justify-center\">\r\n                    <div className=\"w-10 h-10 border-2 border-white border-t-transparent rounded-full animate-spin mb-4\"></div>\r\n                </div>\r\n            ) : (\r\n                // Show placeholder text only when history is loaded but empty\r\n                <>\r\n                    <h2 className=\"text-4xl font-light text-white mb-6 text-center\">\r\n                        {viewOnly\r\n                            ? 'No activity yet'\r\n                            : taskType === 'learning_material'\r\n                                ? 'Have a question?'\r\n                                : responseType === 'exam'\r\n                                    ? 'Ready to test your knowledge?'\r\n                                    : 'Ready for a challenge?'\r\n                        }\r\n                    </h2>\r\n                    <div className=\"text-gray-400 text-center max-w-md mx-6 sm:mx-auto mb-8\">\r\n                        {viewOnly\r\n                            ? <p>There is no chat history for this quiz</p>\r\n                            : taskType === 'learning_material'\r\n                                ? <p>Ask your doubt here and AI will help you understand the material better</p>\r\n                                : responseType === 'exam'\r\n                                    ? (\r\n                                        <div className=\"bg-[#1a1a1a] rounded-xl px-6 py-5 flex flex-col items-center justify-center max-w-lg mx-auto\">\r\n                                            <span className=\"flex items-center gap-2 mb-2\">\r\n                                                <span className=\"text-red-400 text-lg\" style={{ fontWeight: 300 }}>●</span>\r\n                                                <span className=\"text-red-400 font-light text-base\">One-time Submission</span>\r\n                                            </span>\r\n                                            <span className=\"text-gray-300 font-light text-center mt-1\">\r\n                                                {inputType === 'code'\r\n                                                    ? `Think through your answer carefully, then write your code in the code editor. You can attempt the question only once. Be careful and confident.`\r\n                                                    : `Think through your answer carefully, then ${inputType === 'audio' ? 'record' : 'type'} it here. You can attempt the question only once. Be careful and confident.`}\r\n                                            </span>\r\n                                        </div>\r\n                                    )\r\n                                    : (\r\n                                        <p>\r\n                                            {inputType === 'code'\r\n                                                ? `Think through your answer, then write your code in the code editor. You can also type your response below if you want to ask or say something that is not code. You will receive instant feedback and support throughout your journey`\r\n                                                : `Think through your answer, then ${inputType === 'audio' ? 'record' : 'type'} it here. You will receive instant feedback and support throughout your journey`}\r\n                                        </p>\r\n                                    )\r\n                        }\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatPlaceholderView; "],"names":[],"mappings":";;;;;AAWA,MAAM,sBAA0D;QAAC,EAC7D,QAAQ,EACR,mBAAmB,EACnB,UAAU,EACV,YAAY,MAAM,EAClB,WAAW,KAAK,EAChB,eAAe,MAAM,EACxB;IACG,qBACI,4SAAC;QAAI,WAAU;kBACV,CAAC,uBAAuB,CAAC,aACtB,gDAAgD;sBAChD,4SAAC;YAAI,WAAU;sBACX,cAAA,4SAAC;gBAAI,WAAU;;;;;;;;;;uDAGnB,8DAA8D;sBAC9D;;8BACI,4SAAC;oBAAG,WAAU;8BACT,WACK,oBACA,aAAa,sBACT,qBACA,iBAAiB,SACb,kCACA;;;;;;8BAGlB,4SAAC;oBAAI,WAAU;8BACV,yBACK,4SAAC;kCAAE;;;;;mEACH,aAAa,oCACT,4SAAC;kCAAE;;;;;mEACH,iBAAiB,uBAEX,4SAAC;wBAAI,WAAU;;0CACX,4SAAC;gCAAK,WAAU;;kDACZ,4SAAC;wCAAK,WAAU;wCAAuB,OAAO;4CAAE,YAAY;wCAAI;kDAAG;;;;;;kDACnE,4SAAC;wCAAK,WAAU;kDAAoC;;;;;;;;;;;;0CAExD,4SAAC;gCAAK,WAAU;0CACX,cAAc,SACR,oJACD,AAAC,6CAAsF,OAA1C,cAAc,UAAU,WAAW,QAAO;;;;;;;;;;;iFAKrG,4SAAC;kCACI,cAAc,SACR,0OACD,AAAC,mCAA4E,OAA1C,cAAc,UAAU,WAAW,QAAO;;;;;;;;;;;;;;;;;;AAS/H;KA5DM;uCA8DS","debugId":null}},
    {"offset": {"line": 637, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/ChatHistoryView.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { ChatMessage, ScorecardItem } from '../types/quiz';\r\nimport Markdown from 'react-markdown';\r\nimport remarkGfm from 'remark-gfm';\r\n\r\n// Code message display component\r\nconst CodeMessageDisplay = ({ code, language }: { code: string, language?: string }) => {\r\n    // Check if the code contains language headers (e.g., \"// JAVASCRIPT\", \"// HTML\", etc.)\r\n    const hasLanguageHeaders = code.includes('// ') && code.includes('\\n');\r\n\r\n    if (hasLanguageHeaders) {\r\n        // Split the code by language sections\r\n        const sections = code.split(/\\/\\/ ([A-Z]+)\\n/).filter(Boolean);\r\n\r\n        // Create an array of [language, code] pairs\r\n        const languageSections = [];\r\n        for (let i = 0; i < sections.length; i += 2) {\r\n            if (i + 1 < sections.length) {\r\n                languageSections.push([sections[i], sections[i + 1]]);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"w-full rounded bg-[#1D1D1D] overflow-hidden\">\r\n                {languageSections.map(([lang, codeSection], index) => (\r\n                    <div key={index} className=\"mb-2 last:mb-0\">\r\n                        <div className=\"flex items-center justify-between bg-[#2D2D2D] px-3 py-1.5 text-xs text-gray-300\">\r\n                            <span>{lang}</span>\r\n                        </div>\r\n                        <pre className=\"p-3 overflow-x-auto text-xs text-gray-200\">\r\n                            <code>{codeSection}</code>\r\n                        </pre>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // If no language headers, display as a single code block\r\n    return (\r\n        <div className=\"w-full rounded bg-[#1D1D1D] overflow-hidden\">\r\n            <div className=\"flex items-center justify-between bg-[#2D2D2D] px-3 py-1.5 text-xs text-gray-300\">\r\n                <span>{language || 'code'}</span>\r\n            </div>\r\n            <pre className=\"p-3 overflow-x-auto text-xs text-gray-200\">\r\n                <code>{code}</code>\r\n            </pre>\r\n        </div>\r\n    );\r\n};\r\n\r\ninterface ChatHistoryViewProps {\r\n    chatHistory: ChatMessage[];\r\n    onViewScorecard: (scorecard: ScorecardItem[]) => void;\r\n    isAiResponding: boolean;\r\n    showPreparingReport: boolean;\r\n    currentQuestionConfig?: any;\r\n    onRetry?: () => void;\r\n    taskType: string;\r\n    showLearnerView?: boolean;\r\n    onShowLearnerViewChange?: (show: boolean) => void;\r\n    isAdminView?: boolean;\r\n}\r\n\r\nconst ChatHistoryView: React.FC<ChatHistoryViewProps> = ({\r\n    chatHistory,\r\n    onViewScorecard,\r\n    isAiResponding,\r\n    showPreparingReport,\r\n    currentQuestionConfig,\r\n    taskType,\r\n    onRetry,\r\n    showLearnerView = false,\r\n    onShowLearnerViewChange,\r\n    isAdminView = false,\r\n}) => {\r\n    const chatContainerRef = useRef<HTMLDivElement>(null);\r\n\r\n    // State for current thinking message\r\n    const [currentThinkingMessage, setCurrentThinkingMessage] = useState(\"\");\r\n    // State to track animation transition\r\n    const [isTransitioning, setIsTransitioning] = useState(false);\r\n    // Ref to store the interval ID for proper cleanup\r\n    const messageIntervalRef = useRef<NodeJS.Timeout | null>(null);\r\n    // Ref to store the timeout ID for proper cleanup\r\n    const transitionTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n    // Ref to store the current thinking message to avoid dependency issues\r\n    const currentThinkingMessageRef = useRef(\"\");\r\n    // Ref to track if initial message has been set\r\n    const initialMessageSetRef = useRef(false);\r\n\r\n    // Preset list of thinking messages for the AI typing animation\r\n    const thinkingMessages = taskType === 'learning_material'\r\n        ? [\r\n            \"Thinking\",\r\n            \"Preparing a response\",\r\n            \"Gathering relevant details\",\r\n            \"Crafting a clear explanation\",\r\n            \"Finding the best way to help\",\r\n            \"Putting together a helpful answer\",\r\n        ]\r\n        : [\r\n            \"Analyzing your response\",\r\n            \"Thinking\",\r\n            \"Processing your answer\",\r\n            \"Considering different angles\",\r\n            \"Evaluating your submission\",\r\n            \"Looking at your approach\",\r\n            \"Checking against criteria\",\r\n            \"Formulating feedback\",\r\n            \"Preparing a thoughtful response\",\r\n            \"Finding the best way to help\",\r\n            \"Reflecting on your answer\",\r\n            \"Connecting the dots\",\r\n            \"Crafting personalized feedback\",\r\n            \"Examining your reasoning\",\r\n            \"Assessing key concepts\"\r\n        ];\r\n\r\n    // Update the ref when the state changes\r\n    useEffect(() => {\r\n        currentThinkingMessageRef.current = currentThinkingMessage;\r\n    }, [currentThinkingMessage]);\r\n\r\n    // Effect to change the thinking message every 2 seconds\r\n    useEffect(() => {\r\n        // Only set up the interval if AI is responding\r\n        if (!isAiResponding) {\r\n            // Clear any existing intervals/timeouts when AI stops responding\r\n            if (messageIntervalRef.current) {\r\n                clearInterval(messageIntervalRef.current);\r\n                messageIntervalRef.current = null;\r\n            }\r\n            if (transitionTimeoutRef.current) {\r\n                clearTimeout(transitionTimeoutRef.current);\r\n                transitionTimeoutRef.current = null;\r\n            }\r\n            // Reset the initial message flag when AI stops responding\r\n            initialMessageSetRef.current = false;\r\n            return;\r\n        }\r\n\r\n        // Set initial message only if it hasn't been set yet\r\n        if (!initialMessageSetRef.current) {\r\n            const randomMessage = thinkingMessages[Math.floor(Math.random() * thinkingMessages.length)];\r\n            setCurrentThinkingMessage(randomMessage);\r\n            setIsTransitioning(false);\r\n            initialMessageSetRef.current = true;\r\n        }\r\n\r\n        // Set interval to change message every 2 seconds\r\n        messageIntervalRef.current = setInterval(() => {\r\n            // First set transition state to true (starting the fade-out)\r\n            setIsTransitioning(true);\r\n\r\n            // After a short delay, change the message and reset transition state\r\n            transitionTimeoutRef.current = setTimeout(() => {\r\n                // Get current message from the ref to avoid dependency issues\r\n                const currentMessage = currentThinkingMessageRef.current;\r\n\r\n                // Filter out the current message to avoid repetition\r\n                const availableMessages = thinkingMessages.filter(msg => msg !== currentMessage);\r\n\r\n                // Select a random message from the filtered list\r\n                const newRandomIndex = Math.floor(Math.random() * availableMessages.length);\r\n                setCurrentThinkingMessage(availableMessages[newRandomIndex]);\r\n\r\n                // Reset transition state (starting the fade-in)\r\n                setIsTransitioning(false);\r\n            }, 200); // Short delay for the transition effect\r\n        }, 2000);\r\n\r\n        // Clean up interval and timeout on unmount or when dependencies change\r\n        return () => {\r\n            if (messageIntervalRef.current) {\r\n                clearInterval(messageIntervalRef.current);\r\n                messageIntervalRef.current = null;\r\n            }\r\n            if (transitionTimeoutRef.current) {\r\n                clearTimeout(transitionTimeoutRef.current);\r\n                transitionTimeoutRef.current = null;\r\n            }\r\n        };\r\n    }, [isAiResponding]);\r\n\r\n    // Effect to scroll to the bottom of the chat when new messages are added\r\n    useEffect(() => {\r\n        if (chatContainerRef.current) {\r\n            chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\r\n        }\r\n    }, [chatHistory]);\r\n\r\n    // Custom styles for the animations\r\n    const customStyles = `\r\n    @keyframes pulsate {\r\n      0% {\r\n        transform: scale(0.9);\r\n        opacity: 0.8;\r\n      }\r\n      50% {\r\n        transform: scale(1.1);\r\n        opacity: 0.6;\r\n      }\r\n      100% {\r\n        transform: scale(0.9);\r\n        opacity: 0.8;\r\n      }\r\n    }\r\n    \r\n    .pulsating-circle {\r\n      animation: pulsate 1.5s ease-in-out infinite;\r\n    }\r\n\r\n    @keyframes highlightText {\r\n      0% {\r\n        background-position: -200% center;\r\n      }\r\n      100% {\r\n        background-position: 300% center;\r\n      }\r\n    }\r\n\r\n    .highlight-animation {\r\n      background: linear-gradient(to right, rgba(255,255,255,0) 0%, rgba(255,255,255,0.9) 25%, rgba(255,255,255,0.9) 50%, \r\n      rgba(255,255,255,0) 75%);\r\n      background-size: 200% auto;\r\n      color: rgba(255, 255, 255, 0.6);\r\n      background-clip: text;\r\n      -webkit-background-clip: text;\r\n      -webkit-text-fill-color: transparent;\r\n      animation: highlightText 2s linear infinite;\r\n      transition: opacity 0.2s ease-in-out;\r\n    }\r\n\r\n    .message-transition-out {\r\n      opacity: 0.5;\r\n    }\r\n\r\n    .message-transition-in {\r\n      opacity: 1;\r\n    }\r\n    \r\n    /* Add custom word break for long words */\r\n    .break-anywhere {\r\n      overflow-wrap: break-word;\r\n      word-wrap: break-word;\r\n      word-break: break-word;\r\n      hyphens: none;\r\n    }\r\n    `;\r\n\r\n    // Helper to determine if \"View Report\" button should be shown\r\n    const shouldShowViewReport = (message: ChatMessage) => {\r\n        // Check if message is from AI and has scorecard data\r\n        return (\r\n            message.sender === 'ai' &&\r\n            message.scorecard &&\r\n            message.scorecard.length > 0 &&\r\n            // Check if the current question is configured for report responses\r\n            currentQuestionConfig?.questionType === 'subjective'\r\n        );\r\n    };\r\n\r\n    // Helper to check if a message is an error message\r\n    const isErrorMessage = (message: ChatMessage) => {\r\n        return message.sender === 'ai' &&\r\n            (message.isError);\r\n    };\r\n\r\n    // Find the last AI message index\r\n    const lastAiMessageIndex = chatHistory.reduce((lastIndex, message, index) => {\r\n        return message.sender === 'ai' ? index : lastIndex;\r\n    }, -1);\r\n\r\n    return (\r\n        <>\r\n            <style jsx>{customStyles}</style>\r\n            <div\r\n                ref={chatContainerRef}\r\n                className=\"h-full overflow-y-auto w-full hide-scrollbar pb-8\"\r\n            >\r\n                <div className=\"flex flex-col space-y-6 pr-2\">\r\n                    {chatHistory.map((message, index) => (\r\n                        <div key={message.id}>\r\n                            <div\r\n                                className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}\r\n                            >\r\n                                <div\r\n                                    className={`rounded-2xl px-4 py-2 ${message.messageType === 'audio'\r\n                                        ? 'w-full sm:w-[75%]'\r\n                                        : message.messageType === 'code'\r\n                                            ? 'bg-[#282828] text-white w-[90%]'\r\n                                            : `${message.sender === 'user' ? 'bg-[#333333] text-white' : 'bg-[#1A1A1A] text-white'} max-w-[75%]`\r\n                                        }`}\r\n                                >\r\n                                    {message.sender === 'ai' && index === lastAiMessageIndex &&\r\n                                        currentQuestionConfig?.responseType === 'exam' &&\r\n                                        onShowLearnerViewChange &&\r\n                                        isAdminView && (\r\n                                            <div className={`-mx-4 -mt-2 mb-4 px-4 pt-3 pb-2 rounded-t-2xl border-b border-[#35363a] ${message.is_correct !== undefined\r\n                                                ? message.is_correct\r\n                                                    ? 'bg-green-900/40'\r\n                                                    : 'bg-red-900/40'\r\n                                                : 'bg-[#232428]'\r\n                                                }`}>\r\n                                                <div className=\"flex items-center justify-between\">\r\n                                                    <div className=\"flex items-center\">\r\n                                                        {message.is_correct !== undefined && (\r\n                                                            <div className={`mr-2 w-5 h-5 rounded-full flex items-center justify-center ${message.is_correct ? 'bg-green-600' : 'bg-red-600'\r\n                                                                }`}>\r\n                                                                {message.is_correct ? (\r\n                                                                    <svg className=\"w-3 h-3 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={3} d=\"M5 13l4 4L19 7\" />\r\n                                                                    </svg>\r\n                                                                ) : (\r\n                                                                    <svg className=\"w-3 h-3 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={3} d=\"M6 18L18 6M6 6l12 12\" />\r\n                                                                    </svg>\r\n                                                                )}\r\n                                                            </div>\r\n                                                        )}\r\n                                                        <span className=\"text-sm text-gray-300 font-light select-none\">Show result</span>\r\n                                                    </div>\r\n                                                    <button\r\n                                                        onClick={() => onShowLearnerViewChange(!showLearnerView)}\r\n                                                        className={`relative cursor-pointer inline-flex h-6 w-11 items-center rounded-full border transition-colors duration-200 focus:outline-none\r\n                                                            ${!showLearnerView ? 'bg-white border-gray-400' : 'bg-[#444950] border-[#444950]'}\r\n                                                        `}\r\n                                                        aria-pressed={!showLearnerView}\r\n                                                        aria-label=\"Show result toggle\"\r\n                                                    >\r\n                                                        <span\r\n                                                            className={`inline-block h-5 w-5 transform rounded-full bg-black shadow-md transition-transform duration-200\r\n                                                                ${!showLearnerView ? 'translate-x-5' : 'translate-x-1'}\r\n                                                            `}\r\n                                                        />\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    {message.messageType === 'audio' && message.audioData ? (\r\n                                        <div className=\"flex flex-col space-y-2\">\r\n                                            <audio\r\n                                                controls\r\n                                                className=\"w-full\"\r\n                                                src={`data:audio/wav;base64,${message.audioData}`}\r\n                                            />\r\n                                        </div>\r\n                                    ) : message.messageType === 'code' ? (\r\n                                        <CodeMessageDisplay\r\n                                            code={message.content}\r\n                                            language={\r\n                                                Array.isArray(currentQuestionConfig?.codingLanguages) &&\r\n                                                    currentQuestionConfig?.codingLanguages.length > 0\r\n                                                    ? currentQuestionConfig?.codingLanguages[0]\r\n                                                    : undefined\r\n                                            }\r\n                                        />\r\n                                    ) : (\r\n                                        <div>\r\n                                            {message.sender === 'ai' ? (\r\n                                                <div className=\"text-sm font-sans break-words break-anywhere markdown-content\">\r\n                                                    <Markdown\r\n                                                        remarkPlugins={[remarkGfm]}\r\n                                                    >\r\n                                                        {message.content}\r\n                                                    </Markdown>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <pre className=\"text-sm break-words whitespace-pre-wrap break-anywhere font-sans\">{message.content}</pre>\r\n                                            )}\r\n                                            {shouldShowViewReport(message) && (\r\n                                                <div className=\"my-3\">\r\n                                                    <button\r\n                                                        onClick={() => onViewScorecard(message.scorecard || [])}\r\n                                                        className=\"bg-[#333333] text-white px-4 py-2 rounded-full text-xs hover:bg-[#444444] transition-colors cursor-pointer flex items-center\"\r\n                                                    >\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\r\n                                                        </svg>\r\n                                                        View Report\r\n                                                    </button>\r\n                                                </div>\r\n                                            )}\r\n                                            {isErrorMessage(message) && onRetry && (\r\n                                                <div className=\"my-3\">\r\n                                                    <button\r\n                                                        onClick={onRetry}\r\n                                                        className=\"bg-[#333333] text-white px-4 py-2 mb-2 rounded-full text-xs hover:bg-[#444444] transition-colors cursor-pointer flex items-center\"\r\n                                                    >\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\r\n                                                        </svg>\r\n                                                        Retry\r\n                                                    </button>\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n\r\n                    {/* Show \"Preparing report\" as an AI message */}\r\n                    {showPreparingReport && (\r\n                        <div className=\"flex justify-start\">\r\n                            <div className=\"rounded-2xl px-4 py-3 bg-[#1A1A1A] text-white max-w-[75%]\">\r\n                                <div className=\"flex items-center\">\r\n                                    <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-3\"></div>\r\n                                    <div className=\"flex flex-col\">\r\n                                        <p className=\"text-sm font-light\">Preparing report</p>\r\n                                        <p className=\"text-xs text-gray-400 mt-1\">This may take a moment</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* AI typing animation - with pulsating dot and changing text */}\r\n                    {isAiResponding && (\r\n                        <div className=\"flex justify-start items-center my-2 ml-2\">\r\n                            <div className=\"flex items-center justify-center min-w-[20px] min-h-[20px] mr-2\">\r\n                                <div\r\n                                    className=\"w-2.5 h-2.5 bg-white rounded-full pulsating-circle\"\r\n                                ></div>\r\n                            </div>\r\n                            <div className={`${isTransitioning ? 'message-transition-out' : 'message-transition-in'}`}>\r\n                                <span className=\"highlight-animation text-sm\">\r\n                                    {currentThinkingMessage}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Add global styles for animation */}\r\n            <style jsx global>{`\r\n                @keyframes highlightText {\r\n                    0% { background-position: -200% center; }\r\n                    100% { background-position: 300% center; }\r\n                }\r\n                \r\n                .highlight-animation {\r\n                    background: linear-gradient(to right, rgba(255,255,255,0) 0%, rgba(255,255,255,0.9) 25%, rgba(255,255,255,0.9) 50%, rgba(255,255,255,0) 75%);\r\n                    background-size: 200% auto;\r\n                    color: rgba(255, 255, 255, 0.6);\r\n                    background-clip: text;\r\n                    -webkit-background-clip: text;\r\n                    -webkit-text-fill-color: transparent;\r\n                    animation: highlightText 2s linear infinite;\r\n                    transition: opacity 0.2s ease-in-out;\r\n                }\r\n\r\n                /* Markdown content styling */\r\n                .markdown-content {\r\n                    /* General spacing */\r\n                    line-height: 1.6;\r\n                    \r\n                    /* Headings */\r\n                    & h1, & h2, & h3, & h4, & h5, & h6 {\r\n                        margin-top: 1.5em;\r\n                        margin-bottom: 0.75em;\r\n                        line-height: 1.3;\r\n                        font-weight: 400;\r\n                    }\r\n                    \r\n                    & h1 {\r\n                        font-size: 1.5rem;\r\n                    }\r\n                    \r\n                    & h2 {\r\n                        font-size: 1.3rem;\r\n                    }\r\n                    \r\n                    & h3 {\r\n                        font-size: 1.2rem;\r\n                    }\r\n                    \r\n                    & h4, & h5, & h6 {\r\n                        font-size: 1.1rem;\r\n                    }\r\n                    \r\n                    /* Paragraphs */\r\n                    & p {\r\n                        margin-bottom: 1em;\r\n                    }\r\n                    \r\n                    /* Lists */\r\n                    & ul, & ol {\r\n                        margin-top: 0.5em;\r\n                        margin-bottom: 1em;\r\n                        padding-left: 1.5em;\r\n                    }\r\n                    \r\n                    & li {\r\n                        margin-bottom: 0.3em;\r\n                    }\r\n                    \r\n                    & li > ul, & li > ol {\r\n                        margin-top: 0.3em;\r\n                        margin-bottom: 0.5em;\r\n                    }\r\n                    \r\n                    /* Blockquotes */\r\n                    & blockquote {\r\n                        border-left: 3px solid #444;\r\n                        padding-left: 1em;\r\n                        margin-left: 0;\r\n                        margin-right: 0;\r\n                        margin-top: 1em;\r\n                        margin-bottom: 1em;\r\n                        color: #bbb;\r\n                    }\r\n                    \r\n                    /* Code blocks */\r\n                    & pre {\r\n                        margin-top: 0.8em;\r\n                        margin-bottom: 1em;\r\n                        padding: 0.8em;\r\n                        background-color: #282828;\r\n                        border-radius: 4px;\r\n                        overflow-x: auto;\r\n                    }\r\n                    \r\n                    & code {\r\n                        background-color: rgba(40, 40, 40, 0.6);\r\n                        border-radius: 3px;\r\n                        padding: 0.2em 0.4em;\r\n                        font-size: 0.9em;\r\n                    }\r\n                    \r\n                    & pre > code {\r\n                        background-color: transparent;\r\n                        padding: 0;\r\n                        border-radius: 0;\r\n                    }\r\n                    \r\n                    /* Tables */\r\n                    & table {\r\n                        margin-top: 1em;\r\n                        margin-bottom: 1em;\r\n                        border-collapse: collapse;\r\n                        width: 100%;\r\n                    }\r\n                    \r\n                    & th, & td {\r\n                        border: 1px solid #444;\r\n                        padding: 0.5em 0.8em;\r\n                        text-align: left;\r\n                    }\r\n                    \r\n                    & th {\r\n                        background-color: #2d2d2d;\r\n                    }\r\n                    \r\n                    /* Horizontal rule */\r\n                    & hr {\r\n                        margin-top: 1.5em;\r\n                        margin-bottom: 1.5em;\r\n                        border: 0;\r\n                        border-top: 1px solid #444;\r\n                    }\r\n                    \r\n                    /* Images */\r\n                    & img {\r\n                        max-width: 100%;\r\n                        margin-top: 0.8em;\r\n                        margin-bottom: 0.8em;\r\n                    }\r\n                    \r\n                    /* Links */\r\n                    & a {\r\n                        color: #5e9eff;\r\n                        text-decoration: none;\r\n                    }\r\n                    \r\n                    & a:hover {\r\n                        text-decoration: underline;\r\n                    }\r\n                }\r\n            `}</style>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ChatHistoryView;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1291, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/AudioInputComponent.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { Mic, Play, Send, Pause, Trash2 } from 'lucide-react';\r\n\r\ninterface AudioInputComponentProps {\r\n    onAudioSubmit: (audioBlob: Blob) => void;\r\n    isSubmitting: boolean;\r\n    maxDuration?: number;\r\n    isDisabled?: boolean;\r\n}\r\n\r\n// Shared waveform rendering function to avoid duplication\r\nconst renderWaveformBar = (value: number, index: number, total: number, isPlayed: boolean = false) => {\r\n    // Apply exponential scaling to emphasize differences\r\n    const scaledHeight = Math.pow(value, 0.7) * 100;\r\n    return (\r\n        <div\r\n            key={index}\r\n            className=\"h-full flex items-end justify-center\"\r\n            style={{ width: `${100 / total}%` }}\r\n        >\r\n            <div\r\n                className={`w-1 rounded-sm ${isPlayed ? 'bg-gradient-to-t from-white to-white/60' : 'bg-gradient-to-t from-white to-white/40'}`}\r\n                style={{\r\n                    height: `${Math.max(scaledHeight, 3)}%`\r\n                }}\r\n            ></div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Live Recording Waveform component\r\nconst LiveWaveform = ({ waveformData }: { waveformData: number[] }) => {\r\n    return (\r\n        <div className=\"w-full h-full flex items-end justify-between px-1 mb-4\">\r\n            {waveformData.map((value, index) =>\r\n                renderWaveformBar(value, index, waveformData.length)\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n// Snapshot Waveform component for playback\r\nconst SnapshotWaveform = ({\r\n    waveformData,\r\n    playbackProgress\r\n}: {\r\n    waveformData: number[],\r\n    playbackProgress: number\r\n}) => {\r\n    return (\r\n        <div className=\"w-full h-full flex items-end justify-between relative px-1 mb-4\">\r\n            {/* Playback progress overlay */}\r\n            <div\r\n                className=\"absolute top-0 bottom-0 left-0 bg-white opacity-20 z-10 pointer-events-none\"\r\n                style={{ width: `${playbackProgress * 100}%` }}\r\n            ></div>\r\n\r\n            {waveformData.map((value, index) => {\r\n                // Determine if this bar is in the played portion\r\n                const isPlayed = (index / waveformData.length) < playbackProgress;\r\n                return renderWaveformBar(value, index, waveformData.length, isPlayed);\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\n// Function to get supported MIME type\r\nconst getSupportedMimeType = () => {\r\n    const types = [\r\n        'audio/webm',\r\n        'audio/mp4',\r\n        'audio/aac',\r\n        'audio/ogg;codecs=opus',\r\n        ''  // empty string means browser default\r\n    ];\r\n\r\n    for (const type of types) {\r\n        if (!type || MediaRecorder.isTypeSupported(type)) {\r\n            return type;\r\n        }\r\n    }\r\n    return '';  // Return empty string as fallback (browser default)\r\n};\r\n\r\nexport default function AudioInputComponent({\r\n    onAudioSubmit,\r\n    isSubmitting,\r\n    maxDuration = 120,\r\n    isDisabled = false\r\n}: AudioInputComponentProps) {\r\n    // Basic states\r\n    const [isRecording, setIsRecording] = useState(false);\r\n    const [recordingDuration, setRecordingDuration] = useState(0);\r\n    const [audioBlob, setAudioBlob] = useState<Blob | null>(null);\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    const [playbackProgress, setPlaybackProgress] = useState(0);\r\n    const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\r\n\r\n    // Separate waveform data states for live recording and snapshot\r\n    const [liveWaveformData, setLiveWaveformData] = useState<number[]>([]);\r\n    const [snapshotWaveformData, setSnapshotWaveformData] = useState<number[]>([]);\r\n\r\n    // Refs\r\n    const mediaRecorderRef = useRef<MediaRecorder | null>(null);\r\n    const audioChunksRef = useRef<Blob[]>([]);\r\n    const audioContextRef = useRef<AudioContext | null>(null);\r\n    const analyserRef = useRef<AnalyserNode | null>(null);\r\n    const audioPlayerRef = useRef<HTMLAudioElement | null>(null);\r\n    const animationFrameRef = useRef<number | null>(null);\r\n    const timerRef = useRef<NodeJS.Timeout | null>(null);\r\n    const streamRef = useRef<MediaStream | null>(null);\r\n\r\n    // Initialize audio player\r\n    useEffect(() => {\r\n        return () => {\r\n            // Clean up on unmount\r\n            if (streamRef.current) {\r\n                streamRef.current.getTracks().forEach(track => track.stop());\r\n            }\r\n\r\n            if (animationFrameRef.current) {\r\n                cancelAnimationFrame(animationFrameRef.current);\r\n            }\r\n\r\n            if (timerRef.current) {\r\n                clearInterval(timerRef.current);\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    // Start recording function\r\n    const startRecording = async () => {\r\n        try {\r\n            // Reset everything\r\n            setLiveWaveformData([]);\r\n            setSnapshotWaveformData([]);\r\n            setAudioBlob(null);\r\n            audioChunksRef.current = [];\r\n\r\n            // Create audio context\r\n            const audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\r\n            audioContextRef.current = audioContext;\r\n\r\n            // Get microphone stream\r\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n            streamRef.current = stream;\r\n\r\n            // Create and configure analyser\r\n            const analyser = audioContext.createAnalyser();\r\n            analyser.fftSize = 256;\r\n            analyserRef.current = analyser;\r\n\r\n            // Connect microphone stream to analyser\r\n            const source = audioContext.createMediaStreamSource(stream);\r\n            source.connect(analyser);\r\n\r\n            // Replace the MediaRecorder initialization with:\r\n            const mimeType = getSupportedMimeType();\r\n            const mediaRecorder = new MediaRecorder(stream,\r\n                mimeType ? { mimeType } : undefined\r\n            );\r\n            mediaRecorderRef.current = mediaRecorder;\r\n\r\n            // When data becomes available, add it to our array\r\n            mediaRecorder.ondataavailable = (event) => {\r\n                if (event.data.size > 0) {\r\n                    audioChunksRef.current.push(event.data);\r\n                }\r\n            };\r\n\r\n            // When recording stops\r\n            mediaRecorder.onstop = () => {\r\n                // Create audio blob from recorded chunks\r\n                const audioBlob = new Blob(audioChunksRef.current, { type: mimeType });\r\n                setAudioBlob(audioBlob);\r\n\r\n                // Set up audio player\r\n                if (audioPlayerRef.current) {\r\n                    const audioUrl = URL.createObjectURL(audioBlob);\r\n                    audioPlayerRef.current.src = audioUrl;\r\n                } else {\r\n                    const audioPlayer = new Audio();\r\n                    audioPlayer.src = URL.createObjectURL(audioBlob);\r\n                    audioPlayerRef.current = audioPlayer;\r\n\r\n                    // Set up event listeners\r\n                    audioPlayer.addEventListener('ended', () => {\r\n                        setIsPlaying(false);\r\n                        setPlaybackProgress(0);\r\n                    });\r\n\r\n                    audioPlayer.addEventListener('timeupdate', () => {\r\n                        if (audioPlayer.duration) {\r\n                            setPlaybackProgress(audioPlayer.currentTime / audioPlayer.duration);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // Generate snapshot waveform from the recorded audio\r\n                generateWaveformFromAudio(audioBlob);\r\n\r\n                // Clean up\r\n                if (streamRef.current) {\r\n                    streamRef.current.getTracks().forEach(track => track.stop());\r\n                }\r\n            };\r\n\r\n            // Set recording state first\r\n            setIsRecording(true);\r\n\r\n            // Start recording\r\n            mediaRecorder.start();\r\n            setRecordingDuration(0);\r\n\r\n            // Set timer for recording duration\r\n            timerRef.current = setInterval(() => {\r\n                setRecordingDuration(prev => {\r\n                    if (prev >= maxDuration - 1) {\r\n                        stopRecording();\r\n                        return maxDuration;\r\n                    }\r\n                    return prev + 1;\r\n                });\r\n            }, 1000);\r\n\r\n            // Start visualization after setting recording state\r\n            updateLiveWaveform(analyser);\r\n        } catch (error) {\r\n            console.error('Error starting recording:', error);\r\n        }\r\n    };\r\n\r\n    // Update the live waveform during recording\r\n    const updateLiveWaveform = (analyser: AnalyserNode) => {\r\n        // This function gets called continuously by requestAnimationFrame\r\n        const draw = () => {\r\n            // Get time domain data for waveform visualization\r\n            const bufferLength = analyser.fftSize;\r\n            const dataArray = new Uint8Array(bufferLength);\r\n            analyser.getByteTimeDomainData(dataArray);\r\n\r\n            // Process the data to create the waveform (sample to ~40 points for visualization)\r\n            const newWaveformData = [];\r\n            const step = Math.floor(bufferLength / 40) || 1;\r\n\r\n            for (let i = 0; i < bufferLength; i += step) {\r\n                let sum = 0;\r\n                let count = 0;\r\n\r\n                // Average a few points together\r\n                for (let j = 0; j < step && i + j < bufferLength; j++) {\r\n                    // For time domain data, we want the absolute deviation from 128 (midpoint)\r\n                    sum += Math.abs(dataArray[i + j] - 128);\r\n                    count++;\r\n                }\r\n\r\n                // Normalize to 0-1 range\r\n                const average = count > 0 ? sum / count / 128 : 0;\r\n                newWaveformData.push(average);\r\n\r\n                // Limit to 40 data points\r\n                if (newWaveformData.length >= 40) break;\r\n            }\r\n\r\n            // Update live waveform state\r\n            setLiveWaveformData(newWaveformData);\r\n\r\n            // Continue the animation loop\r\n            animationFrameRef.current = requestAnimationFrame(draw);\r\n        };\r\n\r\n        // Start the animation loop\r\n        animationFrameRef.current = requestAnimationFrame(draw);\r\n    };\r\n\r\n    // Stop recording\r\n    const stopRecording = () => {\r\n        if (mediaRecorderRef.current && isRecording) {\r\n            mediaRecorderRef.current.stop();\r\n            setIsRecording(false);\r\n\r\n            if (timerRef.current) {\r\n                clearInterval(timerRef.current);\r\n            }\r\n\r\n            // Cancel animation frame here\r\n            if (animationFrameRef.current) {\r\n                cancelAnimationFrame(animationFrameRef.current);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Toggle audio playback\r\n    const togglePlayback = () => {\r\n        if (!audioPlayerRef.current || !audioBlob) return;\r\n\r\n        if (isPlaying) {\r\n            audioPlayerRef.current.pause();\r\n            setIsPlaying(false);\r\n        } else {\r\n            audioPlayerRef.current.play();\r\n            setIsPlaying(true);\r\n\r\n            // If snapshot waveform data is empty, try to generate it from the recorded audio\r\n            if (snapshotWaveformData.length === 0 && audioBlob) {\r\n                generateWaveformFromAudio(audioBlob);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Function to generate snapshot waveform data from an audio blob\r\n    const generateWaveformFromAudio = async (blob: Blob) => {\r\n        try {\r\n            // Create a new audio context\r\n            const audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\r\n\r\n            // Convert blob to array buffer\r\n            const arrayBuffer = await blob.arrayBuffer();\r\n\r\n            // Decode the audio data\r\n            const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\r\n\r\n            // Get the channel data\r\n            const channelData = audioBuffer.getChannelData(0);\r\n\r\n            // Sample the audio data to create waveform\r\n            const samples = 40;\r\n            const blockSize = Math.floor(channelData.length / samples);\r\n            const sampledData = [];\r\n\r\n            for (let i = 0; i < samples; i++) {\r\n                let sum = 0;\r\n                for (let j = 0; j < blockSize; j++) {\r\n                    const index = (i * blockSize) + j;\r\n                    if (index < channelData.length) {\r\n                        sum += Math.abs(channelData[index]);\r\n                    }\r\n                }\r\n                // Average and normalize (audio data is -1 to 1)\r\n                // Use a different normalization factor to accentuate differences\r\n                const normalized = sum / (blockSize * 0.8); // Increase visibility by reducing divisor\r\n                sampledData.push(Math.min(normalized, 1)); // Cap at 1\r\n            }\r\n\r\n            // Apply some smoothing to make the waveform look more natural\r\n            const smoothedData = [];\r\n            for (let i = 0; i < sampledData.length; i++) {\r\n                const prev = i > 0 ? sampledData[i - 1] : sampledData[i];\r\n                const current = sampledData[i];\r\n                const next = i < sampledData.length - 1 ? sampledData[i + 1] : sampledData[i];\r\n                // Weighted average with current sample having more weight\r\n                smoothedData.push((prev * 0.2) + (current * 0.6) + (next * 0.2));\r\n            }\r\n\r\n            // Update snapshot waveform data\r\n            setSnapshotWaveformData(smoothedData);\r\n\r\n            // Close the audio context\r\n            audioContext.close();\r\n        } catch (error) {\r\n            console.error('Error generating waveform:', error);\r\n        }\r\n    };\r\n\r\n    // Seek in audio playback\r\n    const handleSeek = (e: React.MouseEvent<HTMLDivElement>) => {\r\n        if (!audioPlayerRef.current || !audioBlob) return;\r\n\r\n        const container = e.currentTarget;\r\n        const rect = container.getBoundingClientRect();\r\n        const clickPosition = e.clientX - rect.left;\r\n        const containerWidth = rect.width;\r\n        const seekPercentage = clickPosition / containerWidth;\r\n\r\n        if (audioPlayerRef.current) {\r\n            audioPlayerRef.current.currentTime = seekPercentage * audioPlayerRef.current.duration;\r\n            setPlaybackProgress(seekPercentage);\r\n\r\n            if (isPlaying) {\r\n                audioPlayerRef.current.play();\r\n            }\r\n        }\r\n    };\r\n\r\n    // Submit recorded audio\r\n    const handleSubmit = () => {\r\n        if (audioBlob && !isSubmitting) {\r\n            onAudioSubmit(audioBlob);\r\n            setAudioBlob(null);\r\n            setLiveWaveformData([]);\r\n            setSnapshotWaveformData([]);\r\n            // Close the delete confirmation dialog if it's open\r\n            setShowDeleteConfirmation(false);\r\n        }\r\n    };\r\n\r\n    // Format time for display\r\n    const formatTime = (seconds: number) => {\r\n        const mins = Math.floor(seconds / 60);\r\n        const secs = Math.floor(seconds % 60);\r\n        return `${mins}:${secs < 10 ? '0' : ''}${secs}`;\r\n    };\r\n\r\n    // New function to handle delete button click\r\n    const handleDeleteClick = () => {\r\n        setShowDeleteConfirmation(true);\r\n    };\r\n\r\n    // New function to confirm deletion\r\n    const confirmDelete = () => {\r\n        // Stop playback if it's playing\r\n        if (isPlaying && audioPlayerRef.current) {\r\n            audioPlayerRef.current.pause();\r\n            setIsPlaying(false);\r\n        }\r\n\r\n        // Reset all audio-related states\r\n        setAudioBlob(null);\r\n        setLiveWaveformData([]);\r\n        setSnapshotWaveformData([]);\r\n        setPlaybackProgress(0);\r\n\r\n        // Close confirmation dialog\r\n        setShowDeleteConfirmation(false);\r\n\r\n        // Clear audio player source if it exists\r\n        if (audioPlayerRef.current) {\r\n            audioPlayerRef.current.src = '';\r\n        }\r\n    };\r\n\r\n    // New function to cancel deletion\r\n    const cancelDelete = () => {\r\n        setShowDeleteConfirmation(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"relative\">\r\n            {/* Recording status and timer */}\r\n            {isRecording && (\r\n                <div className=\"absolute -top-10 left-0 right-0 text-center flex items-center justify-center z-20\">\r\n                    <div className=\"bg-black/80 rounded-full px-4 py-2 shadow-md flex items-center\">\r\n                        <div className=\"w-2 h-2 bg-red-500 rounded-full mr-2 animate-pulse\"></div>\r\n                        <span className=\"text-red-500 font-light text-sm\">Recording {formatTime(recordingDuration)}</span>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Delete confirmation dialog */}\r\n            {showDeleteConfirmation && (\r\n                <div className=\"absolute -top-20 left-0 right-0 bg-[#222222] rounded-lg p-3 shadow-lg z-20\">\r\n                    <p className=\"text-white text-sm mb-2\">Are you sure you want to delete this recording?</p>\r\n                    <div className=\"flex justify-end space-x-2\">\r\n                        <button\r\n                            className=\"text-white text-xs bg-transparent hover:bg-[#333333] px-2 py-1 rounded-md cursor-pointer\"\r\n                            onClick={cancelDelete}\r\n                        >\r\n                            Cancel\r\n                        </button>\r\n                        <button\r\n                            className=\"text-white text-xs bg-red-500 hover:bg-red-600 px-2 py-1 rounded-md cursor-pointer\"\r\n                            onClick={confirmDelete}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Main container */}\r\n            <div className=\"relative flex items-center bg-[#111111] rounded-full overflow-hidden border border-[#222222] px-3 py-2\">\r\n                {/* Record/Play/Stop button */}\r\n                {isSubmitting ? (\r\n                    <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n                ) : (\r\n                    <button\r\n                        className=\"w-8 h-8 sm:w-10 sm:h-10 flex-shrink-0 rounded-full flex items-center justify-center bg-[#222222] text-white hover:bg-[#333333] cursor-pointer mr-3\"\r\n                        onClick={isRecording ? stopRecording : audioBlob ? togglePlayback : startRecording}\r\n                        disabled={isDisabled}\r\n                        type=\"button\"\r\n                    >\r\n                        {isRecording ? (\r\n                            <div className=\"w-3 h-3 bg-white\"></div>\r\n                        ) : audioBlob ? (\r\n                            isPlaying ? <Pause size={16} /> : <><Play size={14} className=\"sm:hidden\" /> <Play size={16} className=\"hidden sm:block\" /></>\r\n                        ) : (\r\n                            <Mic size={16} />\r\n                        )}\r\n                    </button>\r\n                )}\r\n\r\n                {/* Redesigned layout with waveform extending full width */}\r\n                <div className=\"flex-1 relative\">\r\n                    {/* Flex container for waveform and submit button */}\r\n                    <div className=\"flex w-full items-center\">\r\n                        {/* Waveform container that adjusts width based on recording state */}\r\n                        <div\r\n                            className={`h-10 flex items-center justify-center relative cursor-pointer ${audioBlob\r\n                                ? 'flex-1 max-w-[calc(100%-80px)] sm:max-w-none' // Add max-width constraint on mobile\r\n                                : 'w-full'\r\n                                }`}\r\n                            onClick={audioBlob && !isRecording ? handleSeek : undefined}\r\n                        >\r\n                            {/* Waveform visualization - show different components based on state */}\r\n                            {isRecording && liveWaveformData.length > 0 ? (\r\n                                <LiveWaveform waveformData={liveWaveformData} />\r\n                            ) : audioBlob && snapshotWaveformData.length > 0 ? (\r\n                                <SnapshotWaveform\r\n                                    waveformData={snapshotWaveformData}\r\n                                    playbackProgress={playbackProgress}\r\n                                />\r\n                            ) : (\r\n                                <div className=\"text-gray-400 text-xs sm:text-sm\">Click the microphone to start recording</div>\r\n                            )}\r\n                        </div>\r\n\r\n                        {/* Action buttons - added delete button */}\r\n                        {audioBlob && (\r\n                            <div className=\"ml-2 sm:ml-3 flex-shrink-0 flex space-x-1 sm:space-x-2\">\r\n                                {/* Delete button */}\r\n                                <button\r\n                                    className=\"w-8 h-8 sm:w-10 sm:h-10 rounded-full flex items-center justify-center bg-[#222222] text-white hover:bg-[#333333] cursor-pointer\"\r\n                                    onClick={handleDeleteClick}\r\n                                    disabled={isSubmitting || isDisabled}\r\n                                    aria-label=\"Delete audio\"\r\n                                    type=\"button\"\r\n                                >\r\n                                    <Trash2 size={14} className=\"sm:hidden\" />\r\n                                    <Trash2 size={16} className=\"hidden sm:block\" />\r\n                                </button>\r\n\r\n                                {/* Submit button */}\r\n                                <button\r\n                                    className=\"w-8 h-8 sm:w-10 sm:h-10 rounded-full flex items-center justify-center bg-white cursor-pointer\"\r\n                                    onClick={handleSubmit}\r\n                                    disabled={isSubmitting || isDisabled}\r\n                                    aria-label=\"Submit audio\"\r\n                                    type=\"button\"\r\n                                >\r\n                                    {isSubmitting ? (\r\n                                        <div className=\"w-4 h-4 sm:w-5 sm:h-5 border-2 border-black border-t-transparent rounded-full animate-spin\"></div>\r\n                                    ) : (\r\n                                        <>\r\n                                            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"sm:hidden\">\r\n                                                <path d=\"M5 12H19M19 12L12 5M19 12L12 19\" stroke=\"black\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                                            </svg>\r\n                                            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"hidden sm:block\">\r\n                                                <path d=\"M5 12H19M19 12L12 5M19 12L12 19\" stroke=\"black\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                                            </svg>\r\n                                        </>\r\n                                    )}\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2008, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/CodeEditorView.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from 'react';\r\nimport Editor, { Monaco } from '@monaco-editor/react';\r\nimport { Play, Send, Terminal, ArrowLeft, X } from 'lucide-react';\r\nimport Toast from './Toast';\r\n\r\ninterface CodeEditorViewProps {\r\n    initialCode?: Record<string, string>;\r\n    languages?: string[];\r\n    handleCodeSubmit: (code: Record<string, string>) => void;\r\n    onCodeRun?: (previewContent: string, output: string, executionTime?: string, isRunning?: boolean) => void;\r\n}\r\n\r\n// Add interface for the ref methods\r\nexport interface CodeEditorViewHandle {\r\n    getCurrentCode: () => Record<string, string>;\r\n}\r\n\r\n// Preview component that can be used in a separate column\r\nexport interface CodePreviewProps {\r\n    isRunning: boolean;\r\n    previewContent: string;\r\n    output: string;\r\n    isWebPreview: boolean;\r\n    executionTime?: string;\r\n    onClear?: () => void;\r\n    onBack?: () => void;\r\n    isMobileView?: boolean;\r\n}\r\n\r\nexport const CodePreview: React.FC<CodePreviewProps> = ({\r\n    isRunning,\r\n    previewContent,\r\n    output,\r\n    isWebPreview,\r\n    executionTime,\r\n    onClear,\r\n    onBack,\r\n    isMobileView = false\r\n}) => {\r\n    const [isIframeLoading, setIsIframeLoading] = useState(true);\r\n\r\n    // Reset loading state when new content is provided\r\n    useEffect(() => {\r\n        if (previewContent) {\r\n            setIsIframeLoading(true);\r\n        }\r\n    }, [previewContent]);\r\n\r\n    // Format console output with syntax highlighting\r\n    const formatConsoleOutput = (text: string) => {\r\n        if (!text) return 'Run your code to see output here';\r\n\r\n        // Replace [ERROR], [WARN], and [INFO] tags with styled spans\r\n        return text\r\n            .replace(/\\[ERROR\\]/g, '<span class=\"text-red-500 font-bold\">[ERROR]</span>')\r\n            .replace(/\\[WARN\\]/g, '<span class=\"text-yellow-500 font-bold\">[WARN]</span>')\r\n            .replace(/\\[INFO\\]/g, '<span class=\"text-blue-500 font-bold\">[INFO]</span>')\r\n            .replace(/---.*?---/g, '<span class=\"text-gray-400\">$&</span>')\r\n            .replace(/→ Return value:/g, '<span class=\"text-green-500 font-semibold\">→ Return value:</span>')\r\n            .replace(/(Error:[\\s\\S]*?)(?=\\n\\n|$)/g, '<span class=\"text-red-500\">$1</span>')\r\n            .replace(/(Compilation Error:[\\s\\S]*?)(?=\\n\\n|$)/g, '<span class=\"text-red-500\">$1</span>');\r\n    };\r\n\r\n    // Create a modified HTML content with a loading indicator\r\n    const enhancedPreviewContent = isWebPreview && previewContent ? `\r\n        ${previewContent.replace(\r\n        '</body>',\r\n        `\r\n            <style>\r\n                #iframe-loading-indicator {\r\n                    position: fixed;\r\n                    top: 0;\r\n                    left: 0;\r\n                    width: 100%;\r\n                    height: 100%;\r\n                    background-color: #1a1a1a;\r\n                    display: flex;\r\n                    justify-content: center;\r\n                    align-items: center;\r\n                    z-index: 9999;\r\n                    transition: opacity 0.3s ease-out;\r\n                }\r\n                #iframe-loading-indicator.hidden {\r\n                    opacity: 0;\r\n                    pointer-events: none;\r\n                }\r\n                .iframe-spinner {\r\n                    width: 40px;\r\n                    height: 40px;\r\n                    border: 4px solid #2a2a2a;\r\n                    border-top: 4px solid #a0a0a0;\r\n                    border-radius: 50%;\r\n                    animation: spin 1s linear infinite;\r\n                }\r\n                @keyframes spin {\r\n                    0% { transform: rotate(0deg); }\r\n                    100% { transform: rotate(360deg); }\r\n                }\r\n            </style>\r\n            <div id=\"iframe-loading-indicator\">\r\n                <div class=\"iframe-spinner\"></div>\r\n            </div>\r\n            <script>\r\n                // Hide the loading indicator when the page is fully loaded\r\n                window.addEventListener('load', function() {\r\n                    setTimeout(function() {\r\n                        document.getElementById('iframe-loading-indicator').classList.add('hidden');\r\n                    }, 500); // Small delay to ensure everything is rendered\r\n                });\r\n            </script>\r\n            </body>\r\n            `\r\n    )}\r\n    ` : previewContent;\r\n\r\n    return (\r\n        <div className={`flex-1 flex flex-col bg-[#111111] overflow-hidden h-full ${isMobileView ? 'mobile-preview-container' : ''}`}>\r\n            <div className=\"px-4 bg-[#222222] text-white font-medium flex justify-between items-center\">\r\n                <div className=\"flex items-center\">\r\n                    <span className=\"text-sm py-2\">{isWebPreview ? 'Preview' : 'Output'}</span>\r\n                </div>\r\n                <div className=\"items-center gap-2 flex\">\r\n                    {(!isWebPreview && output && onClear) && (\r\n                        <button\r\n                            onClick={onClear}\r\n                            className=\"hidden md:block text-sm text-gray-400 hover:text-white px-2 py-1 rounded hover:bg-[#333333] transition-colors cursor-pointer\"\r\n                            aria-label=\"Clear output\"\r\n                        >\r\n                            Clear\r\n                        </button>\r\n                    )}\r\n                    {isMobileView && onBack && (\r\n                        <button\r\n                            onClick={onBack}\r\n                            className=\"text-sm text-gray-400 hover:text-white p-1 rounded hover:bg-[#333333] transition-colors\"\r\n                            aria-label=\"Close preview\"\r\n                        >\r\n                            <X size={16} />\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className=\"flex-1 overflow-auto\">\r\n                {isRunning ? (\r\n                    <div className=\"flex items-center justify-center h-full\">\r\n                        <div className=\"animate-spin rounded-full h-6 w-6 border-t-2 border-white\"></div>\r\n                    </div>\r\n                ) : !previewContent && !output ? (\r\n                    <div className=\"flex flex-col items-center justify-center h-full preview-placeholder\">\r\n                        <svg width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path d=\"M14 4L18 8M18 8V18M18 8H8M6 20L10 16M10 16H20M10 16V6\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                        </svg>\r\n                        <p>Run your code to see the preview here</p>\r\n                        <p className=\"text-xs mt-2 text-center px-4\">For HTML/CSS/JavaScript/React, you will see a live preview. For other languages, you will see the console output.</p>\r\n                    </div>\r\n                ) : isWebPreview ? (\r\n                    <div className=\"relative w-full h-full\">\r\n                        {isIframeLoading && (\r\n                            <div className=\"absolute inset-0 flex items-center justify-center bg-white z-10\">\r\n                                <div className=\"animate-spin rounded-full h-10 w-10 border-4 border-[#f3f3f3] border-t-[#3498db]\"></div>\r\n                            </div>\r\n                        )}\r\n                        <iframe\r\n                            srcDoc={enhancedPreviewContent}\r\n                            title=\"Code Preview\"\r\n                            className=\"w-full h-full bg-white\"\r\n                            sandbox=\"allow-scripts\"\r\n                            onLoad={() => setIsIframeLoading(false)}\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"p-4 text-white font-mono text-sm terminal-output bg-[#1A1A1A]\">\r\n                        <div\r\n                            className=\"whitespace-pre-wrap\"\r\n                            dangerouslySetInnerHTML={{ __html: formatConsoleOutput(output) }}\r\n                        />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst DEFAULT_LANGUAGE_CONTENTS = {\r\n    'javascript': 'function changeText() {\\n  document.getElementById(\"greeting\").textContent = \"Hello from JavaScript!\";\\n}\\n\\nconsole.log(\"Hello, world!\");\\n',\r\n    'html': '<!DOCTYPE html>\\n<html>\\n<head>\\n  <title>My Page</title>\\n</head>\\n<body>\\n  <h1 id=\"greeting\">Hello, world!</h1>\\n  <button onclick=\"changeText()\">Change Text</button>\\n</body>\\n</html>\\n',\r\n    'css': 'body {\\n  font-family: sans-serif;\\n  margin: 20px;\\n}\\n\\nh1 {\\n  color: navy;\\n}\\n',\r\n    'react': `// === REACT PLAYGROUND GUIDE ===\r\n// \r\n// This playground runs React 18 directly in the browser using Babel for JSX transformation.\r\n// Here's how to use this editor effectively:\r\n//\r\n// 1. COMPONENT DEFINITION:\r\n//    - Define your components using either function or class syntax\r\n//    - Example: function MyComponent() { return <div>Hello</div>; }\r\n//\r\n// 2. USING HOOKS:\r\n//    - React hooks work normally (useState, useEffect, etc.)\r\n//    - Access them directly from the React object (React.useState)\r\n//\r\n// 3. RENDERING TO DOM:\r\n//    - IMPORTANT: Always render your main component to the \"root\" div\r\n//    - Use React 18's createRoot API as shown below\r\n// \r\n// 4. LIMITATIONS:\r\n//    - No npm imports (use only built-in React functionality)\r\n//    - Libraries like React Router won't work here\r\n//    - For CSS, add inline styles or use the CSS tab\r\n//\r\n// The example below demonstrates a basic counter component:\r\n// ======\r\n\r\n// Define your main component\r\nfunction App() {\r\n  // Use React hooks just like in a normal React app\r\n  const [count, setCount] = React.useState(0);\r\n\r\n  return (\r\n    <div style={{ fontFamily: \"sans-serif\", textAlign: \"center\", marginTop: \"50px\" }}>\r\n      <h1>Hello from React!</h1>\r\n      <p>You clicked the button {count} times</p>\r\n      <button \r\n        onClick={() => setCount(count + 1)}\r\n        style={{\r\n          padding: \"8px 16px\",\r\n          borderRadius: \"4px\",\r\n          backgroundColor: \"#0070f3\",\r\n          color: \"white\",\r\n          border: \"none\",\r\n          cursor: \"pointer\"\r\n        }}\r\n      >\r\n        Click me\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// REQUIRED: Create a root and render your App component\r\n// This is the React 18 way of rendering components\r\nconst rootElement = document.getElementById(\"root\");\r\nconst root = ReactDOM.createRoot(rootElement);\r\nroot.render(<App />);\r\n\r\n// You can add more components above the App component\r\n// Just make sure your final component is rendered to the DOM\r\n`,\r\n    'python': 'print(\"Hello, world!\")\\n',\r\n    'java': 'public class Main {\\n  public static void main(String[] args) {\\n    System.out.println(\"Hello, world!\");\\n  }\\n}\\n',\r\n    'c': '#include <stdio.h>\\n\\nint main() {\\n  printf(\"Hello, world!\\\\n\");\\n  return 0;\\n}\\n',\r\n    'cpp': '#include <iostream>\\n\\nint main() {\\n  std::cout << \"Hello, world!\" << std::endl;\\n  return 0;\\n}\\n',\r\n    'csharp': 'using System;\\n\\nclass Program {\\n  static void Main() {\\n    Console.WriteLine(\"Hello, world!\");\\n  }\\n}\\n',\r\n    'ruby': 'puts \"Hello, world!\"\\n',\r\n    'typescript': 'const message: string = \"Hello, world!\";\\nconsole.log(message);\\n',\r\n    'php': '<?php\\necho \"Hello, world!\";\\n?>\\n',\r\n    'nodejs': `// Node.js example\r\n// Data processing example\r\nconst users = [\r\n  { id: 1, name: 'Alice', age: 28, role: 'developer' },\r\n  { id: 2, name: 'Bob', age: 35, role: 'manager' },\r\n  { id: 3, name: 'Charlie', age: 24, role: 'designer' },\r\n  { id: 4, name: 'Diana', age: 31, role: 'developer' },\r\n  { id: 5, name: 'Evan', age: 40, role: 'admin' }\r\n];\r\n\r\n// Filter developers\r\nconst developers = users.filter(user => user.role === 'developer');\r\nconsole.log('Developers in the team:');\r\ndevelopers.forEach(dev => console.log(\\` - \\${dev.name}, \\${dev.age} years old\\`));\r\n\r\n// Calculate average age\r\nconst totalAge = users.reduce((sum, user) => sum + user.age, 0);\r\nconst averageAge = totalAge / users.length;\r\nconsole.log(\\`\\nAverage team age: \\${averageAge.toFixed(1)} years\\`);\r\n\r\n// Find oldest team member\r\nconst oldest = users.reduce((oldest, user) => user.age > oldest.age ? user : oldest, users[0]);\r\nconsole.log(\\`Oldest team member: \\${oldest.name} (\\${oldest.age} years old, \\${oldest.role})\\`);`,\r\n    'sql': `-- SQL PLAYGROUND GUIDE\r\n-- \r\n-- This is a SQLite playground that allows you to practice SQL operations\r\n-- Here's how to use this editor effectively:\r\n--\r\n-- === STRUCTURE YOUR SQL CODE IN THIS ORDER ===\r\n--\r\n-- 1. CREATE TABLES:\r\n--    - Define your schema with appropriate data types\r\n--    - Set up primary keys and foreign key relationships\r\n--    - Example below creates customers and orders tables\r\n--\r\n-- 2. INSERT DATA:\r\n--    - Populate your tables with sample data\r\n--    - Use INSERT INTO statements with specific values\r\n--    - Ensure foreign key references exist before inserting\r\n--\r\n-- 3. QUERY DATA:\r\n--    - Write SELECT statements to retrieve and analyze your data\r\n--    - Use joins, where clauses, aggregations, etc.\r\n--    - Always test your queries after inserting data\r\n--\r\n-- === EXAMPLE BELOW ===\r\n\r\n-- Step 1: Create your tables\r\nCREATE TABLE customers (\r\n    customer_id INT PRIMARY KEY,\r\n    name VARCHAR(100),\r\n    email VARCHAR(100)\r\n);\r\n\r\nCREATE TABLE orders (\r\n    order_id INT PRIMARY KEY,\r\n    customer_id INT,\r\n    amount DECIMAL(10, 2),\r\n    order_date DATE,\r\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\r\n);\r\n\r\n-- Step 2: Insert sample data\r\nINSERT INTO customers (customer_id, name, email) VALUES\r\n(1, 'John Doe', 'john@example.com'),\r\n(2, 'Jane Smith', 'jane@example.com'),\r\n(3, 'Bob Johnson', 'bob@example.com'),\r\n(4, 'Alice Brown', 'alice@example.com'),\r\n(5, 'Charlie Davis', 'charlie@example.com');\r\n\r\nINSERT INTO orders (order_id, customer_id, amount, order_date) VALUES\r\n(101, 1, 150.50, '2023-01-15'),\r\n(102, 1, 75.25, '2023-02-20'),\r\n(103, 2, 200.00, '2023-01-10'),\r\n(104, 3, 50.75, '2023-03-05'),\r\n(105, 3, 125.30, '2023-03-15'),\r\n(106, 3, 45.80, '2023-04-02'),\r\n(107, 5, 350.00, '2023-02-28');\r\n\r\n-- Step 3: Query the data\r\nSELECT \r\n    customers.customer_id,\r\n    customers.name,\r\n    customers.email,\r\n    COUNT(orders.order_id) AS total_orders,\r\n    SUM(orders.amount) AS total_spent\r\nFROM \r\n    customers\r\nLEFT JOIN \r\n    orders ON customers.customer_id = orders.customer_id\r\nGROUP BY \r\n    customers.customer_id\r\nHAVING \r\n    COUNT(orders.order_id) > 0\r\nORDER BY \r\n    total_spent DESC\r\nLIMIT 10;`\r\n} as Record<string, string>;\r\n\r\n// Map language to Monaco editor language identifiers\r\nconst LANGUAGE_MAPPING: Record<string, string> = {\r\n    'javascript': 'javascript',\r\n    'js': 'javascript',\r\n    'html': 'html',\r\n    'css': 'css',\r\n    'python': 'python',\r\n    'py': 'python',\r\n    'java': 'java',\r\n    'c': 'c',\r\n    'cpp': 'cpp',\r\n    'c++': 'cpp',\r\n    'csharp': 'csharp',\r\n    'c#': 'csharp',\r\n    'ruby': 'ruby',\r\n    'typescript': 'typescript',\r\n    'ts': 'typescript',\r\n    'php': 'php',\r\n    'react': 'javascript', // React uses JavaScript syntax with JSX\r\n    'nodejs': 'javascript',\r\n    'sql': 'sql',\r\n};\r\n\r\n// Prettier language display names\r\nconst LANGUAGE_DISPLAY_NAMES: Record<string, string> = {\r\n    'javascript': 'JavaScript',\r\n    'html': 'HTML',\r\n    'css': 'CSS',\r\n    'python': 'Python',\r\n    'java': 'Java',\r\n    'c': 'C',\r\n    'cpp': 'C++',\r\n    'csharp': 'C#',\r\n    'ruby': 'Ruby',\r\n    'typescript': 'TypeScript',\r\n    'php': 'PHP',\r\n    'react': 'React',\r\n};\r\n\r\n// Judge0 language IDs - see https://judge0.com/\r\nconst JUDGE0_LANGUAGE_IDS: Record<string, number> = {\r\n    'python': 71,      // Python 3.8.1\r\n    'sql': 82,         // SQL (SQLite 3.27.2)\r\n    'javascript': 63,  // JavaScript (Node.js 12.14.0)\r\n    'nodejs': 63,      // Node.js 12.14.0\r\n};\r\n\r\n// Judge0 API URL - using environment variables for flexibility\r\nconst JUDGE0_API_URL = process.env.JUDGE0_API_URL || '';\r\n// Whether to use proxy approach to avoid CORS issues\r\nconst USE_PROXY_API = true;\r\n\r\nconst CodeEditorView = forwardRef<CodeEditorViewHandle, CodeEditorViewProps>(({\r\n    initialCode = {},\r\n    languages = ['javascript'],\r\n    handleCodeSubmit,\r\n    onCodeRun,\r\n}, ref) => {\r\n    // Check if React is in the original languages array\r\n    const hasReact = languages.some(lang =>\r\n        lang.toLowerCase() === 'react'\r\n    );\r\n\r\n    const hasNodejs = languages.some(lang =>\r\n        lang.toLowerCase() === 'nodejs'\r\n    );\r\n\r\n    // When only React is selected, don't normalize languages (skip the mapping to JavaScript)\r\n    let normalizedLanguages: string[];\r\n\r\n    if (hasReact) {\r\n        // When React is the only language, skip normalization and just use React\r\n        normalizedLanguages = ['react'];\r\n    } else if (hasNodejs) {\r\n        // When Node.js is the only language, skip normalization and just use Node.js\r\n        normalizedLanguages = ['nodejs'];\r\n    } else {\r\n        // Otherwise normalize languages as usual\r\n        normalizedLanguages = languages.map(lang =>\r\n            LANGUAGE_MAPPING[lang.toLowerCase()] || lang.toLowerCase()\r\n        ).filter((lang, index, self) =>\r\n            // Remove duplicates\r\n            self.indexOf(lang) === index &&\r\n            // Ensure we have a default content for this language\r\n            Object.keys(LANGUAGE_MAPPING).includes(lang)\r\n        );\r\n    }\r\n\r\n    // Helper method to setup code state with defaults\r\n    const setupCodeState = (initial: Record<string, string>): Record<string, string> => {\r\n        const state: Record<string, string> = {};\r\n\r\n        // Add entries for all valid languages\r\n        normalizedLanguages.forEach(lang => {\r\n            state[lang] = initial[lang] || DEFAULT_LANGUAGE_CONTENTS[lang] || '';\r\n        });\r\n\r\n        return state;\r\n    };\r\n\r\n    // Initialize code state with provided initialCode or defaults\r\n    const [code, setCode] = useState<Record<string, string>>(() => {\r\n        return setupCodeState(initialCode);\r\n    });\r\n\r\n    // State for the active language tab\r\n    const [activeLanguage, setActiveLanguage] = useState<string>(normalizedLanguages[0]);\r\n\r\n    // Preview state\r\n    const [previewContent, setPreviewContent] = useState<string>('');\r\n    const [isRunning, setIsRunning] = useState<boolean>(false);\r\n    const [output, setOutput] = useState<string>('');\r\n    const [executionTime, setExecutionTime] = useState<string>('');\r\n    // Input state (for languages that need stdin)\r\n    const [showInputPanel, setShowInputPanel] = useState<boolean>(false);\r\n    const [stdInput, setStdInput] = useState<string>('');\r\n    const inputRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n    // Reset active language when languages prop changes\r\n    useEffect(() => {\r\n        if (normalizedLanguages.length > 0) {\r\n            setActiveLanguage(normalizedLanguages[0]);\r\n        }\r\n    }, [languages]);\r\n\r\n    // Mobile preview state\r\n    const [showMobilePreview, setShowMobilePreview] = useState<boolean>(false);\r\n\r\n    // Check if web preview is available (HTML, CSS, JS)\r\n    const hasWebLanguages = normalizedLanguages.some(lang =>\r\n        ['html', 'css', 'javascript'].includes(lang)\r\n    );\r\n\r\n    // Add state for input validation and toast\r\n    const [inputError, setInputError] = useState<boolean>(false);\r\n    const [showToast, setShowToast] = useState<boolean>(false);\r\n    const [toastData, setToastData] = useState<{\r\n        title: string;\r\n        description: string;\r\n        emoji: string;\r\n    }>({\r\n        title: '',\r\n        description: '',\r\n        emoji: '',\r\n    });\r\n\r\n    // Check if we're on a mobile device\r\n    const [isMobileView, setIsMobileView] = useState<boolean>(false);\r\n\r\n    // Effect to detect mobile devices\r\n    useEffect(() => {\r\n        const checkMobileView = () => {\r\n            setIsMobileView(window.innerWidth < 1024);\r\n        };\r\n\r\n        // Initial check\r\n        checkMobileView();\r\n\r\n        // Listen for window resize events\r\n        window.addEventListener('resize', checkMobileView);\r\n\r\n        // Cleanup event listener\r\n        return () => {\r\n            window.removeEventListener('resize', checkMobileView);\r\n        };\r\n    }, []);\r\n\r\n    // Auto-close toast after 5 seconds\r\n    useEffect(() => {\r\n        if (showToast) {\r\n            const timer = setTimeout(() => {\r\n                setShowToast(false);\r\n            }, 5000);\r\n\r\n            // Cleanup the timer when component unmounts or showToast changes\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [showToast]);\r\n\r\n    // Update code state when initialCode changes\r\n    useEffect(() => {\r\n        setCode(setupCodeState(initialCode));\r\n    }, [initialCode]);\r\n\r\n    // Handle code change for the active language\r\n    const handleCodeChange = (value: string | undefined) => {\r\n        if (value !== undefined) {\r\n            setCode(prevCode => ({\r\n                ...prevCode,\r\n                [activeLanguage]: value\r\n            }));\r\n        }\r\n    };\r\n\r\n    // Handle mobile back button click\r\n    const handleMobileBackClick = () => {\r\n        setShowMobilePreview(false);\r\n\r\n        // Notify parent that preview was closed\r\n        if (onCodeRun) {\r\n            // Signal that the preview is closed with empty content\r\n            // This doesn't clear the actual content but just signals UI state change\r\n            onCodeRun(\r\n                '',\r\n                output,\r\n                executionTime,\r\n                false\r\n            );\r\n        }\r\n    };\r\n\r\n    // Function to count the number of input() calls in Python code\r\n    const countPythonInputs = (code: string): number => {\r\n        // Match different variations of input calls\r\n        // This regex matches:\r\n        // 1. Standard input() calls\r\n        // 2. input(\"prompt\") with any string prompt\r\n        // 3. Assigned input() calls like x = input()\r\n        // 4. Complex variations like x = int(input())\r\n\r\n        // Remove comments first\r\n        const codeWithoutComments = code.replace(/#.*$/gm, '');\r\n\r\n        // Look for different input patterns\r\n        const patterns = [\r\n            /\\binput\\s*\\([^)]*\\)/g,               // Standard input() or input(\"prompt\")\r\n        ];\r\n\r\n        // Count all occurrences of input calls\r\n        let totalInputCalls = 0;\r\n\r\n        patterns.forEach(pattern => {\r\n            const matches = codeWithoutComments.match(pattern);\r\n            if (matches) {\r\n                // Count all occurrences, not just unique ones\r\n                totalInputCalls += matches.length;\r\n            }\r\n        });\r\n\r\n        return totalInputCalls;\r\n    };\r\n\r\n    // Function to count the number of provided inputs\r\n    const countProvidedInputs = (input: string): number => {\r\n        if (!input) return 0;\r\n        // Count all lines\r\n        return input.split('\\n').length;\r\n    };\r\n\r\n    // Handle code run with input validation\r\n    const handleCodeRun = () => {\r\n        setInputError(false); // Reset input error state\r\n\r\n        // Check for Python input validation\r\n        if (activeLanguage === 'python') {\r\n            const requiredInputs = countPythonInputs(code['python']);\r\n\r\n            if (requiredInputs > 0) {\r\n                const providedInputs = countProvidedInputs(stdInput);\r\n\r\n                // If inputs are required but input panel is not open, show it\r\n                if (!showInputPanel) {\r\n                    setShowInputPanel(true);\r\n                    setInputError(true); // Add error state when automatically opening input panel\r\n                    setToastData({\r\n                        title: 'Input Required',\r\n                        description: `Your code requires ${requiredInputs} input${requiredInputs > 1 ? 's' : ''}. Please provide ${requiredInputs > 1 ? 'them' : 'it'} in the input panel.`,\r\n                        emoji: '⌨️',\r\n                    });\r\n                    setShowToast(true);\r\n                    return; // Don't run code yet\r\n                }\r\n\r\n                // If insufficient inputs, show error\r\n                if (providedInputs < requiredInputs) {\r\n                    setInputError(true);\r\n                    setToastData({\r\n                        title: 'Insufficient Inputs',\r\n                        description: `Your code requires ${requiredInputs} input${requiredInputs > 1 ? 's' : ''}, but ${providedInputs === 0 ? 'no input was provided' : `only ${providedInputs} ${providedInputs === 1 ? 'input was' : 'inputs were'} provided`}`,\r\n                        emoji: '⚠️',\r\n                    });\r\n                    setShowToast(true);\r\n                    return; // Don't run code with insufficient inputs\r\n                }\r\n            }\r\n        }\r\n\r\n        setIsRunning(true);\r\n\r\n        // If on mobile, show the preview\r\n        if (isMobileView) {\r\n            setShowMobilePreview(true);\r\n        }\r\n\r\n        try {\r\n            // For React code\r\n            if (activeLanguage === 'react') {\r\n                // Create a basic HTML template with React and ReactDOM loaded from CDN with specific version\r\n                const reactTemplate = `\r\n                <!DOCTYPE html>\r\n                <html>\r\n                <head>\r\n                    <meta charset=\"UTF-8\">\r\n                    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n                    <title>React Preview</title>\r\n                    <!-- Load React and ReactDOM from CDN with specific version -->\r\n                    <script src=\"https://unpkg.com/react@18.2.0/umd/react.development.js\"></script>\r\n                    <script src=\"https://unpkg.com/react-dom@18.2.0/umd/react-dom.development.js\"></script>\r\n                    <!-- Load Babel for JSX support -->\r\n                    <script src=\"https://unpkg.com/@babel/standalone@7.21.4/babel.min.js\"></script>\r\n                    ${code['css'] ? `<style>${code['css']}</style>` : ''}\r\n                </head>\r\n                <body>\r\n                    <div id=\"root\"></div>\r\n                    <script type=\"text/babel\">\r\n                    ${code['react']}\r\n                    </script>\r\n                </body>\r\n                </html>`;\r\n\r\n                setPreviewContent(reactTemplate);\r\n                setOutput('React preview updated');\r\n\r\n                // Notify parent component\r\n                if (onCodeRun) {\r\n                    onCodeRun(reactTemplate, 'React preview updated', undefined, true);\r\n                }\r\n\r\n                // Delay setting isRunning to false to give time for the iframe to start loading\r\n                setTimeout(() => {\r\n                    setIsRunning(false);\r\n                    // Update parent again when loading is complete\r\n                    if (onCodeRun) {\r\n                        onCodeRun(reactTemplate, 'React preview updated', undefined, false);\r\n                    }\r\n                }, 300);\r\n            }\r\n            // For web-based languages, create a preview\r\n            else if (hasWebLanguages) {\r\n                // For SQL, we'll handle the preview later in executeWithJudge0\r\n                if (activeLanguage === 'sql') {\r\n                    executeWithJudge0(activeLanguage, code[activeLanguage]);\r\n                } else {\r\n                    // Generate HTML preview with CSS and JavaScript\r\n                    const htmlContent = code['html'] || '';\r\n                    const cssContent = code['css'] ? `<style>${code['css']}</style>` : '';\r\n                    const jsContent = code['javascript'] ? `<script>${code['javascript']}</script>` : '';\r\n\r\n                    // Combine all content\r\n                    const fullHtmlContent = htmlContent\r\n                        .replace('</head>', `${cssContent}</head>`)\r\n                        .replace('</body>', `${jsContent}</body>`);\r\n\r\n                    setPreviewContent(fullHtmlContent);\r\n                    setOutput('Preview updated');\r\n\r\n                    // Notify parent component\r\n                    if (onCodeRun) {\r\n                        onCodeRun(fullHtmlContent, 'Preview updated', undefined, true);\r\n                    }\r\n\r\n                    // Delay setting isRunning to false to give time for the iframe to start loading\r\n                    setTimeout(() => {\r\n                        setIsRunning(false);\r\n                        // Update parent again when loading is complete\r\n                        if (onCodeRun) {\r\n                            onCodeRun(fullHtmlContent, 'Preview updated', undefined, false);\r\n                        }\r\n                    }, 300);\r\n                }\r\n            }\r\n            // For non-web languages, execute the code if possible\r\n            else {\r\n                // Send all supported languages to Judge0, including JavaScript and Node.js\r\n                if (Object.keys(JUDGE0_LANGUAGE_IDS).includes(activeLanguage)) {\r\n                    // Notify parent component that code execution is starting\r\n                    if (onCodeRun) {\r\n                        // Pass isRunning=true to indicate execution has started\r\n                        onCodeRun('', 'Executing code...', undefined, true);\r\n                    }\r\n                    executeWithJudge0(activeLanguage, code[activeLanguage]);\r\n                }\r\n                else {\r\n                    // For other languages, show placeholder message\r\n                    const outputMessage = `Code execution for ${LANGUAGE_DISPLAY_NAMES[activeLanguage] || activeLanguage} would happen on a server.`;\r\n                    setOutput(outputMessage);\r\n\r\n                    // Notify parent component for other languages\r\n                    if (onCodeRun) {\r\n                        onCodeRun('', outputMessage);\r\n                    }\r\n                    setIsRunning(false);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            const errorMessage = `Error: ${(error as Error).message}`;\r\n            setOutput(errorMessage);\r\n            setExecutionTime(''); // Reset execution time on error\r\n\r\n            // Notify parent component\r\n            if (onCodeRun) {\r\n                onCodeRun('', errorMessage, undefined, false);\r\n            }\r\n\r\n            // Set isRunning to false in case of an error\r\n            setIsRunning(false);\r\n        }\r\n    };\r\n\r\n    // Execute code using Judge0 API\r\n    const executeWithJudge0 = async (language: string, sourceCode: string) => {\r\n        try {\r\n            setIsRunning(true);\r\n            setExecutionTime(''); // Reset execution time when starting new execution\r\n\r\n            // If on mobile, show the preview\r\n            if (isMobileView) {\r\n                setShowMobilePreview(true);\r\n            }\r\n\r\n            // Check if language is supported by Judge0\r\n            const languageId = JUDGE0_LANGUAGE_IDS[language];\r\n            if (!languageId) {\r\n                throw new Error(`Language '${language}' is not supported for execution`);\r\n            }\r\n\r\n            // Prepare request data\r\n            const requestData = {\r\n                source_code: sourceCode,\r\n                language_id: languageId,\r\n                stdin: stdInput,  // Use the input from the input panel\r\n                expected_output: null,\r\n                cpu_time_limit: 2,  // 2 seconds\r\n                cpu_extra_time: 0.5,\r\n                wall_time_limit: 5,\r\n                memory_limit: 128000, // 128MB\r\n                stack_limit: 64000,  // 64MB\r\n                max_processes_and_or_threads: 60,\r\n                enable_per_process_and_thread_time_limit: false,\r\n                enable_per_process_and_thread_memory_limit: false,\r\n                compiler_options: '',\r\n                command_line_arguments: '',\r\n            };\r\n\r\n            let token;\r\n\r\n            // Step 1: Create a submission (using proxy if needed)\r\n            // Using Next.js API route to proxy the request and avoid CORS issues\r\n            const createResponse = await fetch(`/api/code/submit`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(requestData),\r\n            });\r\n\r\n            if (!createResponse.ok) {\r\n                throw new Error(`Failed to submit code: ${createResponse.status}`);\r\n            }\r\n\r\n            const submission = await createResponse.json();\r\n            token = submission.token;\r\n\r\n            if (!token) {\r\n                throw new Error('No token received from Judge0');\r\n            }\r\n\r\n            // Step 2: Poll for results\r\n            let result;\r\n            let attempts = 0;\r\n            const maxAttempts = 10;\r\n\r\n            while (attempts < maxAttempts) {\r\n                attempts++;\r\n                await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1 second\r\n\r\n                let statusResponse;\r\n\r\n                // Using Next.js API route to proxy the request\r\n                statusResponse = await fetch(`/api/code/status?token=${token}`);\r\n\r\n                if (!statusResponse.ok) {\r\n                    throw new Error(`Failed to get submission status: ${statusResponse.status}`);\r\n                }\r\n\r\n                result = await statusResponse.json();\r\n\r\n                // Check if processing is complete\r\n                // 1 = In Queue, 2 = Processing, 3 = Accepted, 4+ = Various errors\r\n                if (result.status_id >= 3) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Step 3: Handle the result\r\n            if (!result) {\r\n                throw new Error('Failed to get execution result');\r\n            }\r\n\r\n            let outputText = '';\r\n\r\n            // Build output based on what's available\r\n            if (result.compile_output) {\r\n                outputText += `Compilation Error:\\n${result.compile_output}\\n`;\r\n            }\r\n\r\n            if (result.stderr) {\r\n                outputText += `Error:\\n${result.stderr}\\n`;\r\n\r\n                if (result.message) {\r\n                    outputText += `${result.message}`;\r\n                }\r\n            }\r\n\r\n            // For SQL results, create HTML table instead of showing raw output\r\n            if (language === 'sql') {\r\n                try {\r\n                    // Generate HTML table from SQL results\r\n                    const sqlOutput = result.stdout ? result.stdout.trim() : '';\r\n\r\n                    if (sqlOutput) {\r\n                        // Check if there are query results (not just success messages from CREATE/INSERT)\r\n                        if (sqlOutput.includes('|')) {\r\n                            // Create HTML table preview content\r\n                            const tableHtml = generateTableFromSqlOutput(sqlOutput);\r\n\r\n                            // Set preview content with styled table\r\n                            const htmlContent = `\r\n                            <!DOCTYPE html>\r\n                            <html>\r\n                            <head>\r\n                                <style>\r\n                                    body {\r\n                                        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;\r\n                                        padding: 16px;\r\n                                        background-color: #1a1a1a;\r\n                                        color: #e2e2e2;\r\n                                        font-size: 12px;\r\n                                    }\r\n                                    table {\r\n                                        width: 100%;\r\n                                        border-collapse: collapse;\r\n                                        font-size: 12px;\r\n                                    }\r\n                                    th {\r\n                                        font-weight: 500;\r\n                                        text-align: left;\r\n                                        padding: 6px 8px;\r\n                                        border-bottom: 1px solid #333;\r\n                                        color: #a0a0a0;\r\n                                    }\r\n                                    td {\r\n                                        padding: 6px 8px;\r\n                                        border-bottom: 1px solid #222;\r\n                                    }\r\n                                    tr:hover {\r\n                                        background-color: #222;\r\n                                    }\r\n                                    .sql-results-title {\r\n                                        margin-bottom: 12px;\r\n                                        color: #e2e2e2;\r\n                                        font-size: 14px;\r\n                                        font-weight: 500;\r\n                                    }\r\n                                    .no-results {\r\n                                        color: #a0a0a0;\r\n                                        padding: 16px;\r\n                                        text-align: center;\r\n                                        font-size: 12px;\r\n                                        background-color: #222;\r\n                                        border-radius: 3px;\r\n                                    }\r\n                                </style>\r\n                            </head>\r\n                            <body>\r\n                                ${tableHtml}\r\n                            </body>\r\n                            </html>`;\r\n\r\n                            setPreviewContent(htmlContent);\r\n\r\n                            // Still set a minimal text output\r\n                            outputText = \"Query executed successfully. Results displayed in the table.\";\r\n\r\n                            // Notify parent component with both HTML content and text output\r\n                            if (onCodeRun) {\r\n                                // Use true for isWebPreview\r\n                                onCodeRun(htmlContent, outputText, result.time, false);\r\n                            }\r\n                        } else {\r\n                            // For non-query operations (CREATE, INSERT, etc.)\r\n                            outputText = sqlOutput;\r\n\r\n                            // Show a message in the preview\r\n                            const htmlContent = `\r\n                            <!DOCTYPE html>\r\n                            <html>\r\n                            <head>\r\n                                <style>\r\n                                    body {\r\n                                        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;\r\n                                        padding: 16px;\r\n                                        background-color: #1a1a1a;\r\n                                        color: #e2e2e2;\r\n                                        font-size: 12px;\r\n                                    }\r\n                                    .message {\r\n                                        padding: 12px 16px;\r\n                                        background-color: #252525;\r\n                                        border-radius: 3px;\r\n                                        margin-bottom: 16px;\r\n                                        font-size: 12px;\r\n                                    }\r\n                                    .message h3 {\r\n                                        font-weight: 500;\r\n                                        font-size: 13px;\r\n                                        margin-top: 0;\r\n                                        margin-bottom: 8px;\r\n                                        color: #e2e2e2;\r\n                                    }\r\n                                    .message p {\r\n                                        margin: 4px 0;\r\n                                        color: #a0a0a0;\r\n                                    }\r\n                                </style>\r\n                            </head>\r\n                            <body>\r\n                                <div class=\"message\">\r\n                                    <h3>SQL Operation Successful</h3>\r\n                                    <p>Your SQL commands executed successfully.</p>\r\n                                    <p>Run a SELECT query to see results in a table format.</p>\r\n                                </div>\r\n                            </body>\r\n                            </html>`;\r\n\r\n                            setPreviewContent(htmlContent);\r\n\r\n                            if (onCodeRun) {\r\n                                // Use true for isWebPreview\r\n                                onCodeRun(htmlContent, outputText, result.time, false);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        // Empty result\r\n                        const htmlContent = `\r\n                        <!DOCTYPE html>\r\n                        <html>\r\n                        <head>\r\n                            <style>\r\n                                body {\r\n                                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;\r\n                                    padding: 16px;\r\n                                    background-color: #1a1a1a;\r\n                                    color: #e2e2e2;\r\n                                    font-size: 12px;\r\n                                }\r\n                                .message {\r\n                                    padding: 16px;\r\n                                    background-color: #252525;\r\n                                    border-radius: 3px;\r\n                                    text-align: center;\r\n                                    font-size: 12px;\r\n                                    color: #a0a0a0;\r\n                                }\r\n                            </style>\r\n                        </head>\r\n                        <body>\r\n                            <div class=\"message\">\r\n                                <p>Your query did not return any results. Run a SELECT query to see results in a table format.</p>\r\n                            </div>\r\n                        </body>\r\n                        </html>`;\r\n\r\n                        setPreviewContent(htmlContent);\r\n                        outputText = \"Query executed successfully, but returned no results.\";\r\n\r\n                        if (onCodeRun) {\r\n                            // Use true for isWebPreview\r\n                            onCodeRun(htmlContent, outputText, result.time, false);\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    console.error(\"Error formatting SQL results:\", error);\r\n                    // If table generation fails, fall back to regular output display\r\n                    outputText += `${result.stdout}`;\r\n                }\r\n            } else if (result.stdout) {\r\n                // For non-SQL languages, use normal output display\r\n                outputText += `${result.stdout}`;\r\n            }\r\n\r\n            // Store execution time separately instead of adding to output\r\n            if (result.time) {\r\n                setExecutionTime(result.time);\r\n            }\r\n\r\n            // If no output was generated\r\n            if (!outputText) {\r\n                outputText = 'No output generated.';\r\n            }\r\n\r\n            setOutput(outputText);\r\n\r\n            // For non-SQL languages, make sure to notify parent component with updated outputs\r\n            if (language !== 'sql' && onCodeRun) {\r\n                onCodeRun('', outputText, result.time, false);\r\n            }\r\n\r\n            // Only set isRunning to false after everything is complete\r\n            setIsRunning(false);\r\n        } catch (error) {\r\n            const errorMessage = `Error: ${(error as Error).message}`;\r\n            setOutput(errorMessage);\r\n            setExecutionTime(''); // Reset execution time on error\r\n\r\n            // Notify parent component\r\n            if (onCodeRun) {\r\n                onCodeRun('', errorMessage, undefined, false);\r\n            }\r\n\r\n            // Set isRunning to false in case of an error\r\n            setIsRunning(false);\r\n        }\r\n    };\r\n\r\n    // Submit the code\r\n    const handleSubmit = () => {\r\n        handleCodeSubmit(code);\r\n    };\r\n\r\n    // Monaco editor setup\r\n    const handleEditorDidMount = (editor: any, monaco: Monaco) => {\r\n        // You can customize the editor here if needed\r\n        editor.focus();\r\n    };\r\n\r\n    // Get the correct Monaco editor language based on active language\r\n    const getMonacoLanguage = (lang: string) => {\r\n        if (lang === 'react' || lang === 'nodejs') {\r\n            return 'javascript'; // React and Node.js use JavaScript syntax\r\n        }\r\n        return lang;\r\n    };\r\n\r\n    // Helper function to generate HTML table from SQL output\r\n    const generateTableFromSqlOutput = (sqlOutput: string): string => {\r\n        // Split output into lines\r\n        const lines = sqlOutput.trim().split('\\n');\r\n\r\n        if (lines.length < 3) {\r\n            return '<div class=\"no-results\">No data returned from query</div>';\r\n        }\r\n\r\n        // Start building HTML table\r\n        let tableHtml = '<table><tbody>';\r\n\r\n        for (let i = 0; i < lines.length; i++) {\r\n            const line = lines[i].trim();\r\n            if (!line) continue; // Skip empty lines\r\n\r\n            // Replace multiple spaces with a single delimiter\r\n            const normalizedLine = line.replace(/\\s{2,}/g, '|');\r\n            const cells = normalizedLine.split('|').map(c => c.trim()).filter(c => c);\r\n\r\n            tableHtml += '<tr>';\r\n            cells.forEach(cell => {\r\n                // Handle NULL values with italic styling\r\n                const cellContent = cell === 'NULL'\r\n                    ? '<em style=\"color: #a0aec0;\">NULL</em>'\r\n                    : cell;\r\n\r\n                // Treat all rows the same - no special header row\r\n                tableHtml += `<td>${cellContent}</td>`;\r\n            });\r\n            tableHtml += '</tr>';\r\n        }\r\n\r\n        tableHtml += '</tbody></table>';\r\n        return tableHtml;\r\n    };\r\n\r\n    // Effect to notify parent when mobile preview changes\r\n    useEffect(() => {\r\n        if (isMobileView && onCodeRun) {\r\n            // When mobile preview is shown/hidden, notify parent to help with layout adjustments\r\n            onCodeRun(\r\n                previewContent,\r\n                output,\r\n                executionTime,\r\n                isRunning\r\n            );\r\n        }\r\n    }, [showMobilePreview, isMobileView]);\r\n\r\n    // Use useImperativeHandle to expose getCurrentCode method\r\n    useImperativeHandle(ref, () => ({\r\n        getCurrentCode: () => code,\r\n    }));\r\n\r\n    return (\r\n        <div className=\"flex flex-col h-full overflow-auto\">\r\n            {/* Toast notification for input validation */}\r\n            <Toast\r\n                show={showToast}\r\n                title={toastData.title}\r\n                description={toastData.description}\r\n                emoji={toastData.emoji}\r\n                onClose={() => setShowToast(false)}\r\n                isMobileView={isMobileView}\r\n            />\r\n\r\n            {/* Mobile-specific styles */}\r\n            <style jsx global>{`\r\n                @media (max-width: 1024px) {\r\n                    .mobile-preview-container {\r\n                        position: fixed;\r\n                        top: 0;\r\n                        left: 0;\r\n                        right: 0;\r\n                        bottom: 0;\r\n                        z-index: 1000;\r\n                        background-color: #111111;\r\n                        animation: slide-up 0.3s ease-out;\r\n                    }\r\n                    \r\n                    @keyframes slide-up {\r\n                        from {\r\n                            transform: translateY(100%);\r\n                        }\r\n                        to {\r\n                            transform: translateY(0);\r\n                        }\r\n                    }\r\n\r\n                    .hidden-on-mobile {\r\n                        display: none !important;\r\n                    }\r\n                }\r\n            `}</style>\r\n\r\n            {/* Mobile preview overlay when active */}\r\n            {isMobileView && showMobilePreview && (previewContent || output) ? (\r\n                <div className=\"fixed inset-0 z-50 bg-[#111111]\">\r\n                    <CodePreview\r\n                        isRunning={isRunning}\r\n                        previewContent={previewContent}\r\n                        output={output}\r\n                        isWebPreview={hasWebLanguages || activeLanguage === 'react' || activeLanguage === 'sql'}\r\n                        executionTime={executionTime}\r\n                        onBack={handleMobileBackClick}\r\n                        isMobileView={true}\r\n                    />\r\n                </div>\r\n            ) : null}\r\n\r\n            {/* Language tabs */}\r\n            {normalizedLanguages.length > 0 && !isMobileView && (\r\n                <div className=\"flex items-center overflow-x-auto bg-[#1D1D1D] hide-scrollbar\">\r\n                    {/* Show all language tabs */}\r\n                    {normalizedLanguages.map((lang) => (\r\n                        <button\r\n                            key={lang}\r\n                            onClick={() => {\r\n                                setActiveLanguage(lang);\r\n                            }}\r\n                            className={`px-4 py-2 text-sm font-medium transition-colors cursor-pointer ${activeLanguage === lang\r\n                                ? 'bg-[#2D2D2D] text-white border-b-2 border-white'\r\n                                : 'text-gray-400 hover:text-white hover:bg-[#222222]'\r\n                                }`}\r\n                        >\r\n                            {LANGUAGE_DISPLAY_NAMES[lang] || lang}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n            {/* Mobile language tabs - more compact */}\r\n            {normalizedLanguages.length > 0 && isMobileView && (\r\n                <div className=\"flex items-center overflow-x-auto bg-[#1D1D1D] hide-scrollbar\">\r\n                    {/* Show all language tabs */}\r\n                    {normalizedLanguages.map((lang) => (\r\n                        <button\r\n                            key={lang}\r\n                            onClick={() => {\r\n                                setActiveLanguage(lang);\r\n                            }}\r\n                            className={`px-3 py-1 text-xs font-medium transition-colors cursor-pointer ${activeLanguage === lang\r\n                                ? 'bg-[#2D2D2D] text-white border-b-2 border-white'\r\n                                : 'text-gray-400 hover:text-white hover:bg-[#222222]'\r\n                                }`}\r\n                        >\r\n                            {LANGUAGE_DISPLAY_NAMES[lang] || lang}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n            {/* Main editor area with potential split for input */}\r\n            <div className=\"flex-1 overflow-auto flex flex-col\">\r\n                {/* Code editor */}\r\n                <div className={`${showInputPanel ? 'flex-none' : 'flex-1'} ${showInputPanel ? 'h-2/3' : ''}`}>\r\n                    <Editor\r\n                        height=\"100%\"\r\n                        language={getMonacoLanguage(activeLanguage)}\r\n                        value={code[activeLanguage]}\r\n                        onChange={handleCodeChange}\r\n                        theme=\"vs-dark\"\r\n                        options={{\r\n                            minimap: { enabled: false },\r\n                            fontSize: 12,\r\n                            scrollBeyondLastLine: false,\r\n                            automaticLayout: true,\r\n                            tabSize: 2,\r\n                            wordWrap: 'on',\r\n                            lineNumbers: 'off',\r\n                        }}\r\n                        onMount={handleEditorDidMount}\r\n                    />\r\n                </div>\r\n\r\n                {/* Input panel (conditionally shown) */}\r\n                {showInputPanel && (\r\n                    <div className=\"flex-none h-1/3 border-t border-[#444444] flex flex-col\">\r\n                        <div className={`px-4 py-2 ${inputError ? 'bg-red-800' : 'bg-[#222222]'} text-white text-sm font-medium flex justify-between items-center`}>\r\n                            <span>{inputError ? 'Input Required' : 'Add inputs for testing'}</span>\r\n                        </div>\r\n                        <textarea\r\n                            ref={inputRef}\r\n                            className={`flex-1 bg-[#1E1E1E] text-white p-4 resize-none font-mono text-sm ${inputError ? 'border border-red-500' : ''}`}\r\n                            value={stdInput}\r\n                            onChange={(e) => {\r\n                                setStdInput(e.target.value);\r\n                                setInputError(false); // Clear error on input change\r\n                            }}\r\n                            placeholder=\"Add every input to your program in a new line\"\r\n                        />\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Action buttons */}\r\n            <div className=\"flex items-center justify-between p-4 border-t border-[#222222]\">\r\n                <div>\r\n                    <button\r\n                        onClick={handleCodeRun}\r\n                        disabled={isRunning}\r\n                        className=\"flex items-center space-x-2 bg-purple-600 hover:bg-purple-700 disabled:bg-purple-700 disabled:opacity-50 text-white rounded-full px-4 py-2 cursor-pointer\"\r\n                    >\r\n                        {isRunning ? (\r\n                            <>\r\n                                <div className=\"animate-spin h-4 w-4 border-2 border-white border-t-transparent rounded-full mr-2\"></div>\r\n                                <span>Run</span>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <Play size={16} />\r\n                                <span>Run</span>\r\n                            </>\r\n                        )}\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Only show the input toggle for languages that typically need input */}\r\n                {(['python'].includes(activeLanguage)) && (\r\n                    <div>\r\n                        <button\r\n                            onClick={() => {\r\n                                setShowInputPanel(!showInputPanel);\r\n                                // Focus the input textarea when showing\r\n                                setTimeout(() => {\r\n                                    if (!showInputPanel && inputRef.current) {\r\n                                        inputRef.current.focus();\r\n                                    }\r\n                                }, 100);\r\n                            }}\r\n                            className={`flex items-center space-x-2 ${showInputPanel ? 'bg-[#444444] text-white' : inputError ? 'bg-red-700 text-white' : 'bg-[#333333] hover:bg-[#444444] text-white'\r\n                                } rounded-full px-4 py-2 cursor-pointer`}\r\n                        >\r\n                            <Terminal size={16} />\r\n                            <span>Input</span>\r\n                        </button>\r\n                    </div>\r\n                )}\r\n\r\n                <div>\r\n                    <button\r\n                        onClick={handleSubmit}\r\n                        className=\"flex items-center space-x-2 bg-white hover:bg-gray-200 text-black rounded-full px-4 py-2 cursor-pointer\"\r\n                    >\r\n                        <Send size={16} />\r\n                        <span>Submit</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default CodeEditorView; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3127, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/ChatView.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState, forwardRef, useImperativeHandle } from 'react';\r\nimport { ChatMessage, ScorecardItem, QuizQuestion } from '../types/quiz';\r\nimport ChatPlaceholderView from './ChatPlaceholderView';\r\nimport ChatHistoryView from './ChatHistoryView';\r\nimport AudioInputComponent from './AudioInputComponent';\r\nimport CodeEditorView, { CodeEditorViewHandle } from './CodeEditorView';\r\nimport Toast from './Toast';\r\nimport { MessageCircle, Code, Sparkles, Save } from 'lucide-react';\r\nimport isEqual from 'lodash/isEqual';\r\n\r\n// Export interface for code view state to be used by parent components\r\nexport interface CodeViewState {\r\n    isViewingCode: boolean;\r\n    isRunning: boolean;\r\n    previewContent: string;\r\n    output: string;\r\n    hasWebLanguages: boolean;\r\n    executionTime?: string;\r\n}\r\n\r\n// Define MobileViewChangeEvent interface for the parent component\r\nexport interface MobileViewChangeEvent {\r\n    mode: 'question-full' | 'chat-full' | 'split';\r\n}\r\n\r\ninterface ChatViewProps {\r\n    currentChatHistory: ChatMessage[];\r\n    isAiResponding: boolean;\r\n    showPreparingReport: boolean;\r\n    isChatHistoryLoaded: boolean;\r\n    isTestMode: boolean;\r\n    taskType: 'quiz' | 'learning_material';\r\n    currentQuestionConfig?: any;\r\n    isSubmitting: boolean;\r\n    currentAnswer: string;\r\n    handleInputChange: (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void;\r\n    handleSubmitAnswer: (responseType?: 'text' | 'code') => void;\r\n    handleAudioSubmit: (audioBlob: Blob) => void;\r\n    handleViewScorecard: (scorecard: ScorecardItem[]) => void;\r\n    viewOnly?: boolean;\r\n    completedQuestionIds: Record<string, boolean>;\r\n    currentQuestionId?: string;\r\n    handleRetry?: () => void;\r\n    onCodeStateChange?: (state: CodeViewState) => void;\r\n    initialIsViewingCode?: boolean;\r\n    showLearnerView?: boolean;\r\n    onShowLearnerViewChange?: (show: boolean) => void;\r\n    isAdminView?: boolean;\r\n    userId?: string;\r\n}\r\n\r\nexport interface ChatViewHandle {\r\n    toggleCodeView: () => void;\r\n}\r\n\r\nconst ChatView = forwardRef<ChatViewHandle, ChatViewProps>(({\r\n    currentChatHistory,\r\n    isAiResponding,\r\n    showPreparingReport,\r\n    isChatHistoryLoaded,\r\n    isTestMode,\r\n    taskType,\r\n    currentQuestionConfig,\r\n    isSubmitting,\r\n    currentAnswer,\r\n    handleInputChange,\r\n    handleSubmitAnswer,\r\n    handleAudioSubmit,\r\n    handleViewScorecard,\r\n    viewOnly = false,\r\n    completedQuestionIds,\r\n    currentQuestionId = '',\r\n    handleRetry,\r\n    onCodeStateChange,\r\n    initialIsViewingCode = false,\r\n    showLearnerView = false,\r\n    onShowLearnerViewChange,\r\n    isAdminView = false,\r\n    userId,\r\n}, ref) => {\r\n    const textareaRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n    // Add ref for CodeEditorView\r\n    const codeEditorRef = useRef<CodeEditorViewHandle>(null);\r\n\r\n    // Add state for code editor toggle and preview\r\n    const [isViewingCode, setIsViewingCode] = useState(initialIsViewingCode);\r\n    const [codeContent, setCodeContent] = useState<Record<string, string>>({});\r\n    const [previewContent, setPreviewContent] = useState('');\r\n    const [output, setOutput] = useState('');\r\n    const [isRunning, setIsRunning] = useState(false);\r\n    const [executionTime, setExecutionTime] = useState('');\r\n\r\n    // Determine if this is a coding question\r\n    const isCodingQuestion = currentQuestionConfig?.inputType === 'code';\r\n\r\n    // Get coding languages from question config\r\n    const codingLanguages = currentQuestionConfig?.codingLanguages || ['javascript'];\r\n\r\n    // Check if web preview is available (HTML, CSS, JS)\r\n    const hasWebLanguages = codingLanguages.some((lang: string) =>\r\n        ['html', 'css', 'javascript', 'js', 'sql', 'react'].includes(lang?.toLowerCase())\r\n    );\r\n\r\n    // Determine if this question is completed\r\n    const isQuestionCompleted = currentQuestionId ? completedQuestionIds[currentQuestionId] : false;\r\n\r\n    // Store the previous state for comparison\r\n    const prevStateRef = useRef<CodeViewState | null>(null);\r\n\r\n    // Update view state when question config changes\r\n    useEffect(() => {\r\n        // Don't set viewing code in viewOnly mode\r\n        if (isCodingQuestion && !viewOnly) {\r\n            // For completed exam questions, always show chat view to see the confirmation\r\n            if (currentQuestionConfig?.responseType === 'exam' && isQuestionCompleted) {\r\n                setIsViewingCode(false);\r\n            } else {\r\n                setIsViewingCode(true);\r\n            }\r\n        } else {\r\n            setIsViewingCode(false);\r\n        }\r\n    }, [currentQuestionConfig, isCodingQuestion, viewOnly, taskType, isQuestionCompleted]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        toggleCodeView: () => {\r\n            setIsViewingCode(prev => !prev);\r\n        }\r\n    }));\r\n\r\n\r\n\r\n    // Extract code from chat history for coding questions\r\n    useEffect(() => {\r\n        if (!isCodingQuestion) {\r\n            return;\r\n        }\r\n\r\n        // Function to extract code from chat history\r\n        const extractCodeFromChatHistory = () => {\r\n            if (currentChatHistory.length === 0) {\r\n                setCodeContent({});\r\n                return;\r\n            }\r\n\r\n            // Filter messages to find code type messages\r\n            const codeMessages = currentChatHistory.filter(\r\n                message => message.messageType === 'code' && message.sender === 'user'\r\n            );\r\n\r\n            // Use the most recent code message if any exists\r\n            if (codeMessages.length > 0) {\r\n                const lastCodeMessage = codeMessages[codeMessages.length - 1];\r\n                const codeContent = lastCodeMessage.content;\r\n                const codeByLanguage: Record<string, string> = {};\r\n\r\n                try {\r\n                    // Try to parse code sections based on language markers\r\n                    const languagePattern = /\\/\\/ ([A-Z]+)\\n([\\s\\S]*?)(?=\\/\\/ [A-Z]+\\n|$)/g;\r\n                    let match;\r\n                    let foundAnyMatches = false;\r\n\r\n                    while ((match = languagePattern.exec(codeContent)) !== null) {\r\n                        foundAnyMatches = true;\r\n                        const lang = match[1].toLowerCase();\r\n                        const code = match[2].trim();\r\n\r\n                        // Map common language variations\r\n                        const normalizedLang =\r\n                            lang === 'javascript' || lang === 'js' ? 'javascript' :\r\n                                lang === 'html' ? 'html' :\r\n                                    lang === 'css' ? 'css' :\r\n                                        lang === 'python' || lang === 'py' ? 'python' :\r\n                                            lang === 'typescript' || lang === 'ts' ? 'typescript' :\r\n                                                lang;\r\n\r\n                        codeByLanguage[normalizedLang] = code;\r\n                    }\r\n\r\n                    // If no language headers were found, use the content as the first language\r\n                    if (!foundAnyMatches && codingLanguages.length > 0) {\r\n                        codeByLanguage[codingLanguages[0].toLowerCase()] = codeContent;\r\n                    }\r\n\r\n                    // Ensure all configured languages have an entry\r\n                    codingLanguages.forEach((lang: string) => {\r\n                        const normalizedLang = lang.toLowerCase();\r\n                        if (!codeByLanguage[normalizedLang]) {\r\n                            // If a language doesn't have code yet, initialize with empty string\r\n                            codeByLanguage[normalizedLang] = '';\r\n                        }\r\n                    });\r\n\r\n                    // Set the code content for the editor\r\n                    setCodeContent(codeByLanguage);\r\n                } catch (error) {\r\n                    console.error('Error parsing code from chat history:', error);\r\n                }\r\n            }\r\n        };\r\n\r\n        // Check for saved code drafts first\r\n        const fetchSavedCode = async () => {\r\n            if (!userId || !currentQuestionId) {\r\n                return null;\r\n            }\r\n\r\n            try {\r\n                const response = await fetch(\r\n                    `${process.env.NEXT_PUBLIC_BACKEND_URL}/code/user/${userId}/question/${currentQuestionId}`\r\n                );\r\n\r\n                if (response.ok) {\r\n                    const codeDraft = await response.json();\r\n                    if (codeDraft && codeDraft.code && Array.isArray(codeDraft.code)) {\r\n                        const savedCodeByLanguage: Record<string, string> = {};\r\n                        codeDraft.code.forEach((langCode: { language: string; value: string }) => {\r\n                            savedCodeByLanguage[langCode.language.toLowerCase()] = langCode.value;\r\n                        });\r\n                        return savedCodeByLanguage;\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching saved code:', error);\r\n            }\r\n\r\n            return null;\r\n        };\r\n\r\n        if (isTestMode) {\r\n            extractCodeFromChatHistory();\r\n            return;\r\n        }\r\n\r\n        // Try to get saved code first\r\n        fetchSavedCode().then(savedCode => {\r\n            if (savedCode && Object.keys(savedCode).length > 0) {\r\n                setCodeContent(savedCode);\r\n                return;\r\n            }\r\n            // Extract code from chat history if no saved code exists\r\n            extractCodeFromChatHistory();\r\n        });\r\n    }, [currentChatHistory, isCodingQuestion, codingLanguages, userId, currentQuestionId]);\r\n\r\n    // Notify parent of code state changes\r\n    useEffect(() => {\r\n        if (onCodeStateChange && isCodingQuestion) {\r\n            const currentState = {\r\n                isViewingCode,\r\n                isRunning,\r\n                previewContent,\r\n                output,\r\n                hasWebLanguages: hasWebLanguages,\r\n                executionTime\r\n            };\r\n\r\n            // Only call onCodeStateChange if the state has actually changed\r\n            if (!prevStateRef.current || !isEqual(prevStateRef.current, currentState)) {\r\n                prevStateRef.current = currentState;\r\n                onCodeStateChange(currentState);\r\n            }\r\n        }\r\n    }, [isViewingCode, isRunning, previewContent, output, hasWebLanguages, isCodingQuestion, onCodeStateChange, executionTime]);\r\n\r\n    // Handle code run\r\n    const handleCodeRun = (newPreviewContent: string, newOutput: string, newExecutionTime?: string, newIsRunning?: boolean) => {\r\n        setPreviewContent(newPreviewContent);\r\n        setOutput(newOutput);\r\n\r\n        // Update isRunning based on the parameter if provided, otherwise use previous logic\r\n        if (newIsRunning !== undefined) {\r\n            setIsRunning(newIsRunning);\r\n        } else if (newPreviewContent) {\r\n            // Only set isRunning to false for web preview\r\n            setIsRunning(false);\r\n        }\r\n\r\n        if (newExecutionTime !== undefined) {\r\n            setExecutionTime(newExecutionTime);\r\n        }\r\n\r\n        // Update parent component with current state\r\n        if (onCodeStateChange) {\r\n            onCodeStateChange({\r\n                isViewingCode,\r\n                isRunning: newIsRunning !== undefined ? newIsRunning : (newPreviewContent ? false : isRunning),\r\n                previewContent: newPreviewContent,\r\n                output: newOutput,\r\n                hasWebLanguages: hasWebLanguages,\r\n                executionTime: newExecutionTime || executionTime\r\n            });\r\n        }\r\n    };\r\n\r\n    // Handle code submission\r\n    const handleCodeSubmit = async (code: Record<string, string>) => {\r\n        // Add code to chat history as a user message\r\n        if (Object.values(code).some(content => content.trim())) {\r\n            // Format the code for display in the chat\r\n            // You could display just the active language or all languages\r\n            // For simplicity, we'll combine all languages with headers\r\n            let formattedCode = '';\r\n\r\n            // Create a formatted version of the code with language headers\r\n            Object.entries(code).forEach(([lang, content]) => {\r\n                if (content.trim()) {\r\n                    formattedCode += `// ${lang.toUpperCase()}\\n${content}\\n\\n`;\r\n                }\r\n            });\r\n\r\n            // Use the existing handleSubmitAnswer, but first set the currentAnswer to the code\r\n            // This is a workaround to reuse existing logic\r\n            handleInputChange({\r\n                target: { value: formattedCode.trim() }\r\n            } as React.ChangeEvent<HTMLTextAreaElement>);\r\n\r\n            // Then call the submit function\r\n            handleSubmitAnswer('code');\r\n\r\n            // Delete any existing code for this question before submitting new code\r\n            if (userId && currentQuestionId) {\r\n                try {\r\n                    await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/code/user/${userId}/question/${currentQuestionId}`, {\r\n                        method: 'DELETE',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                    });\r\n                } catch (error) {\r\n                    console.error('Error deleting existing code:', error);\r\n                    // Continue with submission even if delete fails\r\n                }\r\n            }\r\n\r\n            // For exam questions, keep the code editor visible so that users can review their code\r\n            if (currentQuestionConfig?.responseType !== 'exam') {\r\n                setIsViewingCode(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Function to adjust textarea height based on content\r\n    const adjustTextareaHeight = () => {\r\n        const textarea = textareaRef.current;\r\n        if (!textarea) return;\r\n\r\n        // Reset height to auto to get the correct scrollHeight\r\n        textarea.style.height = 'auto';\r\n\r\n        // Calculate new height (capped at approximately 6 lines)\r\n        const lineHeight = 24; // Approximate line height in pixels\r\n        const maxHeight = lineHeight * 6; // Max height for 6 lines\r\n        const newHeight = Math.min(textarea.scrollHeight, maxHeight);\r\n\r\n        // Set the new height\r\n        textarea.style.height = `${newHeight}px`;\r\n\r\n        // Add scrolling if content exceeds maxHeight - ensure this isn't overridden by CSS\r\n        if (textarea.scrollHeight > maxHeight) {\r\n            textarea.style.overflowY = 'scroll';\r\n        } else {\r\n            textarea.style.overflowY = 'hidden';\r\n        }\r\n    };\r\n\r\n    // Adjust height when content changes\r\n    useEffect(() => {\r\n        adjustTextareaHeight();\r\n    }, [currentAnswer]);\r\n\r\n    // Reset textarea height when messages are sent\r\n    useEffect(() => {\r\n        if (currentAnswer === '' && textareaRef.current) {\r\n            textareaRef.current.style.height = 'auto';\r\n            textareaRef.current.style.overflowY = 'hidden';\r\n        }\r\n    }, [currentAnswer]);\r\n\r\n    // Focus the textarea when the component mounts\r\n    useEffect(() => {\r\n        if (textareaRef.current && !isViewingCode) {\r\n            textareaRef.current.focus();\r\n        }\r\n    }, [isViewingCode]);\r\n\r\n    // Modified handleKeyPress for textarea\r\n    const handleTextareaKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\r\n        // Submit on Enter key without shift key\r\n        if (e.key === 'Enter' && !e.shiftKey && currentAnswer.trim()) {\r\n            e.preventDefault(); // Prevent new line\r\n            handleSubmitAnswer();\r\n        }\r\n    };\r\n\r\n    // Handle suggestion click\r\n    const handleSuggestionClick = (suggestion: string) => {\r\n        // Use the handleInputChange to set the value in the input\r\n        handleInputChange({\r\n            target: { value: suggestion }\r\n        } as React.ChangeEvent<HTMLTextAreaElement>);\r\n\r\n        // Focus the textarea after setting the value\r\n        if (textareaRef.current) {\r\n            textareaRef.current.focus();\r\n        }\r\n    };\r\n\r\n    // Handle save functionality\r\n    const [showSaveToast, setShowSaveToast] = useState(false);\r\n    const [isSaving, setIsSaving] = useState(false);\r\n\r\n    const handleSave = async () => {\r\n        if (!codeEditorRef.current || !currentQuestionId || isSaving) {\r\n            return;\r\n        }\r\n\r\n        setIsSaving(true);\r\n\r\n        const currentCode = codeEditorRef.current.getCurrentCode();\r\n\r\n        // Convert code object to CodeDraft array\r\n        const codeDrafts = Object.entries(currentCode).map(([language, value]) => ({\r\n            language,\r\n            value\r\n        }));\r\n\r\n        // Only save if there's actual code content\r\n        if (codeDrafts.length === 0 || codeDrafts.every(draft => !draft.value.trim())) {\r\n            setIsSaving(false);\r\n            return;\r\n        }\r\n\r\n        const requestBody = {\r\n            user_id: parseInt(userId || '0'),\r\n            question_id: parseInt(currentQuestionId),\r\n            code: codeDrafts\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/code/`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(requestBody)\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to save code');\r\n            }\r\n\r\n            console.log('here')\r\n\r\n            // Show success toast\r\n            setShowSaveToast(true);\r\n        } catch (error) {\r\n            console.error('Error saving code:', error);\r\n            // Optionally show error feedback\r\n        } finally {\r\n            setIsSaving(false);\r\n        }\r\n    };\r\n\r\n    // Auto-hide save toast after 3 seconds\r\n    useEffect(() => {\r\n        if (showSaveToast) {\r\n            const timer = setTimeout(() => {\r\n                setShowSaveToast(false);\r\n            }, 3000);\r\n\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [showSaveToast]);\r\n\r\n    // Render the code editor or chat view based on state\r\n    const renderMainContent = () => {\r\n        // If viewing code and not in viewOnly mode, show the code editor\r\n        if (isViewingCode && isCodingQuestion && !viewOnly) {\r\n            return (\r\n                <CodeEditorView\r\n                    ref={codeEditorRef}\r\n                    initialCode={codeContent}\r\n                    languages={codingLanguages}\r\n                    handleCodeSubmit={handleCodeSubmit}\r\n                    onCodeRun={handleCodeRun}\r\n                />\r\n            );\r\n        } else {\r\n            return (\r\n                <>\r\n                    {currentChatHistory.length === 0 ? (\r\n                        <ChatPlaceholderView\r\n                            taskType={taskType}\r\n                            isChatHistoryLoaded={isChatHistoryLoaded}\r\n                            isTestMode={isTestMode}\r\n                            inputType={currentQuestionConfig?.inputType}\r\n                            viewOnly={viewOnly}\r\n                            responseType={currentQuestionConfig?.responseType}\r\n                        />\r\n                    ) : (\r\n                        <div className=\"flex-1 overflow-y-auto messages-container\">\r\n                            <ChatHistoryView\r\n                                chatHistory={currentChatHistory}\r\n                                onViewScorecard={handleViewScorecard}\r\n                                isAiResponding={isAiResponding}\r\n                                showPreparingReport={showPreparingReport}\r\n                                currentQuestionConfig={currentQuestionConfig}\r\n                                taskType={taskType}\r\n                                onRetry={handleRetry}\r\n                                showLearnerView={showLearnerView}\r\n                                onShowLearnerViewChange={onShowLearnerViewChange}\r\n                                isAdminView={isAdminView}\r\n                            />\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Input area with fixed position at bottom */}\r\n                    {!viewOnly && (\r\n                        <div className=\"pt-2 bg-[#111111] input-container\">\r\n                            {/* Learning Material Suggestions */}\r\n                            {taskType === 'learning_material' && currentChatHistory.length === 0 && (\r\n                                <div className=\"mb-4\">\r\n                                    <div className=\"text-gray-400 text-sm mb-2 flex items-center\">\r\n                                        <Sparkles size={16} className=\"mr-2\" />\r\n                                        <span>A few suggestions to get started</span>\r\n                                    </div>\r\n                                    <div className=\"flex flex-wrap gap-2 mb-2\">\r\n                                        <button\r\n                                            className=\"px-3 py-1.5 bg-[#222222] rounded-full text-sm text-white hover:bg-[#333333] transition-colors cursor-pointer\"\r\n                                            onClick={() => handleSuggestionClick(\"Explain using an example\")}\r\n                                        >\r\n                                            Explain using an example\r\n                                        </button>\r\n                                        <button\r\n                                            className=\"px-3 py-1.5 bg-[#222222] rounded-full text-sm text-white hover:bg-[#333333] transition-colors cursor-pointer\"\r\n                                            onClick={() => handleSuggestionClick(\"Summarise it with clear takeaways\")}\r\n                                        >\r\n                                            Summarise it with clear takeaways\r\n                                        </button>\r\n                                        <button\r\n                                            className=\"px-3 py-1.5 bg-[#222222] rounded-full text-sm text-white hover:bg-[#333333] transition-colors cursor-pointer\"\r\n                                            onClick={() => handleSuggestionClick(\"Why is this important to understand\")}\r\n                                        >\r\n                                            Why is this important to understand\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                            {!(currentQuestionConfig?.responseType === 'exam' && isQuestionCompleted) && (\r\n                                /* Input area - conditional render based on input type */\r\n                                <>\r\n                                    {currentQuestionConfig?.inputType === 'audio' ? (\r\n                                        <div className=\"w-full sm:w-auto\">\r\n                                            <AudioInputComponent\r\n                                                onAudioSubmit={handleAudioSubmit}\r\n                                                isSubmitting={isSubmitting || isAiResponding}\r\n                                                maxDuration={currentQuestionConfig?.audioMaxDuration || 120}\r\n                                            />\r\n                                        </div>\r\n                                    ) : (\r\n                                        /* Hide the text input for coding questions in exam mode */\r\n                                        !(currentQuestionConfig?.responseType === 'exam' && isCodingQuestion) && (\r\n                                            <div className=\"relative flex items-center bg-[#111111] rounded-3xl py-1 overflow-hidden border border-[#222222]\">\r\n                                                <div className=\"flex-1 flex items-center\">\r\n                                                    <textarea\r\n                                                        id=\"no-border-textarea\"\r\n                                                        ref={textareaRef}\r\n                                                        placeholder={taskType === 'quiz' ? \"Type your answer here\" : \"Type your question here\"}\r\n                                                        className=\"ml-2 w-full bg-transparent text-white auto-expanding-textarea\"\r\n                                                        value={currentAnswer}\r\n                                                        onChange={handleInputChange as any}\r\n                                                        onKeyDown={handleTextareaKeyDown}\r\n                                                        autoFocus={true}\r\n                                                        disabled={false}\r\n                                                        rows={1}\r\n                                                        style={{\r\n                                                            border: \"none\",\r\n                                                            outline: \"none\",\r\n                                                            boxShadow: \"none\",\r\n                                                            padding: \"12px 24px\",\r\n                                                            resize: \"none\"\r\n                                                        }}\r\n                                                    />\r\n                                                </div>\r\n                                                <button\r\n                                                    className={`bg-white rounded-full w-10 h-10 mr-2 cursor-pointer flex items-center justify-center ${isSubmitting || isAiResponding ? 'opacity-50' : ''}`}\r\n                                                    onClick={() => handleSubmitAnswer('text')}\r\n                                                    disabled={!currentAnswer.trim() || isSubmitting || isAiResponding}\r\n                                                    aria-label=\"Submit answer\"\r\n                                                    type=\"button\"\r\n                                                >\r\n                                                    {isSubmitting ? (\r\n                                                        <div className=\"w-5 h-5 border-2 border-black border-t-transparent rounded-full animate-spin\"></div>\r\n                                                    ) : (\r\n                                                        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                            <path d=\"M5 12H19M19 12L12 5M19 12L12 19\" stroke=\"black\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                                                        </svg>\r\n                                                    )}\r\n                                                </button>\r\n                                            </div>\r\n                                        )\r\n                                    )}\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex-1 flex flex-col px-3 sm:px-6 py-6 overflow-auto h-full chat-view-wrapper\">\r\n            <style jsx global>{`\r\n                /* Target the specific textarea with an important ID */\r\n                #no-border-textarea {\r\n                    border: none !important;\r\n                    outline: none !important;\r\n                    box-shadow: none !important;\r\n                    -webkit-appearance: none !important;\r\n                }\r\n                \r\n                /* Target all focus states */\r\n                #no-border-textarea:focus,\r\n                #no-border-textarea:focus-visible,\r\n                #no-border-textarea:focus-within,\r\n                #no-border-textarea:active {\r\n                    border: none !important;\r\n                    outline: none !important;\r\n                    box-shadow: none !important;\r\n                    -webkit-box-shadow: none !important;\r\n                    -moz-box-shadow: none !important;\r\n                }\r\n                \r\n                /* Auto-expanding styles */\r\n                .auto-expanding-textarea {\r\n                    min-height: 48px;\r\n                    max-height: 144px;\r\n                    resize: none !important;\r\n                    line-height: 24px !important;\r\n                    /* Allow scrolling when needed */\r\n                    overflow-y: auto !important; \r\n                }\r\n                \r\n                /* Hide scrollbar */\r\n                .hide-scrollbar::-webkit-scrollbar {\r\n                    display: none;\r\n                }\r\n                \r\n                .hide-scrollbar {\r\n                    -ms-overflow-style: none;\r\n                    scrollbar-width: none;\r\n                }\r\n\r\n                /* Make sure the ChatView adapts to mobile layout */\r\n                @media (max-width: 1024px) {\r\n                    .chat-view-wrapper {\r\n                        height: 100% !important;\r\n                        max-height: 100% !important;\r\n                        display: flex !important;\r\n                        flex-direction: column !important;\r\n                        overflow: auto !important;\r\n                        padding-top: 0.75rem !important;\r\n                        padding-bottom: 0.75rem !important;\r\n                    }\r\n                    \r\n                    .messages-container {\r\n                        flex: 1 !important;\r\n                        overflow-y: auto !important;\r\n                        min-height: 0 !important;\r\n                        max-height: none !important;\r\n                    }\r\n                    \r\n                    .input-container {\r\n                        flex-shrink: 0 !important;\r\n                        margin-top: auto !important;\r\n                    }\r\n                    \r\n                    /* Mobile code preview styles */\r\n                    .mobile-code-preview {\r\n                        position: fixed !important;\r\n                        top: 0 !important;\r\n                        left: 0 !important;\r\n                        right: 0 !important;\r\n                        bottom: 0 !important;\r\n                        z-index: 50 !important;\r\n                        background-color: #111111 !important;\r\n                    }\r\n                    \r\n                    .mobile-code-preview-enter {\r\n                        animation: slide-up 0.3s ease-out !important;\r\n                    }\r\n                    \r\n                    @keyframes slide-up {\r\n                        from {\r\n                            transform: translateY(100%);\r\n                        }\r\n                        to {\r\n                            transform: translateY(0);\r\n                        }\r\n                    }\r\n                    \r\n                    .mobile-back-button {\r\n                        position: absolute !important;\r\n                        top: 12px !important;\r\n                        left: 12px !important;\r\n                        z-index: 60 !important;\r\n                        background-color: rgba(0, 0, 0, 0.5) !important;\r\n                        color: white !important;\r\n                        border: none !important;\r\n                        border-radius: 50% !important;\r\n                        width: 36px !important;\r\n                        height: 36px !important;\r\n                        display: flex !important;\r\n                        align-items: center !important;\r\n                        justify-content: center !important;\r\n                    }\r\n                }\r\n\r\n                /* Toggle switch styles */\r\n                .code-toggle-switch {\r\n                    position: relative;\r\n                    display: inline-block;\r\n                    height: 32px;\r\n                    border-radius: 16px;\r\n                    overflow: hidden;\r\n                    background-color: #111111;\r\n                    border: 1px solid #333333;\r\n                    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n                }\r\n                \r\n                .code-toggle-option {\r\n                    display: inline-flex;\r\n                    align-items: center;\r\n                    justify-content: center;\r\n                    height: 100%;\r\n                    padding: 0 12px;\r\n                    cursor: pointer;\r\n                    user-select: none;\r\n                    color: #999999;\r\n                    font-size: 12px;\r\n                    transition: all 0.2s ease;\r\n                    position: relative;\r\n                    z-index: 2;\r\n                }\r\n                \r\n                .code-toggle-option.active {\r\n                    color: #ffffff;\r\n                    background-color: #222222;\r\n                }\r\n                \r\n                /* Responsive styles for audio component */\r\n                @media (max-width: 640px) {\r\n                    audio {\r\n                        width: 100% !important;\r\n                    }\r\n                    \r\n                    /* Ensure audio controls are properly sized on mobile */\r\n                    .audio-recorder-container {\r\n                        width: 100% !important;\r\n                    }\r\n                }\r\n            `}</style>\r\n\r\n            {/* Toggle button for coding questions */}\r\n            {!viewOnly && isCodingQuestion &&\r\n                // Hide toggle for exam questions that are completed\r\n                !(currentQuestionConfig?.responseType === 'exam' && isQuestionCompleted) && (\r\n                    <div className={`flex items-center mb-4 ${isViewingCode && !isTestMode ? 'justify-between' : 'justify-end'}`}>\r\n                        {/* Save button - only show when code view is active */}\r\n                        {isViewingCode && !isTestMode && (\r\n                            <button\r\n                                onClick={handleSave}\r\n                                disabled={isSaving}\r\n                                className={`px-4 py-2 bg-blue-600 text-white rounded-full text-sm hover:bg-blue-700 transition-colors cursor-pointer flex items-center ${isSaving ? 'opacity-75' : ''}`}\r\n                            >\r\n                                {isSaving ? (\r\n                                    <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"></div>\r\n                                ) : (\r\n                                    <Save size={16} className=\"mr-2\" />\r\n                                )}\r\n                                <span>Save</span>\r\n                            </button>\r\n                        )}\r\n\r\n                        {/* Chat/Code toggle */}\r\n                        <div className=\"code-toggle-switch\">\r\n                            <div\r\n                                className={`code-toggle-option ${!isViewingCode ? 'active' : ''}`}\r\n                                onClick={() => setIsViewingCode(false)}\r\n                            >\r\n                                <MessageCircle size={16} className=\"mr-1\" />\r\n                                <span>Chat</span>\r\n                            </div>\r\n                            <div\r\n                                className={`code-toggle-option ${isViewingCode ? 'active' : ''}`}\r\n                                onClick={() => setIsViewingCode(true)}\r\n                            >\r\n                                <Code size={16} className=\"mr-1\" />\r\n                                <span>Code</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            {/* Main content area with code editor or chat view */}\r\n            {renderMainContent()}\r\n\r\n            {/* Save Toast */}\r\n            <Toast\r\n                show={showSaveToast}\r\n                title=\"Code Saved\"\r\n                description=\"The code will be restored when you return to this question\"\r\n                emoji=\"✅\"\r\n                onClose={() => setShowSaveToast(false)}\r\n            />\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ChatView; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3932, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/LearningMaterialViewer.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport \"@blocknote/core/fonts/inter.css\";\r\nimport \"@blocknote/mantine/style.css\";\r\nimport { useEffect, useRef, useState, useCallback } from \"react\";\r\nimport { MessageCircle, X, CheckCircle, HelpCircle, MoreVertical, Menu, MoreHorizontal, Settings, PlusCircle, ListChecks } from \"lucide-react\";\r\n\r\n// Add custom styles for dark mode\r\nimport \"./editor-styles.css\";\r\n\r\n// Import the BlockNoteEditor component\r\nimport BlockNoteEditor from \"./BlockNoteEditor\";\r\nimport { TaskData } from \"@/types\";\r\nimport { safeLocalStorage } from \"@/lib/utils/localStorage\";\r\n\r\n// Add import for ChatView\r\nimport ChatView from \"./ChatView\";\r\nimport { ChatMessage } from \"../types/quiz\";\r\n\r\ninterface LearningMaterialViewerProps {\r\n    taskId?: string;\r\n    userId?: string;\r\n    isDarkMode?: boolean;\r\n    className?: string;\r\n    readOnly?: boolean;\r\n    viewOnly?: boolean;\r\n    onMarkComplete?: () => void;\r\n}\r\n\r\nexport default function LearningMaterialViewer({\r\n    taskId,\r\n    userId = '',\r\n    isDarkMode = true,\r\n    className = \"\",\r\n    readOnly = true,\r\n    viewOnly = false,\r\n    onMarkComplete,\r\n}: LearningMaterialViewerProps) {\r\n    const editorContainerRef = useRef<HTMLDivElement>(null);\r\n    const [taskData, setTaskData] = useState<TaskData | null>(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    // Add state for button animation\r\n    const [showButtonEntrance, setShowButtonEntrance] = useState(true);\r\n    const [showButtonPulse, setShowButtonPulse] = useState(false);\r\n\r\n    // Check if user has clicked the button before\r\n    const [hasClickedFabButton, setHasClickedFabButton] = useState(false);\r\n\r\n    // Add state for mobile menu\r\n    const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\r\n    const mobileMenuRef = useRef<HTMLDivElement>(null);\r\n\r\n    // Add state for chat view\r\n    const [showChatView, setShowChatView] = useState(false);\r\n    const [chatHistory, setChatHistory] = useState<ChatMessage[]>([]);\r\n    const [isAiResponding, setIsAiResponding] = useState(false);\r\n    const [currentAnswer, setCurrentAnswer] = useState('');\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    // Add state to track viewport size\r\n    const [isMobileView, setIsMobileView] = useState(false);\r\n    // Add state for chat exit animation\r\n    const [isChatClosing, setIsChatClosing] = useState(false);\r\n\r\n    // Mobile view mode for responsive layout\r\n    const [mobileViewMode, setMobileViewMode] = useState<'content-full' | 'chat-full' | 'split'>('split');\r\n\r\n    const initialContent = taskData?.blocks && taskData.blocks.length > 0 ? taskData.blocks : undefined;\r\n\r\n    // Fetch task data when taskId changes\r\n    useEffect(() => {\r\n        if (taskId) {\r\n            setIsLoading(true);\r\n\r\n            // Use AbortController to cancel any in-flight requests\r\n            const controller = new AbortController();\r\n\r\n            fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/tasks/${taskId}`, {\r\n                signal: controller.signal\r\n            })\r\n                .then(response => {\r\n                    if (!response.ok) {\r\n                        throw new Error(`Failed to fetch task: ${response.status}`);\r\n                    }\r\n                    return response.json();\r\n                })\r\n                .then(data => {\r\n                    setTaskData(data);\r\n                    setIsLoading(false);\r\n                })\r\n                .catch(error => {\r\n                    // Ignore AbortError as it's expected when navigating away\r\n                    if (error.name !== 'AbortError') {\r\n                        console.error(\"Error fetching task data:\", error);\r\n                    }\r\n                    setIsLoading(false);\r\n                });\r\n\r\n            // Clean up function will abort the fetch if the component unmounts\r\n            // or if the effect runs again (i.e., taskId changes)\r\n            return () => {\r\n                controller.abort();\r\n            };\r\n        }\r\n    }, [taskId]);\r\n\r\n    // Check localStorage on component mount\r\n    useEffect(() => {\r\n        const hasClicked = safeLocalStorage.getItem('hasClickedLMActionsButton') === 'true';\r\n        setHasClickedFabButton(hasClicked);\r\n    }, []);\r\n\r\n    // Add effect to manage button animation\r\n    useEffect(() => {\r\n        // Start entrance animation\r\n        setShowButtonEntrance(true);\r\n\r\n        // After entrance animation completes, only start pulse if user hasn't clicked before\r\n        const timer = setTimeout(() => {\r\n            setShowButtonEntrance(false);\r\n            // Only show pulse animation if user hasn't clicked the button before\r\n            if (!hasClickedFabButton) {\r\n                setShowButtonPulse(true);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timer);\r\n    }, [hasClickedFabButton]);\r\n\r\n    // Function to toggle mobile menu\r\n    const toggleMobileMenu = () => {\r\n        setIsMobileMenuOpen(prev => !prev);\r\n\r\n        // If opening the menu, stop pulse animation and save to localStorage\r\n        if (!isMobileMenuOpen) {\r\n            setShowButtonPulse(false);\r\n\r\n            // If this is the first time clicking, save to localStorage\r\n            if (!hasClickedFabButton) {\r\n                setHasClickedFabButton(true);\r\n                safeLocalStorage.setItem('hasClickedFabButton', 'true');\r\n            }\r\n        }\r\n    };\r\n\r\n    // Add effect to handle clicks outside the mobile menu\r\n    useEffect(() => {\r\n        function handleClickOutside(event: MouseEvent) {\r\n            if (\r\n                mobileMenuRef.current &&\r\n                !mobileMenuRef.current.contains(event.target as Node) &&\r\n                !(event.target as HTMLElement).closest('.mobile-action-toggle-button')\r\n            ) {\r\n                setIsMobileMenuOpen(false);\r\n            }\r\n        }\r\n\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, []);\r\n\r\n    // Add effect to handle viewport size changes\r\n    useEffect(() => {\r\n        const checkMobileView = () => {\r\n            setIsMobileView(window.innerWidth <= 1024);\r\n        };\r\n\r\n        // Initial check\r\n        checkMobileView();\r\n\r\n        // Set up event listener for window resize\r\n        window.addEventListener('resize', checkMobileView);\r\n\r\n        // Clean up event listener\r\n        return () => {\r\n            window.removeEventListener('resize', checkMobileView);\r\n        };\r\n    }, []);\r\n\r\n    // Handle chat input change\r\n    const handleChatInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        setCurrentAnswer(e.target.value);\r\n    };\r\n\r\n    // Create a handle retry function to resubmit the last user message\r\n    const handleRetry = () => {\r\n        // Find the last user message\r\n        const lastUserMessage = [...chatHistory].reverse().find(msg => msg.sender === 'user');\r\n        if (lastUserMessage) {\r\n            // Store the message content and type before modifying chat history\r\n            const messageContent = lastUserMessage.content;\r\n            const messageType = lastUserMessage.messageType === 'code' ? 'code' : 'text';\r\n\r\n            // Filter the chat history to remove error messages and the last user message\r\n            const filteredChatHistory = chatHistory\r\n                .filter(msg => !msg.isError)\r\n                .filter(msg => msg.id !== lastUserMessage.id);\r\n\r\n            // Update the chat history state\r\n            setChatHistory(filteredChatHistory);\r\n\r\n            // Call handleChatSubmit with the filtered history\r\n            handleChatSubmit(messageType, messageContent, filteredChatHistory);\r\n        }\r\n    };\r\n\r\n    // Handle chat submit\r\n    const handleChatSubmit = async (responseType: 'text' | 'code' = 'text', currentResponse?: string, currentChatHistory?: ChatMessage[]) => {\r\n        // Use currentResponse if provided (for retry), otherwise use currentAnswer\r\n        const messageContent = currentResponse || currentAnswer;\r\n\r\n        if (!messageContent.trim() || !taskId) return;\r\n\r\n        // Add user message to chat history\r\n        const newMessage: ChatMessage = {\r\n            id: Date.now().toString(),\r\n            content: messageContent,\r\n            sender: 'user',\r\n            timestamp: new Date(),\r\n            messageType: responseType\r\n        };\r\n\r\n        const chatHistoryToUse = currentChatHistory ? currentChatHistory : chatHistory;\r\n\r\n        // Use the updated chat history instead of relying on the chatHistory state\r\n        const formattedChatHistory = chatHistoryToUse.map(msg => ({\r\n            role: msg.sender === 'user' ? 'user' : 'assistant',\r\n            content: msg.content,\r\n            response_type: msg.messageType,\r\n        }));\r\n\r\n        setChatHistory(prev => [...prev, newMessage]);\r\n\r\n        // Only clear currentAnswer if we're not using an override\r\n        if (!currentResponse) {\r\n            setCurrentAnswer('');\r\n        }\r\n\r\n        // Set AI responding state\r\n        setIsAiResponding(true);\r\n        setIsSubmitting(true);\r\n\r\n        try {\r\n            // Prepare the request body\r\n            const responseContent = messageContent.trim();\r\n\r\n            const requestBody = {\r\n                user_response: responseContent,\r\n                response_type: 'text',\r\n                task_id: parseInt(taskId),\r\n                chat_history: formattedChatHistory,\r\n                task_type: 'learning_material',\r\n                user_id: userId\r\n            };\r\n\r\n            let receivedAnyResponse = false;\r\n\r\n            // Make the API call\r\n            const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/ai/chat`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(requestBody),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`API request failed with status ${response.status}`);\r\n            }\r\n\r\n            // Get the response body as a readable stream\r\n            const reader = response.body?.getReader();\r\n            if (!reader) {\r\n                throw new Error('ReadableStream not supported');\r\n            }\r\n\r\n            // Create a unique ID for the AI message\r\n            const aiMessageId = Date.now().toString();\r\n\r\n            // Add initial empty AI message to chat history\r\n            const aiMessage: ChatMessage = {\r\n                id: aiMessageId,\r\n                content: '',\r\n                sender: 'ai',\r\n                timestamp: new Date(),\r\n                messageType: 'text'\r\n            }\r\n\r\n            // Process the stream\r\n            let accumulatedContent = '';\r\n            const processStream = async () => {\r\n                try {\r\n                    while (true) {\r\n                        const { done, value } = await reader.read();\r\n\r\n                        if (done) {\r\n                            break;\r\n                        }\r\n\r\n                        // Decode the value to text\r\n                        const text = new TextDecoder().decode(value);\r\n\r\n                        // Split the text into chunks (assuming each chunk is a JSON object)\r\n                        const chunks = text.split('\\n').filter(chunk => chunk.trim() !== '');\r\n\r\n                        for (const chunk of chunks) {\r\n                            try {\r\n                                const data = JSON.parse(chunk);\r\n\r\n                                // Process the response field if it exists\r\n                                if (data.response) {\r\n                                    // Replace content instead of accumulating it\r\n                                    accumulatedContent = data.response;\r\n\r\n                                    if (!receivedAnyResponse) {\r\n                                        receivedAnyResponse = true;\r\n\r\n                                        // Stop showing the animation\r\n                                        setIsAiResponding(false);\r\n\r\n                                        setChatHistory(prev => [...prev, {\r\n                                            ...aiMessage,\r\n                                            content: accumulatedContent\r\n                                        }]);\r\n\r\n                                    } else {\r\n\r\n                                        // Update the AI message with the latest content\r\n                                        setChatHistory(prev =>\r\n                                            prev.map(msg =>\r\n                                                msg.id === aiMessageId\r\n                                                    ? { ...msg, content: accumulatedContent }\r\n                                                    : msg\r\n                                            )\r\n\r\n                                        );\r\n                                    }\r\n                                }\r\n                            } catch (e) {\r\n                                console.error('Error parsing JSON chunk:', e);\r\n                            }\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error reading stream:', error);\r\n                } finally {\r\n                    // If we never received any feedback, also reset the AI responding state\r\n                    if (!receivedAnyResponse) {\r\n                        setIsAiResponding(false);\r\n                    }\r\n\r\n                    setIsSubmitting(false);\r\n                }\r\n            };\r\n\r\n            // Start processing the stream\r\n            await processStream();\r\n\r\n        } catch (error) {\r\n            console.error('Error in chat submission:', error);\r\n\r\n            // Add error message to chat history\r\n            const errorMessage: ChatMessage = {\r\n                id: Date.now().toString(),\r\n                content: 'There was an error while processing your response. Please try again.',\r\n                sender: 'ai',\r\n                timestamp: new Date(),\r\n                messageType: 'text',\r\n                isError: true\r\n            };\r\n\r\n            setChatHistory(prev => [...prev, errorMessage]);\r\n\r\n            // Reset states\r\n            setIsAiResponding(false);\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n\r\n    // Function to handle audio submission\r\n    const handleAudioSubmit = (audioBlob: Blob) => {\r\n    };\r\n\r\n    // Function to handle viewing scorecard\r\n    const handleViewScorecard = (scorecard: any[]) => {\r\n    };\r\n\r\n    // Handle ask doubt button click\r\n    const handleAskDoubt = () => {\r\n        if (showChatView && isMobileView) {\r\n            // For mobile view, start closing animation first\r\n            setIsChatClosing(true);\r\n            // Wait for animation to complete before hiding chat\r\n            setTimeout(() => {\r\n                setShowChatView(false);\r\n                setIsChatClosing(false);\r\n            }, 300); // Match this with animation duration\r\n        } else {\r\n            setShowChatView(prev => !prev);\r\n        }\r\n    };\r\n\r\n    // Apply CSS classes based on mode\r\n    useEffect(() => {\r\n        const container = document.querySelector('.material-view-container');\r\n        if (container) {\r\n            // Remove existing mode classes\r\n            container.classList.remove('mode-split', 'mode-content-full', 'mode-chat-full');\r\n            // Add current mode class\r\n            container.classList.add(`mode-${mobileViewMode}`);\r\n        }\r\n    }, [mobileViewMode]);\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"h-full flex items-center justify-center\">\r\n                <div data-testid=\"loading-spinner\" className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-white\"></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={`w-full h-full ${className}`}>\r\n            {/* Add responsive styles */}\r\n            <style jsx>{`\r\n                .two-column-grid {\r\n                    display: grid;\r\n                    grid-template-columns: 1fr 1fr;\r\n                    height: 100%;\r\n                    \r\n                    @media (max-width: 1024px) {\r\n                        grid-template-columns: 1fr;\r\n                        grid-template-rows: 50% 50%;\r\n                        height: 100%;\r\n                        overflow: hidden;\r\n                    }\r\n                }\r\n\r\n                .material-view-container {\r\n                    height: 100% !important;\r\n                    max-height: 100% !important;\r\n                    overflow: hidden !important;\r\n                    display: grid !important;\r\n                }\r\n                \r\n                /* Make sure the content and chat containers properly fit their content */\r\n                @media (max-width: 1024px) {               \r\n                    .material-view-container {\r\n                        height: 100% !important;\r\n                        max-height: 100% !important;\r\n                        overflow: hidden !important;\r\n                        display: grid !important;\r\n                        grid-template-rows: 50% 50% !important;\r\n                        grid-template-columns: 1fr !important;\r\n                    }\r\n\r\n                    .content-container {\r\n                        height: 100% !important;\r\n                        max-height: 100% !important;\r\n                        overflow-y: auto !important;\r\n                        grid-row: 1 !important;\r\n                    }\r\n                    \r\n                    .chat-container {\r\n                        height: 100% !important;\r\n                        max-height: 100% !important;\r\n                        overflow: hidden !important;\r\n                        display: flex !important;\r\n                        flex-direction: column !important;\r\n                        grid-row: 2 !important;\r\n                    }\r\n                    \r\n                    /* Ensure the messages area scrolls but input stays fixed */\r\n                    .chat-container .messages-container {\r\n                        flex: 1 !important;\r\n                        overflow-y: auto !important;\r\n                        min-height: 0 !important;\r\n                    }\r\n                    \r\n                    /* Ensure the input area stays at the bottom and doesn't scroll */\r\n                    .chat-container .input-container {\r\n                        flex-shrink: 0 !important;\r\n                        position: sticky !important;\r\n                        bottom: 0 !important;\r\n                        background-color: #111111 !important;\r\n                        z-index: 10 !important;\r\n                        padding-top: 0.5rem !important;\r\n                        border-top: 1px solid #222222 !important;\r\n                    }\r\n                    \r\n                    /* Mobile layout view modes */\r\n                    .material-view-container.mode-content-full {\r\n                        grid-template-rows: 100% 0% !important;\r\n                    }\r\n                    \r\n                    .material-view-container.mode-content-full .content-container {\r\n                        display: block !important;\r\n                        height: 100% !important;\r\n                    }\r\n                    \r\n                    .material-view-container.mode-content-full .chat-container {\r\n                        display: none !important;\r\n                    }\r\n                    \r\n                    .material-view-container.mode-chat-full {\r\n                        grid-template-rows: 0% 100% !important;\r\n                    }\r\n                    \r\n                    .material-view-container.mode-chat-full .content-container {\r\n                        display: none !important;\r\n                    }\r\n                    \r\n                    .material-view-container.mode-chat-full .chat-container {\r\n                        display: flex !important;\r\n                        height: 100% !important;\r\n                    }\r\n                    \r\n                    .material-view-container.mode-split {\r\n                        grid-template-rows: 50% 50% !important;\r\n                    }\r\n                }\r\n\r\n                /* Slide up animation for mobile chat */\r\n                @keyframes slide-up {\r\n                    0% {\r\n                        transform: translateY(100%);\r\n                    }\r\n                    100% {\r\n                        transform: translateY(0);\r\n                    }\r\n                }\r\n\r\n                /* Slide down animation for mobile chat */\r\n                @keyframes slide-down {\r\n                    0% {\r\n                        transform: translateY(0);\r\n                    }\r\n                    100% {\r\n                        transform: translateY(100%);\r\n                    }\r\n                }\r\n\r\n                /* Mobile-specific styles for the chat container when not in split view */\r\n                @media (max-width: 1024px) {\r\n                    /* Ensure the editor stays within the content container on mobile */\r\n                    .content-container .dark-editor {\r\n                        max-height: calc(100% - 80px) !important;\r\n                        overflow: auto !important;\r\n                    }\r\n                    \r\n                    .mobile-chat-container {\r\n                        position: fixed !important;\r\n                        left: 0 !important;\r\n                        right: 0 !important;\r\n                        bottom: 0 !important;\r\n                        top: 0 !important;\r\n                        z-index: 50 !important;\r\n                        background-color: #111111 !important;\r\n                        animation: slide-up 0.3s ease-out forwards !important;\r\n                        display: flex !important;\r\n                        flex-direction: column !important;\r\n                        overflow: hidden !important;\r\n                    }\r\n                    \r\n                    .mobile-chat-container.slide-down {\r\n                        animation: slide-down 0.3s ease-out forwards !important;\r\n                    }\r\n                }\r\n\r\n                /* Button animation styles */\r\n                @keyframes pulse-ring {\r\n                    0% {\r\n                        box-shadow: 0 0 0 0 rgba(147, 51, 234, 0.7);\r\n                    }\r\n                    70% {\r\n                        box-shadow: 0 0 0 10px rgba(147, 51, 234, 0);\r\n                    }\r\n                    100% {\r\n                        box-shadow: 0 0 0 0 rgba(147, 51, 234, 0);\r\n                    }\r\n                }\r\n\r\n                /* Animation for the inner pulse */\r\n                @keyframes pulse-dot {\r\n                    0% {\r\n                        transform: scale(0.95);\r\n                    }\r\n                    70% {\r\n                        transform: scale(1.05);\r\n                    }\r\n                    100% {\r\n                        transform: scale(0.95);\r\n                    }\r\n                }\r\n                \r\n                /* Entrance animation for the button */\r\n                @keyframes button-entrance {\r\n                    0% {\r\n                        opacity: 0;\r\n                        transform: scale(0.5) translateY(20px);\r\n                    }\r\n                    60% {\r\n                        transform: scale(1.1) translateY(-5px);\r\n                    }\r\n                    80% {\r\n                        transform: scale(0.95) translateY(2px);\r\n                    }\r\n                    100% {\r\n                        opacity: 1;\r\n                        transform: scale(1) translateY(0);\r\n                    }\r\n                }\r\n                \r\n                .button-entrance {\r\n                    animation: button-entrance 0.8s cubic-bezier(0.215, 0.61, 0.355, 1) forwards;\r\n                }\r\n\r\n                .button-pulse {\r\n                    animation: pulse-ring 1.5s cubic-bezier(0.215, 0.61, 0.355, 1) infinite;\r\n                }\r\n\r\n                .button-pulse:after {\r\n                    content: '';\r\n                    position: absolute;\r\n                    left: 0;\r\n                    right: 0;\r\n                    top: 0;\r\n                    bottom: 0;\r\n                    border-radius: 50%;\r\n                    box-shadow: 0 0 8px 4px rgba(147, 51, 234, 0.5);\r\n                    animation: pulse-dot 1.5s cubic-bezier(0.455, 0.03, 0.515, 0.955) infinite;\r\n                }\r\n                \r\n                /* Responsive styles for the action button */\r\n                .mobile-action-button {\r\n                    /* Default mobile styles */\r\n                    width: 3.5rem;\r\n                    height: 3.5rem;\r\n                    bottom: 1.5rem;\r\n                }\r\n\r\n                /* Center the icon in mobile view */\r\n                .mobile-icon {\r\n                    margin-right: 0;\r\n                }\r\n                \r\n                @media (min-width: 1025px) {\r\n                    .mobile-action-button {\r\n                        /* Desktop styles */\r\n                        padding: 0 1.5rem;\r\n                        width: auto;\r\n                        height: 3rem;\r\n                        bottom: 6rem;\r\n                    }\r\n                    \r\n                    /* In desktop view, add margin to the icon */\r\n                    .mobile-icon {\r\n                        margin-right: 0.5rem;\r\n                    }\r\n                }\r\n            `}</style>\r\n\r\n            <div className={`bg-[#111111] material-view-container ${showChatView ? (isMobileView ? 'mode-chat-full' : 'two-column-grid rounded-md overflow-hidden split-view-container') : 'mode-content-full'}`}>\r\n                {/* Content Container - Always rendered to avoid reloading */}\r\n                <div\r\n                    className=\"py-6 flex flex-col bg-[#1A1A1A] h-full content-container\"\r\n                    style={{ overflow: 'auto' }}\r\n                    ref={editorContainerRef}\r\n                >\r\n                    <div className=\"flex-1\">\r\n                        <BlockNoteEditor\r\n                            initialContent={initialContent}\r\n                            onChange={() => { }} // Read-only, no changes\r\n                            isDarkMode={isDarkMode}\r\n                            readOnly={true}\r\n                            className=\"dark-editor\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Chat Container - Only visible when showChatView is true */}\r\n                {showChatView && (\r\n                    <div className={`${isMobileView ? `mobile-chat-container ${isChatClosing ? 'slide-down' : ''}` : 'flex flex-col bg-[#111111] h-full overflow-hidden lg:border-l lg:border-t-0 sm:border-t sm:border-l-0 border-[#222222]'} chat-container`}>\r\n                        <div className=\"chat-header flex justify-between items-center px-4 py-2 border-b border-[#222222]\">\r\n                            <h3 className=\"text-white text-sm font-light\">Ask your doubts</h3>\r\n\r\n                            <button\r\n                                onClick={handleAskDoubt}\r\n                                className=\"text-white hover:bg-[#222222] rounded-full p-1 transition-colors cursor-pointer\"\r\n                                aria-label=\"Close chat\"\r\n                            >\r\n                                <X size={18} />\r\n                            </button>\r\n                        </div>\r\n                        <ChatView\r\n                            currentChatHistory={chatHistory}\r\n                            isAiResponding={isAiResponding}\r\n                            showPreparingReport={false}\r\n                            isChatHistoryLoaded={true}\r\n                            isTestMode={false}\r\n                            taskType=\"learning_material\"\r\n                            isSubmitting={isSubmitting}\r\n                            currentAnswer={currentAnswer}\r\n                            handleInputChange={handleChatInputChange}\r\n                            handleSubmitAnswer={handleChatSubmit}\r\n                            handleAudioSubmit={handleAudioSubmit}\r\n                            handleViewScorecard={handleViewScorecard}\r\n                            completedQuestionIds={{}}\r\n                            handleRetry={handleRetry}\r\n                        />\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Floating button for desktop and mobile with different layouts */}\r\n            {\r\n                !showChatView && !viewOnly && (\r\n                    <>\r\n                        {/* Floating action button - behavior changes based on screen size */}\r\n                        <button\r\n                            onClick={() => {\r\n                                // For desktop view OR mobile view with no onMarkComplete, directly trigger handleAskDoubt\r\n                                if (!isMobileView || !onMarkComplete) {\r\n                                    // For desktop view direct click\r\n                                    if (!hasClickedFabButton) {\r\n                                        setHasClickedFabButton(true);\r\n                                        safeLocalStorage.setItem('hasClickedFabButton', 'true');\r\n                                    }\r\n                                    handleAskDoubt();\r\n                                } else {\r\n                                    // Only toggle menu in mobile view when onMarkComplete exists\r\n                                    toggleMobileMenu();\r\n                                }\r\n                            }}\r\n                            className={`fixed right-6 bottom-12 mobile-action-toggle-button mobile-action-button rounded-full bg-purple-700 text-white flex items-center justify-center shadow-lg z-20 cursor-pointer transition-transform duration-300 focus:outline-none ${showButtonEntrance ? 'button-entrance' : ''} ${showButtonPulse ? 'button-pulse' : ''}`}\r\n                            style={{ bottom: '100px' }}\r\n                            aria-label={isMobileMenuOpen ? \"Close menu\" : \"Ask a doubt\"}\r\n                        >\r\n                            {isMobileMenuOpen ? (\r\n                                <X className=\"h-6 w-6\" />\r\n                            ) : (\r\n                                <>\r\n                                    {/* \r\n                                  In mobile view:\r\n                                  - Show MessageCircle directly if onMarkComplete is not defined\r\n                                  - Show ListChecks as toggle icon if onMarkComplete exists (representing task actions)\r\n                                */}\r\n                                    <span className=\"lg:hidden\">\r\n                                        {!onMarkComplete ? (\r\n                                            <MessageCircle className=\"h-6 w-6\" />\r\n                                        ) : (\r\n                                            <ListChecks className=\"h-6 w-6\" strokeWidth={2} />\r\n                                        )}\r\n                                    </span>                                    <span className=\"hidden lg:flex lg:items-center\">\r\n                                        <MessageCircle className=\"h-5 w-5 mobile-icon\" />\r\n                                        <span className=\"lg:ml-2\">Ask a doubt</span>\r\n                                    </span>\r\n                                </>\r\n                            )}\r\n                        </button>\r\n\r\n                        {/* Only show mobile menu overlay and options when onMarkComplete exists */}\r\n                        {isMobileMenuOpen && onMarkComplete && (\r\n                            <div\r\n                                className=\"fixed inset-0 z-10\"\r\n                                style={{ backgroundColor: 'rgba(0, 0, 0, 0.8)' }}\r\n                                aria-hidden=\"true\"\r\n                                onClick={() => setIsMobileMenuOpen(false)}\r\n                            />\r\n                        )}\r\n\r\n                        {/* Mobile menu - only shown on smaller screens and when onMarkComplete exists */}\r\n                        {isMobileMenuOpen && onMarkComplete && (\r\n                            <div className=\"lg:hidden fixed right-6 flex flex-col gap-4 items-end z-20\" style={{ bottom: '170px' }} ref={mobileMenuRef}>\r\n                                {/* Ask a doubt button */}\r\n                                <div className=\"flex items-center gap-3\">\r\n                                    <span className=\"bg-black text-white py-2 px-4 rounded-full text-sm shadow-md\">\r\n                                        Ask a doubt\r\n                                    </span>\r\n                                    <button\r\n                                        onClick={() => {\r\n                                            setIsMobileMenuOpen(false);\r\n                                            handleAskDoubt();\r\n                                        }}\r\n                                        className=\"mobile-action-button rounded-full bg-white text-black flex items-center justify-center shadow-md cursor-pointer hover:bg-purple-600 transition-colors\"\r\n                                        aria-label=\"Ask a doubt\"\r\n                                    >\r\n                                        <MessageCircle className=\"h-6 w-6\" />\r\n                                    </button>\r\n                                </div>\r\n\r\n                                {/* Mark as complete button */}\r\n                                <div className=\"flex items-center gap-3\">\r\n                                    <span className=\"bg-black text-white py-2 px-4 rounded-full text-sm shadow-md\">\r\n                                        Mark as complete\r\n                                    </span>\r\n                                    <button\r\n                                        onClick={() => {\r\n                                            setIsMobileMenuOpen(false);\r\n                                            onMarkComplete();\r\n                                        }}\r\n                                        className=\"mobile-action-button rounded-full bg-green-700 text-white flex items-center justify-center shadow-md cursor-pointer hover:bg-purple-600 transition-colors\"\r\n                                        aria-label=\"Mark as complete\"\r\n                                    >\r\n                                        <CheckCircle className=\"h-6 w-6\" />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n"],"names":[],"mappings":";;;AA8EqB;;;AA1ErB;AACA;AAAA;AAAA;AAAA;AAKA,uCAAuC;AACvC;AAEA;AAEA,0BAA0B;AAC1B;;;AAhBA;;;;;;;;;;AA6Be,SAAS,uBAAuB,KAQjB;QARiB,EAC3C,MAAM,EACN,SAAS,EAAE,EACX,aAAa,IAAI,EACjB,YAAY,EAAE,EACd,WAAW,IAAI,EACf,WAAW,KAAK,EAChB,cAAc,EACY,GARiB;;IAS3C,MAAM,qBAAqB,CAAA,GAAA,4QAAA,CAAA,SAAM,AAAD,EAAkB;IAClD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,4QAAA,CAAA,WAAQ,AAAD,EAAmB;IAC1D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,4QAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,iCAAiC;IACjC,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,4QAAA,CAAA,WAAQ,AAAD,EAAE;IAC7D,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,4QAAA,CAAA,WAAQ,AAAD,EAAE;IAEvD,8CAA8C;IAC9C,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,4QAAA,CAAA,WAAQ,AAAD,EAAE;IAE/D,4BAA4B;IAC5B,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,4QAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,gBAAgB,CAAA,GAAA,4QAAA,CAAA,SAAM,AAAD,EAAkB;IAE7C,0BAA0B;IAC1B,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,4QAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,4QAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE;IAChE,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,4QAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,4QAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,4QAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,mCAAmC;IACnC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,4QAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,oCAAoC;IACpC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,4QAAA,CAAA,WAAQ,AAAD,EAAE;IAEnD,yCAAyC;IACzC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,4QAAA,CAAA,WAAQ,AAAD,EAA0C;IAE7F,MAAM,iBAAiB,CAAA,qBAAA,+BAAA,SAAU,MAAM,KAAI,SAAS,MAAM,CAAC,MAAM,GAAG,IAAI,SAAS,MAAM,GAAG;IAE1F,sCAAsC;IACtC,CAAA,GAAA,4QAAA,CAAA,YAAS,AAAD;4CAAE;YACN,IAAI,QAAQ;gBACR,aAAa;gBAEb,uDAAuD;gBACvD,MAAM,aAAa,IAAI;gBAEvB,MAAM,AAAC,GAA+C,kEAAT,WAAgB,OAAP,SAAU;oBAC5D,QAAQ,WAAW,MAAM;gBAC7B,GACK,IAAI;wDAAC,CAAA;wBACF,IAAI,CAAC,SAAS,EAAE,EAAE;4BACd,MAAM,IAAI,MAAM,AAAC,yBAAwC,OAAhB,SAAS,MAAM;wBAC5D;wBACA,OAAO,SAAS,IAAI;oBACxB;uDACC,IAAI;wDAAC,CAAA;wBACF,YAAY;wBACZ,aAAa;oBACjB;uDACC,KAAK;wDAAC,CAAA;wBACH,0DAA0D;wBAC1D,IAAI,MAAM,IAAI,KAAK,cAAc;4BAC7B,QAAQ,KAAK,CAAC,6BAA6B;wBAC/C;wBACA,aAAa;oBACjB;;gBAEJ,mEAAmE;gBACnE,qDAAqD;gBACrD;wDAAO;wBACH,WAAW,KAAK;oBACpB;;YACJ;QACJ;2CAAG;QAAC;KAAO;IAEX,wCAAwC;IACxC,CAAA,GAAA,4QAAA,CAAA,YAAS,AAAD;4CAAE;YACN,MAAM,aAAa,sIAAA,CAAA,mBAAgB,CAAC,OAAO,CAAC,iCAAiC;YAC7E,uBAAuB;QAC3B;2CAAG,EAAE;IAEL,wCAAwC;IACxC,CAAA,GAAA,4QAAA,CAAA,YAAS,AAAD;4CAAE;YACN,2BAA2B;YAC3B,sBAAsB;YAEtB,qFAAqF;YACrF,MAAM,QAAQ;0DAAW;oBACrB,sBAAsB;oBACtB,qEAAqE;oBACrE,IAAI,CAAC,qBAAqB;wBACtB,mBAAmB;oBACvB;gBACJ;yDAAG;YAEH;oDAAO,IAAM,aAAa;;QAC9B;2CAAG;QAAC;KAAoB;IAExB,iCAAiC;IACjC,MAAM,mBAAmB;QACrB,oBAAoB,CAAA,OAAQ,CAAC;QAE7B,qEAAqE;QACrE,IAAI,CAAC,kBAAkB;YACnB,mBAAmB;YAEnB,2DAA2D;YAC3D,IAAI,CAAC,qBAAqB;gBACtB,uBAAuB;gBACvB,sIAAA,CAAA,mBAAgB,CAAC,OAAO,CAAC,uBAAuB;YACpD;QACJ;IACJ;IAEA,sDAAsD;IACtD,CAAA,GAAA,4QAAA,CAAA,YAAS,AAAD;4CAAE;YACN,SAAS,mBAAmB,KAAiB;gBACzC,IACI,cAAc,OAAO,IACrB,CAAC,cAAc,OAAO,CAAC,QAAQ,CAAC,MAAM,MAAM,KAC5C,CAAC,AAAC,MAAM,MAAM,CAAiB,OAAO,CAAC,iCACzC;oBACE,oBAAoB;gBACxB;YACJ;YAEA,SAAS,gBAAgB,CAAC,aAAa;YACvC;oDAAO;oBACH,SAAS,mBAAmB,CAAC,aAAa;gBAC9C;;QACJ;2CAAG,EAAE;IAEL,6CAA6C;IAC7C,CAAA,GAAA,4QAAA,CAAA,YAAS,AAAD;4CAAE;YACN,MAAM;oEAAkB;oBACpB,gBAAgB,OAAO,UAAU,IAAI;gBACzC;;YAEA,gBAAgB;YAChB;YAEA,0CAA0C;YAC1C,OAAO,gBAAgB,CAAC,UAAU;YAElC,0BAA0B;YAC1B;oDAAO;oBACH,OAAO,mBAAmB,CAAC,UAAU;gBACzC;;QACJ;2CAAG,EAAE;IAEL,2BAA2B;IAC3B,MAAM,wBAAwB,CAAC;QAC3B,iBAAiB,EAAE,MAAM,CAAC,KAAK;IACnC;IAEA,mEAAmE;IACnE,MAAM,cAAc;QAChB,6BAA6B;QAC7B,MAAM,kBAAkB;eAAI;SAAY,CAAC,OAAO,GAAG,IAAI,CAAC,CAAA,MAAO,IAAI,MAAM,KAAK;QAC9E,IAAI,iBAAiB;YACjB,mEAAmE;YACnE,MAAM,iBAAiB,gBAAgB,OAAO;YAC9C,MAAM,cAAc,gBAAgB,WAAW,KAAK,SAAS,SAAS;YAEtE,6EAA6E;YAC7E,MAAM,sBAAsB,YACvB,MAAM,CAAC,CAAA,MAAO,CAAC,IAAI,OAAO,EAC1B,MAAM,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK,gBAAgB,EAAE;YAEhD,gCAAgC;YAChC,eAAe;YAEf,kDAAkD;YAClD,iBAAiB,aAAa,gBAAgB;QAClD;IACJ;IAEA,qBAAqB;IACrB,MAAM,mBAAmB;YAAO,gFAAgC,QAAQ,gEAA0B;QAC9F,2EAA2E;QAC3E,MAAM,iBAAiB,mBAAmB;QAE1C,IAAI,CAAC,eAAe,IAAI,MAAM,CAAC,QAAQ;QAEvC,mCAAmC;QACnC,MAAM,aAA0B;YAC5B,IAAI,KAAK,GAAG,GAAG,QAAQ;YACvB,SAAS;YACT,QAAQ;YACR,WAAW,IAAI;YACf,aAAa;QACjB;QAEA,MAAM,mBAAmB,qBAAqB,qBAAqB;QAEnE,2EAA2E;QAC3E,MAAM,uBAAuB,iBAAiB,GAAG,CAAC,CAAA,MAAO,CAAC;gBACtD,MAAM,IAAI,MAAM,KAAK,SAAS,SAAS;gBACvC,SAAS,IAAI,OAAO;gBACpB,eAAe,IAAI,WAAW;YAClC,CAAC;QAED,eAAe,CAAA,OAAQ;mBAAI;gBAAM;aAAW;QAE5C,0DAA0D;QAC1D,IAAI,CAAC,iBAAiB;YAClB,iBAAiB;QACrB;QAEA,0BAA0B;QAC1B,kBAAkB;QAClB,gBAAgB;QAEhB,IAAI;gBA6Be;YA5Bf,2BAA2B;YAC3B,MAAM,kBAAkB,eAAe,IAAI;YAE3C,MAAM,cAAc;gBAChB,eAAe;gBACf,eAAe;gBACf,SAAS,SAAS;gBAClB,cAAc;gBACd,WAAW;gBACX,SAAS;YACb;YAEA,IAAI,sBAAsB;YAE1B,oBAAoB;YACpB,MAAM,WAAW,MAAM,MAAM,AAAC,GAAsC,kEAAA,aAAW;gBAC3E,QAAQ;gBACR,SAAS;oBACL,gBAAgB;gBACpB;gBACA,MAAM,KAAK,SAAS,CAAC;YACzB;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBACd,MAAM,IAAI,MAAM,AAAC,kCAAiD,OAAhB,SAAS,MAAM;YACrE;YAEA,6CAA6C;YAC7C,MAAM,UAAS,iBAAA,SAAS,IAAI,cAAb,qCAAA,eAAe,SAAS;YACvC,IAAI,CAAC,QAAQ;gBACT,MAAM,IAAI,MAAM;YACpB;YAEA,wCAAwC;YACxC,MAAM,cAAc,KAAK,GAAG,GAAG,QAAQ;YAEvC,+CAA+C;YAC/C,MAAM,YAAyB;gBAC3B,IAAI;gBACJ,SAAS;gBACT,QAAQ;gBACR,WAAW,IAAI;gBACf,aAAa;YACjB;YAEA,qBAAqB;YACrB,IAAI,qBAAqB;YACzB,MAAM,gBAAgB;gBAClB,IAAI;oBACA,MAAO,KAAM;wBACT,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,OAAO,IAAI;wBAEzC,IAAI,MAAM;4BACN;wBACJ;wBAEA,2BAA2B;wBAC3B,MAAM,OAAO,IAAI,cAAc,MAAM,CAAC;wBAEtC,oEAAoE;wBACpE,MAAM,SAAS,KAAK,KAAK,CAAC,MAAM,MAAM,CAAC,CAAA,QAAS,MAAM,IAAI,OAAO;wBAEjE,KAAK,MAAM,SAAS,OAAQ;4BACxB,IAAI;gCACA,MAAM,OAAO,KAAK,KAAK,CAAC;gCAExB,0CAA0C;gCAC1C,IAAI,KAAK,QAAQ,EAAE;oCACf,6CAA6C;oCAC7C,qBAAqB,KAAK,QAAQ;oCAElC,IAAI,CAAC,qBAAqB;wCACtB,sBAAsB;wCAEtB,6BAA6B;wCAC7B,kBAAkB;wCAElB,eAAe,CAAA,OAAQ;mDAAI;gDAAM;oDAC7B,GAAG,SAAS;oDACZ,SAAS;gDACb;6CAAE;oCAEN,OAAO;wCAEH,gDAAgD;wCAChD,eAAe,CAAA,OACX,KAAK,GAAG,CAAC,CAAA,MACL,IAAI,EAAE,KAAK,cACL;oDAAE,GAAG,GAAG;oDAAE,SAAS;gDAAmB,IACtC;oCAIlB;gCACJ;4BACJ,EAAE,OAAO,GAAG;gCACR,QAAQ,KAAK,CAAC,6BAA6B;4BAC/C;wBACJ;oBACJ;gBACJ,EAAE,OAAO,OAAO;oBACZ,QAAQ,KAAK,CAAC,yBAAyB;gBAC3C,SAAU;oBACN,wEAAwE;oBACxE,IAAI,CAAC,qBAAqB;wBACtB,kBAAkB;oBACtB;oBAEA,gBAAgB;gBACpB;YACJ;YAEA,8BAA8B;YAC9B,MAAM;QAEV,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,6BAA6B;YAE3C,oCAAoC;YACpC,MAAM,eAA4B;gBAC9B,IAAI,KAAK,GAAG,GAAG,QAAQ;gBACvB,SAAS;gBACT,QAAQ;gBACR,WAAW,IAAI;gBACf,aAAa;gBACb,SAAS;YACb;YAEA,eAAe,CAAA,OAAQ;uBAAI;oBAAM;iBAAa;YAE9C,eAAe;YACf,kBAAkB;YAClB,gBAAgB;QACpB;IACJ;IAEA,sCAAsC;IACtC,MAAM,oBAAoB,CAAC,aAC3B;IAEA,uCAAuC;IACvC,MAAM,sBAAsB,CAAC,aAC7B;IAEA,gCAAgC;IAChC,MAAM,iBAAiB;QACnB,IAAI,gBAAgB,cAAc;YAC9B,iDAAiD;YACjD,iBAAiB;YACjB,oDAAoD;YACpD,WAAW;gBACP,gBAAgB;gBAChB,iBAAiB;YACrB,GAAG,MAAM,qCAAqC;QAClD,OAAO;YACH,gBAAgB,CAAA,OAAQ,CAAC;QAC7B;IACJ;IAEA,kCAAkC;IAClC,CAAA,GAAA,4QAAA,CAAA,YAAS,AAAD;4CAAE;YACN,MAAM,YAAY,SAAS,aAAa,CAAC;YACzC,IAAI,WAAW;gBACX,+BAA+B;gBAC/B,UAAU,SAAS,CAAC,MAAM,CAAC,cAAc,qBAAqB;gBAC9D,yBAAyB;gBACzB,UAAU,SAAS,CAAC,GAAG,CAAC,AAAC,QAAsB,OAAf;YACpC;QACJ;2CAAG;QAAC;KAAe;IAEnB,IAAI,WAAW;QACX,qBACI,4SAAC;YAAI,WAAU;sBACX,cAAA,4SAAC;gBAAI,eAAY;gBAAkB,WAAU;;;;;;;;;;;IAGzD;IAEA,qBACI,4SAAC;kDAAe,AAAC,iBAA0B,OAAV;;;;;;0BAgP7B,4SAAC;0DAAe,AAAC,wCAAkL,OAA3I,eAAgB,eAAe,mBAAmB,oEAAqE;;kCAE3K,4SAAC;wBAEG,OAAO;4BAAE,UAAU;wBAAO;wBAC1B,KAAK;kEAFK;kCAIV,cAAA,4SAAC;sEAAc;sCACX,cAAA,4SAAC,wIAAA,CAAA,UAAe;gCACZ,gBAAgB;gCAChB,UAAU,KAAQ;gCAClB,YAAY;gCACZ,UAAU;gCACV,WAAU;;;;;;;;;;;;;;;;oBAMrB,8BACG,4SAAC;kEAAe,AAAC,GAAyM,OAAvM,eAAe,AAAC,yBAA0D,OAAlC,gBAAgB,eAAe,MAAO,0HAAyH;;0CACtN,4SAAC;0EAAc;;kDACX,4SAAC;kFAAa;kDAAgC;;;;;;kDAE9C,4SAAC;wCACG,SAAS;wCAET,cAAW;kFADD;kDAGV,cAAA,4SAAC,mRAAA,CAAA,IAAC;4CAAC,MAAM;;;;;;;;;;;;;;;;;0CAGjB,4SAAC,iIAAA,CAAA,UAAQ;gCACL,oBAAoB;gCACpB,gBAAgB;gCAChB,qBAAqB;gCACrB,qBAAqB;gCACrB,YAAY;gCACZ,UAAS;gCACT,cAAc;gCACd,eAAe;gCACf,mBAAmB;gCACnB,oBAAoB;gCACpB,mBAAmB;gCACnB,qBAAqB;gCACrB,sBAAsB,CAAC;gCACvB,aAAa;;;;;;;;;;;;;;;;;;YAQzB,CAAC,gBAAgB,CAAC,0BACd;;kCAEI,4SAAC;wBACG,SAAS;4BACL,0FAA0F;4BAC1F,IAAI,CAAC,gBAAgB,CAAC,gBAAgB;gCAClC,gCAAgC;gCAChC,IAAI,CAAC,qBAAqB;oCACtB,uBAAuB;oCACvB,sIAAA,CAAA,mBAAgB,CAAC,OAAO,CAAC,uBAAuB;gCACpD;gCACA;4BACJ,OAAO;gCACH,6DAA6D;gCAC7D;4BACJ;wBACJ;wBAEA,OAAO;4BAAE,QAAQ;wBAAQ;wBACzB,cAAY,mBAAmB,eAAe;kEAFnC,AAAC,sOAAoR,OAA/C,qBAAqB,oBAAoB,IAAG,KAAyC,OAAtC,kBAAkB,iBAAiB;kCAIlU,iCACG,4SAAC,mRAAA,CAAA,IAAC;4BAAC,WAAU;;;;;iDAEb;;8CAMI,4SAAC;8EAAe;8CACX,CAAC,+BACE,4SAAC,+SAAA,CAAA,gBAAa;wCAAC,WAAU;;;;;6DAEzB,4SAAC,ySAAA,CAAA,aAAU;wCAAC,WAAU;wCAAU,aAAa;;;;;;;;;;;gCAE9C;8CAAoC,4SAAC;8EAAe;;sDACvD,4SAAC,+SAAA,CAAA,gBAAa;4CAAC,WAAU;;;;;;sDACzB,4SAAC;sFAAe;sDAAU;;;;;;;;;;;;;;;;;;;oBAOzC,oBAAoB,gCACjB,4SAAC;wBAEG,OAAO;4BAAE,iBAAiB;wBAAqB;wBAC/C,eAAY;wBACZ,SAAS,IAAM,oBAAoB;kEAHzB;;;;;;oBAQjB,oBAAoB,gCACjB,4SAAC;wBAA2E,OAAO;4BAAE,QAAQ;wBAAQ;wBAAG,KAAK;kEAA9F;;0CAEX,4SAAC;0EAAc;;kDACX,4SAAC;kFAAe;kDAA+D;;;;;;kDAG/E,4SAAC;wCACG,SAAS;4CACL,oBAAoB;4CACpB;wCACJ;wCAEA,cAAW;kFADD;kDAGV,cAAA,4SAAC,+SAAA,CAAA,gBAAa;4CAAC,WAAU;;;;;;;;;;;;;;;;;0CAKjC,4SAAC;0EAAc;;kDACX,4SAAC;kFAAe;kDAA+D;;;;;;kDAG/E,4SAAC;wCACG,SAAS;4CACL,oBAAoB;4CACpB;wCACJ;wCAEA,cAAW;kFADD;kDAGV,cAAA,4SAAC,kTAAA,CAAA,cAAW;4CAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAU/D;GApxBwB;KAAA","debugId":null}}]
}