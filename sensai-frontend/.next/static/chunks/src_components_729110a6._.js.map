{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/BlockNoteEditor.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport \"@blocknote/core/fonts/inter.css\";\r\nimport { useCreateBlockNote } from \"@blocknote/react\";\r\nimport { BlockNoteView } from \"@blocknote/mantine\";\r\nimport \"@blocknote/mantine/style.css\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { BlockNoteSchema, defaultBlockSpecs, locales } from \"@blocknote/core\";\r\nimport Toast from \"./Toast\";\r\n\r\n// Add custom styles for dark mode\r\nimport \"./editor-styles.css\";\r\n\r\ninterface BlockNoteEditorProps {\r\n    initialContent?: any[];\r\n    onChange?: (content: any[]) => void;\r\n    isDarkMode?: boolean;\r\n    className?: string;\r\n    readOnly?: boolean;\r\n    placeholder?: string;\r\n    onEditorReady?: (editor: any) => void;\r\n    allowMedia?: boolean;\r\n}\r\n\r\n// Uploads a file and returns the URL to the uploaded file\r\nasync function uploadFile(file: File) {\r\n    if (!file.type.startsWith('image/') && !file.type.startsWith('audio/') && !file.type.startsWith('video/')) {\r\n        return ''\r\n    }\r\n\r\n    let presigned_url = '';\r\n\r\n    try {\r\n        // First, get a presigned URL for the file\r\n        const presignedUrlResponse = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/file/presigned-url/create`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                content_type: file.type\r\n            })\r\n        });\r\n\r\n        if (!presignedUrlResponse.ok) {\r\n            throw new Error('Failed to get presigned URL');\r\n        }\r\n\r\n        const presignedData = await presignedUrlResponse.json();\r\n\r\n        presigned_url = presignedData.presigned_url;\r\n    } catch (error) {\r\n        console.error(\"Error getting presigned URL for file:\", error);\r\n    }\r\n\r\n    if (!presigned_url) {\r\n        // If we couldn't get a presigned URL, try direct upload to the backend\r\n        try {\r\n            console.log(\"Attempting direct upload to backend\");\r\n\r\n            // Create FormData for the file upload\r\n            const formData = new FormData();\r\n            formData.append('file', file, file.name);\r\n            formData.append('content_type', file.type);\r\n\r\n            // Upload directly to the backend\r\n            const uploadResponse = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/file/upload-local`, {\r\n                method: 'POST',\r\n                body: formData\r\n            });\r\n\r\n            if (!uploadResponse.ok) {\r\n                throw new Error(`Failed to upload audio to backend: ${uploadResponse.status}`);\r\n            }\r\n\r\n            const uploadData = await uploadResponse.json();\r\n            const file_static_path = uploadData.static_url;\r\n\r\n            const static_url = `${process.env.NEXT_PUBLIC_BACKEND_URL}${file_static_path}`;\r\n\r\n            console.log('File uploaded successfully to backend');\r\n\r\n            return static_url;\r\n        } catch (error) {\r\n            console.error('Error with direct upload to backend:', error);\r\n            throw error;\r\n        }\r\n    } else {\r\n        // Upload the file to S3 using the presigned URL\r\n        try {\r\n            let fileBlob = new Blob([file], { type: file.type });\r\n\r\n            // Upload to S3 using the presigned URL with WAV content type\r\n            const uploadResponse = await fetch(presigned_url, {\r\n                method: 'PUT',\r\n                body: fileBlob,\r\n                headers: {\r\n                    'Content-Type': file.type\r\n                }\r\n            });\r\n\r\n            if (!uploadResponse.ok) {\r\n                throw new Error(`Failed to upload file to S3: ${uploadResponse.status}`);\r\n            }\r\n\r\n            console.log('File uploaded successfully to S3');\r\n            // Update the request body with the file information\r\n            return uploadResponse.url\r\n        } catch (error) {\r\n            console.error('Error uploading file to S3:', error);\r\n            throw error;\r\n        }\r\n    }\r\n}\r\n\r\nasync function resolveFileUrl(url: string) {\r\n    if (!url || !url.includes(\"?X-Amz-Algorithm=AWS4-HMAC-SHA256\")) {\r\n        return url;\r\n    }\r\n\r\n    if (url.includes(`${process.env.NEXT_PUBLIC_BACKEND_URL}/`)) {\r\n        return url;\r\n    }\r\n\r\n    let uuid = url.split('/').pop()?.split('.')[0] || '';\r\n    let fileType = url.split('.').pop()?.split('?')[0] || '';\r\n\r\n    try {\r\n        // Get presigned URL\r\n        const presignedResponse = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/file/presigned-url/get?uuid=${uuid}&file_extension=${fileType}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n\r\n        if (!presignedResponse.ok) {\r\n            throw new Error('Failed to get presigned URL for file');\r\n        }\r\n\r\n        const { url } = await presignedResponse.json();\r\n        return url;\r\n    } catch (error) {\r\n        console.error('Error fetching file:', error);\r\n    }\r\n}\r\n\r\n// Function to check if a URL is a YouTube link\r\nfunction isYouTubeLink(url: string): boolean {\r\n    return url.includes('youtube.com') || url.includes('youtu.be');\r\n}\r\n\r\nexport default function BlockNoteEditor({\r\n    initialContent = [],\r\n    onChange,\r\n    isDarkMode = true, // Default to dark mode\r\n    className = \"\",\r\n    readOnly = false,\r\n    placeholder = \"Enter text or type '/' for commands\",\r\n    onEditorReady,\r\n    allowMedia = true,\r\n}: BlockNoteEditorProps) {\r\n    const locale = locales[\"en\"];\r\n    const editorContainerRef = useRef<HTMLDivElement>(null);\r\n    const isUpdatingContent = useRef(false);\r\n    const lastContent = useRef<any[]>([]);\r\n    const editorRef = useRef<any>(null);\r\n\r\n    // Replace the boolean showToast with a toast object\r\n    const [toast, setToast] = useState({\r\n        show: false,\r\n        title: '',\r\n        description: '',\r\n        emoji: ''\r\n    });\r\n\r\n    // Add a timeout ref to store the timeout ID\r\n    const toastTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n    // Extract blocks we don't want based on configuration\r\n    let enabledBlocks;\r\n    if (allowMedia) {\r\n        // If media is allowed, exclude only these blocks\r\n        const { table, file, ...allowedBlockSpecs } = defaultBlockSpecs;\r\n        enabledBlocks = allowedBlockSpecs;\r\n    } else {\r\n        // If media is not allowed, also exclude all media blocks\r\n        const { table, video, audio, file, image, ...allowedBlockSpecs } = defaultBlockSpecs;\r\n        enabledBlocks = allowedBlockSpecs;\r\n    }\r\n\r\n    // Create a schema with only the allowed blocks\r\n    const schema = BlockNoteSchema.create({\r\n        blockSpecs: enabledBlocks,\r\n    });\r\n\r\n    // Creates a new editor instance with the custom schema\r\n    const editor = useCreateBlockNote({\r\n        initialContent: initialContent.length > 0 ? initialContent : undefined,\r\n        uploadFile,\r\n        resolveFileUrl,\r\n        schema, // Use our custom schema with limited blocks\r\n        dictionary: {\r\n            ...locale,\r\n            placeholders: {\r\n                ...locale.placeholders,\r\n                emptyDocument: placeholder,\r\n            },\r\n        },\r\n    });\r\n\r\n    // Store the editor instance in a ref for later use\r\n    useEffect(() => {\r\n        if (editor) {\r\n            editorRef.current = editor;\r\n        }\r\n    }, [editor]);\r\n\r\n    // Update the function to handle closing the toast\r\n    const handleCloseToast = () => {\r\n        setToast(prev => ({ ...prev, show: false }));\r\n\r\n        // Clear any existing timeout\r\n        if (toastTimeoutRef.current) {\r\n            clearTimeout(toastTimeoutRef.current);\r\n            toastTimeoutRef.current = null;\r\n        }\r\n    };\r\n\r\n    // Update the effect that checks for YouTube links\r\n    useEffect(() => {\r\n        if (editor && allowMedia) {\r\n            const handleVideoBlockChange = () => {\r\n                // Skip checking during programmatic updates\r\n                if (isUpdatingContent.current) return;\r\n\r\n                // Get all video blocks\r\n                const blocks = editor.document;\r\n\r\n                blocks.forEach(block => {\r\n                    // Check if this is a video block\r\n                    // @ts-ignore - TypeScript doesn't recognize custom block types\r\n                    if (block.type === \"video\") {\r\n                        // Check if the URL is a YouTube link\r\n                        // @ts-ignore - TypeScript doesn't recognize props on custom block types\r\n                        const videoUrl = block.props?.url || \"\";\r\n                        if (videoUrl && isYouTubeLink(videoUrl)) {\r\n                            // Show toast with customized properties\r\n                            setToast({\r\n                                show: true,\r\n                                title: \"Cannot embed YouTube videos yet\",\r\n                                description: \"Please use video file URLs (e.g. link to a mp4 file) instead\",\r\n                                emoji: \"ðŸš«\"\r\n                            });\r\n\r\n                            // Clear any existing timeout\r\n                            if (toastTimeoutRef.current) {\r\n                                clearTimeout(toastTimeoutRef.current);\r\n                            }\r\n\r\n                            // Set a new timeout to auto-hide the toast after 5 seconds\r\n                            toastTimeoutRef.current = setTimeout(() => {\r\n                                setToast(prev => ({ ...prev, show: false }));\r\n                            }, 5000);\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n\r\n            // Listen for content changes to detect YouTube links\r\n            editor.onEditorContentChange(handleVideoBlockChange);\r\n\r\n            // Cleanup function to clear timeout when component unmounts\r\n            return () => {\r\n                if (toastTimeoutRef.current) {\r\n                    clearTimeout(toastTimeoutRef.current);\r\n                }\r\n            };\r\n        }\r\n    }, [editor, allowMedia]);\r\n\r\n    // Provide the editor instance to the parent component if onEditorReady is provided\r\n    useEffect(() => {\r\n        if (onEditorReady && editor) {\r\n            onEditorReady(editor);\r\n        }\r\n    }, [editor, onEditorReady]);\r\n\r\n    // Update editor content when initialContent changes\r\n    useEffect(() => {\r\n        if (editor && initialContent && initialContent.length > 0) {\r\n            // Set flag to prevent triggering onChange during programmatic update\r\n            isUpdatingContent.current = true;\r\n\r\n            try {\r\n                // Only replace blocks if the content has actually changed\r\n                const currentContentStr = JSON.stringify(editor.document);\r\n                const newContentStr = JSON.stringify(initialContent);\r\n\r\n                if (currentContentStr !== newContentStr) {\r\n                    editor.replaceBlocks(editor.document, initialContent);\r\n                    lastContent.current = initialContent;\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error updating editor content:\", error);\r\n            } finally {\r\n                // Reset flag after update\r\n                isUpdatingContent.current = false;\r\n            }\r\n        }\r\n    }, [editor, initialContent]);\r\n\r\n    // Handle content changes with debouncing to avoid rapid state updates\r\n    useEffect(() => {\r\n        if (onChange && editor) {\r\n            const handleChange = () => {\r\n                // Prevent handling changes if we're currently updating content\r\n                if (isUpdatingContent.current) return;\r\n\r\n                const currentContent = editor.document;\r\n                onChange(currentContent);\r\n            };\r\n\r\n            // Add change listener\r\n            editor.onEditorContentChange(handleChange);\r\n        }\r\n    }, [editor, onChange]);\r\n\r\n    // Add a method to focus the editor\r\n    useEffect(() => {\r\n        if (editor && editorRef.current) {\r\n            // Add a focus method to the editor ref\r\n            // Use a different name for the method to avoid potential name conflicts\r\n            editorRef.current.focusEditor = () => {\r\n                try {\r\n                    // Check if we're already focused to prevent recursion\r\n                    const activeElement = document.activeElement;\r\n                    const editorElement = editorContainerRef.current?.querySelector('[contenteditable=\"true\"]');\r\n\r\n                    // Only focus if we're not already focused\r\n                    if (editorElement && activeElement !== editorElement) {\r\n                        editor.focus();\r\n                    }\r\n                } catch (err) {\r\n                    console.error(\"Error focusing editor:\", err);\r\n                }\r\n            };\r\n        }\r\n    }, [editor]);\r\n\r\n    // Add effect to handle clicks in the empty space of editor blocks\r\n    useEffect(() => {\r\n        if (editor && editorContainerRef.current && !readOnly) {\r\n            const handleEditorClick = (e: MouseEvent) => {\r\n                // Don't interfere with normal clicks on content\r\n                const target = e.target as HTMLElement;\r\n\r\n                // Check if we're clicking on the editor container but not on an actual block content\r\n                const isEditorContainer = target.classList.contains('bn-block-content')\r\n\r\n                if (isEditorContainer) {\r\n                    // Find the closest block element to the click\r\n                    const blockElements = editorContainerRef.current?.querySelectorAll('.bn-block');\r\n                    if (!blockElements || blockElements.length === 0) return;\r\n\r\n                    // Find the block at the click position\r\n                    let closestBlock: Element | null = null;\r\n                    let minDistance = Infinity;\r\n\r\n                    blockElements.forEach(block => {\r\n                        const rect = block.getBoundingClientRect();\r\n                        // Check if the click is on the same line as this block (y-axis)\r\n                        if (e.clientY >= rect.top && e.clientY <= rect.bottom) {\r\n                            const distance = Math.abs(e.clientY - (rect.top + rect.height / 2));\r\n                            if (distance < minDistance) {\r\n                                minDistance = distance;\r\n                                closestBlock = block;\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    if (closestBlock) {\r\n                        // Explicitly reassert the type right where we need it\r\n                        const block = closestBlock as HTMLElement;\r\n                        // Get the editable element within the block\r\n                        const editableContent = block.querySelector('.bn-inline-content') as HTMLElement;\r\n\r\n                        if (editableContent) {\r\n                            // Focus and place cursor at the end\r\n                            editableContent.focus();\r\n\r\n                            // Set selection to the end of the content\r\n                            const range = document.createRange();\r\n                            const sel = window.getSelection();\r\n\r\n                            range.selectNodeContents(editableContent);\r\n                            range.collapse(false); // false means collapse to end\r\n\r\n                            if (sel) {\r\n                                sel.removeAllRanges();\r\n                                sel.addRange(range);\r\n                            }\r\n\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            const editorContainer = editorContainerRef.current;\r\n            editorContainer.addEventListener('click', handleEditorClick);\r\n\r\n            return () => {\r\n                editorContainer.removeEventListener('click', handleEditorClick);\r\n            };\r\n        }\r\n    }, [editor, readOnly]);\r\n\r\n    return (\r\n        <div\r\n            ref={editorContainerRef}\r\n            className={`h-full dark-editor-container ${className}`}\r\n            // Add click handler to prevent event propagation\r\n            onClick={(e) => {\r\n                e.stopPropagation();\r\n            }}\r\n            // Prevent mousedown from bubbling up which can cause focus issues\r\n            onMouseDown={(e) => {\r\n                e.stopPropagation();\r\n            }}\r\n        >\r\n            <BlockNoteView\r\n                editor={editor}\r\n                theme={isDarkMode ? \"dark\" : \"light\"}\r\n                className={isDarkMode ? \"dark-editor\" : \"\"}\r\n                editable={!readOnly}\r\n            />\r\n\r\n            {/* Update Toast component to use the toast object */}\r\n            <Toast\r\n                show={toast.show}\r\n                title={toast.title}\r\n                description={toast.description}\r\n                emoji={toast.emoji}\r\n                onClose={handleCloseToast}\r\n            />\r\n        </div>\r\n    );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 478, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/PublishConfirmationDialog.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport ConfirmationDialog from './ConfirmationDialog';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\ninterface PublishConfirmationDialogProps {\r\n    show: boolean;\r\n    onConfirm: (scheduledPublishAt: string | null) => void;\r\n    onCancel: () => void;\r\n    isLoading?: boolean;\r\n    errorMessage?: string | null;\r\n    title: string;\r\n    message: string;\r\n}\r\n\r\nconst PublishConfirmationDialog = ({\r\n    show,\r\n    onConfirm,\r\n    onCancel,\r\n    isLoading = false,\r\n    errorMessage = null,\r\n    title,\r\n    message,\r\n}: PublishConfirmationDialogProps) => {\r\n    // State for scheduling\r\n    const [scheduleForLater, setScheduleForLater] = useState(false);\r\n    const [scheduledDate, setScheduledDate] = useState<Date | null>(null);\r\n\r\n    // Validate scheduled date\r\n    const verifyScheduledDateAndSchedulePublish = (date: Date | null) => {\r\n        if (!date) {\r\n            return;\r\n        }\r\n\r\n        if (date < new Date()) {\r\n            return; // Don't allow dates in the past\r\n        }\r\n\r\n        setScheduledDate(date);\r\n    }\r\n\r\n    // Reset scheduling state when dialog is closed\r\n    if (!show) {\r\n        if (scheduleForLater) setScheduleForLater(false);\r\n        if (scheduledDate) setScheduledDate(null);\r\n    }\r\n\r\n    // Handle confirmation with scheduling data\r\n    const handleConfirm = () => {\r\n        let scheduledDateISOString = null;\r\n        if (scheduleForLater && scheduledDate) {\r\n            scheduledDateISOString = scheduledDate.toISOString();\r\n        }\r\n        onConfirm(scheduledDateISOString);\r\n    };\r\n\r\n    // Render the scheduler UI\r\n    const renderScheduleOptions = () => {\r\n        return (\r\n            <div className=\"mt-4\">\r\n                <div className={`flex items-center ${scheduleForLater ? 'mb-3' : ''}`}>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        id=\"schedule-for-later\"\r\n                        checked={scheduleForLater}\r\n                        onChange={(e) => {\r\n                            setScheduleForLater(e.target.checked);\r\n                            // Set default scheduled date to tomorrow at same time if nothing is set\r\n                            if (e.target.checked && !scheduledDate) {\r\n                                const tomorrow = new Date();\r\n                                tomorrow.setDate(tomorrow.getDate() + 1);\r\n                                setScheduledDate(tomorrow);\r\n                            }\r\n                        }}\r\n                        className=\"mr-2 h-4 w-4 cursor-pointer\"\r\n                    />\r\n                    <label htmlFor=\"schedule-for-later\" className=\"text-white cursor-pointer flex items-center\">\r\n                        Schedule time to publish\r\n                    </label>\r\n                </div>\r\n\r\n                {scheduleForLater && (\r\n                    <DatePicker\r\n                        selected={scheduledDate}\r\n                        onChange={(date) => verifyScheduledDateAndSchedulePublish(date)}\r\n                        showTimeSelect\r\n                        timeFormat=\"HH:mm\"\r\n                        timeIntervals={15}\r\n                        dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                        timeCaption=\"Time\"\r\n                        minDate={new Date()} // Can't schedule in the past\r\n                        className=\"bg-[#333333] rounded-md p-2 px-4 w-full text-white cursor-pointer\"\r\n                        wrapperClassName=\"w-full\"\r\n                        calendarClassName=\"bg-[#242424] text-white border border-gray-700 rounded-lg shadow-lg cursor-pointer\"\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <ConfirmationDialog\r\n            open={show}\r\n            title={title}\r\n            message={message}\r\n            onConfirm={handleConfirm}\r\n            onCancel={onCancel}\r\n            isLoading={isLoading}\r\n            errorMessage={errorMessage}\r\n            type=\"publish\"\r\n            confirmButtonText={scheduleForLater ? \"Schedule\" : \"Publish Now\"}\r\n        >\r\n            {renderScheduleOptions()}\r\n        </ConfirmationDialog>\r\n    );\r\n};\r\n\r\nexport default PublishConfirmationDialog; "],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;;AAaA,MAAM,4BAA4B;QAAC,EAC/B,IAAI,EACJ,SAAS,EACT,QAAQ,EACR,YAAY,KAAK,EACjB,eAAe,IAAI,EACnB,KAAK,EACL,OAAO,EACsB;;IAC7B,uBAAuB;IACvB,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,4QAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,4QAAA,CAAA,WAAQ,AAAD,EAAe;IAEhE,0BAA0B;IAC1B,MAAM,wCAAwC,CAAC;QAC3C,IAAI,CAAC,MAAM;YACP;QACJ;QAEA,IAAI,OAAO,IAAI,QAAQ;YACnB,QAAQ,gCAAgC;QAC5C;QAEA,iBAAiB;IACrB;IAEA,+CAA+C;IAC/C,IAAI,CAAC,MAAM;QACP,IAAI,kBAAkB,oBAAoB;QAC1C,IAAI,eAAe,iBAAiB;IACxC;IAEA,2CAA2C;IAC3C,MAAM,gBAAgB;QAClB,IAAI,yBAAyB;QAC7B,IAAI,oBAAoB,eAAe;YACnC,yBAAyB,cAAc,WAAW;QACtD;QACA,UAAU;IACd;IAEA,0BAA0B;IAC1B,MAAM,wBAAwB;QAC1B,qBACI,4SAAC;YAAI,WAAU;;8BACX,4SAAC;oBAAI,WAAW,AAAC,qBAAmD,OAA/B,mBAAmB,SAAS;;sCAC7D,4SAAC;4BACG,MAAK;4BACL,IAAG;4BACH,SAAS;4BACT,UAAU,CAAC;gCACP,oBAAoB,EAAE,MAAM,CAAC,OAAO;gCACpC,wEAAwE;gCACxE,IAAI,EAAE,MAAM,CAAC,OAAO,IAAI,CAAC,eAAe;oCACpC,MAAM,WAAW,IAAI;oCACrB,SAAS,OAAO,CAAC,SAAS,OAAO,KAAK;oCACtC,iBAAiB;gCACrB;4BACJ;4BACA,WAAU;;;;;;sCAEd,4SAAC;4BAAM,SAAQ;4BAAqB,WAAU;sCAA8C;;;;;;;;;;;;gBAK/F,kCACG,4SAAC,mQAAA,CAAA,UAAU;oBACP,UAAU;oBACV,UAAU,CAAC,OAAS,sCAAsC;oBAC1D,cAAc;oBACd,YAAW;oBACX,eAAe;oBACf,YAAW;oBACX,aAAY;oBACZ,SAAS,IAAI;oBACb,WAAU;oBACV,kBAAiB;oBACjB,mBAAkB;;;;;;;;;;;;IAKtC;IAEA,qBACI,4SAAC,2IAAA,CAAA,UAAkB;QACf,MAAM;QACN,OAAO;QACP,SAAS;QACT,WAAW;QACX,UAAU;QACV,WAAW;QACX,cAAc;QACd,MAAK;QACL,mBAAmB,mBAAmB,aAAa;kBAElD;;;;;;AAGb;GApGM;KAAA;uCAsGS","debugId":null}},
    {"offset": {"line": 617, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/LearningMaterialEditor.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport \"@blocknote/core/fonts/inter.css\";\r\nimport \"@blocknote/mantine/style.css\";\r\nimport { useEffect, useRef, useState, forwardRef, useImperativeHandle, useCallback } from \"react\";\r\n\r\n// Add import for date picker\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n// Add custom styles for dark mode\r\nimport \"./editor-styles.css\";\r\n\r\n// Import the BlockNoteEditor component\r\nimport BlockNoteEditor from \"./BlockNoteEditor\";\r\nimport ConfirmationDialog from \"./ConfirmationDialog\";\r\nimport { TaskData } from \"@/types\";\r\nimport { safeLocalStorage } from \"@/lib/utils/localStorage\";\r\n\r\n// Add import for ChatView\r\nimport ChatView from \"./ChatView\";\r\nimport { ChatMessage } from \"../types/quiz\";\r\n\r\n// Add import for PublishConfirmationDialog\r\nimport PublishConfirmationDialog from \"./PublishConfirmationDialog\";\r\n\r\n// Define the editor handle with methods that can be called by parent components\r\nexport interface LearningMaterialEditorHandle {\r\n    save: () => Promise<void>;\r\n    cancel: () => void;\r\n    hasContent: () => boolean;\r\n    hasChanges: () => boolean;\r\n}\r\n\r\ninterface LearningMaterialEditorProps {\r\n    onChange?: (content: any[]) => void;\r\n    isDarkMode?: boolean;\r\n    className?: string;\r\n    readOnly?: boolean;\r\n    viewOnly?: boolean;\r\n    showPublishConfirmation?: boolean;\r\n    onPublishConfirm?: () => void;\r\n    onPublishCancel?: () => void;\r\n    taskId?: string;\r\n    userId?: string;\r\n    onPublishSuccess?: (updatedData?: TaskData) => void;\r\n    onSaveSuccess?: (updatedData?: TaskData) => void;\r\n    scheduledPublishAt?: string | null;\r\n}\r\n\r\n// Use forwardRef to pass the ref from parent to this component\r\nconst LearningMaterialEditor = forwardRef<LearningMaterialEditorHandle, LearningMaterialEditorProps>(({\r\n    onChange,\r\n    isDarkMode = true, // Default to dark mode\r\n    className = \"\",\r\n    readOnly = false,\r\n    viewOnly = false,\r\n    showPublishConfirmation = false,\r\n    onPublishConfirm,\r\n    onPublishCancel,\r\n    taskId,\r\n    userId = '',\r\n    onPublishSuccess,\r\n    onSaveSuccess,\r\n    scheduledPublishAt = null,\r\n}, ref) => {\r\n    const editorContainerRef = useRef<HTMLDivElement>(null);\r\n    const [isPublishing, setIsPublishing] = useState(false);\r\n    const [publishError, setPublishError] = useState<string | null>(null);\r\n    const [taskData, setTaskData] = useState<TaskData | null>(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [editorContent, setEditorContent] = useState<any[]>([]);\r\n\r\n    // Reference to the editor instance\r\n    const editorRef = useRef<any>(null);\r\n\r\n    // Add a ref to store the original data for reverting on cancel\r\n    const originalDataRef = useRef<TaskData | null>(null);\r\n\r\n    // Function to set the editor reference\r\n    const setEditorInstance = (editor: any) => {\r\n        editorRef.current = editor;\r\n    };\r\n\r\n    // Handle editor changes\r\n    const handleEditorChange = (content: any[]) => {\r\n        // Avoid unnecessary state updates if content hasn't changed\r\n        if (JSON.stringify(content) !== JSON.stringify(editorContent)) {\r\n            setEditorContent(content);\r\n            if (onChange && !isPublishing) {\r\n                onChange(content);\r\n            }\r\n        }\r\n    };\r\n\r\n    const initialContent = taskData?.blocks && taskData.blocks.length > 0 ? taskData.blocks : undefined;\r\n\r\n    // Fetch task data when taskId changes\r\n    useEffect(() => {\r\n        if (taskId) {\r\n            setIsLoading(true);\r\n\r\n            // Use AbortController to cancel any in-flight requests\r\n            const controller = new AbortController();\r\n\r\n            fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/tasks/${taskId}`, {\r\n                signal: controller.signal\r\n            })\r\n                .then(response => {\r\n                    if (!response.ok) {\r\n                        throw new Error(`Failed to fetch task: ${response.status}`);\r\n                    }\r\n                    return response.json();\r\n                })\r\n                .then(data => {\r\n                    // We only use the data fetched from our own API call\r\n                    // Title updates only happen after publishing, not during editing\r\n                    if (!data.blocks || data.blocks.length === 0) {\r\n                        data.blocks = [\r\n                            {\r\n                                type: \"heading\",\r\n                                props: { level: 2 },\r\n                                content: [{ \"text\": \"Welcome to the Learning material editor!\", \"type\": \"text\", styles: {} }],\r\n                            },\r\n                            {\r\n                                type: \"paragraph\",\r\n                                content: [{ \"text\": \"This is where you will create your learning material. You can either modify this template or remove it entirely to start from scratch.\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"paragraph\",\r\n                                content: [{ \"text\": \"\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"heading\",\r\n                                props: { level: 3 },\r\n                                content: [{ \"text\": \"Key Features\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"bulletListItem\",\r\n                                content: [{ \"text\": \"Add new blocks by clicking the + icon that appears between blocks\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"bulletListItem\",\r\n                                content: [{ \"text\": \"Reorder blocks using the side menu (hover near the left edge of any block and drag the button with 6 dots to reorder)\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"bulletListItem\",\r\n                                content: [{ \"text\": \"Format text using the toolbar that appears when you select text\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"paragraph\",\r\n                                content: [{ \"text\": \"\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"heading\",\r\n                                props: { level: 3 },\r\n                                content: [{ \"text\": \"Available Block Types\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"paragraph\",\r\n                                content: [{ \"text\": \"Here are some examples of the different types of blocks you can use:\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"heading\",\r\n                                props: { level: 2 },\r\n                                content: [{ \"text\": \"Headings (like this one)\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"bulletListItem\",\r\n                                content: [{ \"text\": \"Bullet lists (like this)\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"numberedListItem\",\r\n                                content: [{ \"text\": \"Numbered lists (like this)\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"checkListItem\",\r\n                                content: [{ \"text\": \"Check lists (like this)\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"paragraph\",\r\n                                content: [{ \"text\": \"Regular paragraphs for your main content\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"paragraph\",\r\n                                content: [{ \"text\": \"Insert images/videos/audio clips by clicking the + icon on the left and selecting Image/Video/Audio\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"paragraph\",\r\n                                content: [{ \"text\": \"Insert code blocks by clicking the + icon on the left and selecting Code Block\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"paragraph\",\r\n                                content: [{ \"text\": \"\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"heading\",\r\n                                props: { level: 3 },\r\n                                content: [{ \"text\": \"Creating Nested Content\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"paragraph\",\r\n                                content: [{ \"text\": \"You can create nested content in two ways:\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"bulletListItem\",\r\n                                content: [{ \"text\": \"Using the Tab key: Simply press Tab while your cursor is on a block to indent it\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"bulletListItem\",\r\n                                content: [{ \"text\": \"Using the side menu: Hover near the left edge of a block, click the menu icon (the button with 6 dots), and drag the block to the desired nested position inside another block\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"paragraph\",\r\n                                content: [{ \"text\": \"\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"paragraph\",\r\n                                content: [{ \"text\": \"Here are examples of nested content:\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"paragraph\",\r\n                                content: [{ \"text\": \"Nested Lists Example\", \"type\": \"text\", styles: { \"bold\": true } }]\r\n                            },\r\n                            {\r\n                                type: \"bulletListItem\",\r\n                                content: [{ \"text\": \"Main topic 1\", \"type\": \"text\", styles: {} }],\r\n                                children: [\r\n                                    {\r\n                                        type: \"bulletListItem\",\r\n                                        props: { indent: 1 },\r\n                                        content: [{ \"text\": \"Subtopic 1.1 (indented using Tab or side menu)\", \"type\": \"text\", styles: {} }]\r\n                                    },\r\n                                    {\r\n                                        type: \"bulletListItem\",\r\n                                        props: { indent: 1 },\r\n                                        content: [{ \"text\": \"Subtopic 1.2\", \"type\": \"text\", styles: {} }],\r\n                                        children: [{\r\n                                            type: \"bulletListItem\",\r\n                                            props: { indent: 2 },\r\n                                            content: [{ \"text\": \"Further nested item (press Tab again to create deeper nesting)\", \"type\": \"text\", styles: {} }]\r\n                                        }]\r\n                                    }\r\n                                ]\r\n                            },\r\n\r\n                            {\r\n                                type: \"bulletListItem\",\r\n                                content: [{ \"text\": \"Main topic 2\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"paragraph\",\r\n                                content: [{ \"text\": \"\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"paragraph\",\r\n                                content: [{ \"text\": \"Nested Numbered Lists\", \"type\": \"text\", styles: { \"bold\": true } }],\r\n                            },\r\n\r\n                            {\r\n                                type: \"numberedListItem\",\r\n                                content: [{ \"text\": \"First step\", \"type\": \"text\", styles: {} }],\r\n                                children: [\r\n                                    {\r\n                                        type: \"numberedListItem\",\r\n                                        props: { indent: 1 },\r\n                                        content: [{ \"text\": \"Substep 1.1 (indented with Tab)\", \"type\": \"text\", styles: {} }]\r\n                                    },\r\n                                    {\r\n                                        type: \"numberedListItem\",\r\n                                        props: { indent: 1 },\r\n                                        content: [{ \"text\": \"Substep 1.2\", \"type\": \"text\", styles: {} }]\r\n                                    },\r\n                                ]\r\n                            },\r\n                            {\r\n                                type: \"numberedListItem\",\r\n                                content: [{ \"text\": \"Second step\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"paragraph\",\r\n                                content: [{ \"text\": \"\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"paragraph\",\r\n                                content: [{ \"text\": \"Tips for working with nested content:\", \"type\": \"text\", styles: { \"bold\": true } }]\r\n                            },\r\n                            {\r\n                                type: \"bulletListItem\",\r\n                                content: [{ \"text\": \"To unnest/outdent an item, press Shift+Tab\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"bulletListItem\",\r\n                                content: [{ \"text\": \"You can mix bullet and numbered lists in your nesting hierarchy\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"bulletListItem\",\r\n                                content: [{ \"text\": \"Nesting helps create a clear organizational structure for complex topics\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"paragraph\",\r\n                                content: [{ \"text\": \"\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"heading\",\r\n                                props: { level: 3 },\r\n                                content: [{ \"text\": \"Publishing Your Content\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"paragraph\",\r\n                                content: [{ \"text\": \"When you are ready to make your content available to learners, click the Publish button. You can always edit and republish your content later.\", \"type\": \"text\", styles: {} }]\r\n                            },\r\n                            {\r\n                                type: \"paragraph\",\r\n                                content: [{ \"text\": \"Feel free to delete or modify this template to create your own learning material!\", \"type\": \"text\", styles: {} }]\r\n                            }\r\n                        ];\r\n                    }\r\n\r\n                    setTaskData(data);\r\n\r\n                    // Store the original data for reverting on cancel\r\n                    originalDataRef.current = { ...data };\r\n\r\n                    // Initialize editorContent with the blocks from taskData\r\n                    if (data.blocks && data.blocks.length > 0) {\r\n                        setEditorContent(data.blocks);\r\n                    }\r\n\r\n                    setIsLoading(false);\r\n                })\r\n                .catch(error => {\r\n                    // Ignore AbortError as it's expected when navigating away\r\n                    if (error.name !== 'AbortError') {\r\n                        console.error(\"Error fetching task data:\", error);\r\n                    }\r\n                    setIsLoading(false);\r\n                });\r\n\r\n            // Clean up function will abort the fetch if the component unmounts\r\n            // or if the effect runs again (i.e., taskId changes)\r\n            return () => {\r\n                controller.abort();\r\n            };\r\n        } else {\r\n            // If no taskId is provided, set loading to false immediately\r\n            // so the component can render the editor\r\n            setIsLoading(false);\r\n        }\r\n    }, [taskId]);\r\n\r\n    // Handle cancel in edit mode - revert to original data\r\n    const handleCancel = () => {\r\n        if (!originalDataRef.current) return;\r\n\r\n        // Restore the original data\r\n        setTaskData(originalDataRef.current);\r\n\r\n        // Return the original title to the dialog header\r\n        const dialogTitleElement = document.querySelector('.dialog-content-editor')?.parentElement?.querySelector('h2');\r\n        if (dialogTitleElement && originalDataRef.current.title) {\r\n            dialogTitleElement.textContent = originalDataRef.current.title;\r\n        }\r\n    };\r\n\r\n    const handleConfirmPublish = async (scheduledPublishAt: string | null) => {\r\n        if (!taskId) {\r\n            console.error(\"Cannot publish: taskId is not provided\");\r\n            setPublishError(\"Cannot publish: Task ID is missing\");\r\n            return;\r\n        }\r\n\r\n        setIsPublishing(true);\r\n        setPublishError(null);\r\n\r\n        try {\r\n            // Get the current title from the dialog - it may have been edited\r\n            const dialogTitleElement = document.querySelector('.dialog-content-editor')?.parentElement?.querySelector('h2');\r\n            const currentTitle = dialogTitleElement?.textContent || taskData?.title || \"\";\r\n\r\n            // Use the current editor content\r\n            const currentContent = editorContent.length > 0 ? editorContent : (taskData?.blocks || []);\r\n\r\n            // Add scheduled publishing data if selected\r\n            const publishData: any = {\r\n                title: currentTitle,\r\n                blocks: currentContent,\r\n                scheduled_publish_at: scheduledPublishAt\r\n            };\r\n\r\n            // Make POST request to publish the learning material content\r\n            const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/tasks/${taskId}/learning_material`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(publishData),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Failed to publish learning material: ${response.status}`);\r\n            }\r\n\r\n            // Get the updated task data from the response\r\n            const updatedTaskData = await response.json();\r\n\r\n            // Ensure the status is set correctly based on scheduled status\r\n            const publishedTaskData = {\r\n                ...updatedTaskData,\r\n                status: 'published',\r\n                title: currentTitle,   // Use the current title from the dialog\r\n                scheduled_publish_at: scheduledPublishAt // Include scheduled date\r\n            };\r\n\r\n            // Update our local state with the data from the API\r\n            setTaskData(publishedTaskData);\r\n\r\n            // First set publishing to false to avoid state updates during callbacks\r\n            setIsPublishing(false);\r\n\r\n            // Call the original onPublishConfirm callback if provided\r\n            if (onPublishConfirm) {\r\n                onPublishConfirm();\r\n            }\r\n\r\n            // Call the onPublishSuccess callback if provided\r\n            if (onPublishSuccess) {\r\n                // Use setTimeout to break the current render cycle\r\n                setTimeout(() => {\r\n                    onPublishSuccess(publishedTaskData);\r\n                }, 0);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error publishing learning material:\", error);\r\n            setPublishError(error instanceof Error ? error.message : \"Failed to publish learning material\");\r\n            setIsPublishing(false);\r\n        }\r\n    };\r\n\r\n    const handleCancelPublish = () => {\r\n        setPublishError(null);\r\n        if (onPublishCancel) {\r\n            onPublishCancel();\r\n        }\r\n    };\r\n\r\n    // Handle saving changes when in edit mode\r\n    const handleSave = async () => {\r\n        if (!taskId) {\r\n            console.error(\"Cannot save: taskId is not provided\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Get the current title from the dialog - it may have been edited\r\n            const dialogTitleElement = document.querySelector('.dialog-content-editor')?.parentElement?.querySelector('h2');\r\n            const currentTitle = dialogTitleElement?.textContent || taskData?.title || \"\";\r\n\r\n            // Use the current editor content\r\n            const currentContent = editorContent.length > 0 ? editorContent : (taskData?.blocks || []);\r\n\r\n            // Use the scheduledPublishAt prop instead of taskData.scheduled_publish_at\r\n            const currentScheduledPublishAt = scheduledPublishAt !== undefined ? scheduledPublishAt : (taskData?.scheduled_publish_at || null);\r\n\r\n            // Make POST request to update the learning material content, keeping the same status\r\n            const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/tasks/${taskId}/learning_material`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    title: currentTitle,\r\n                    blocks: currentContent,\r\n                    scheduled_publish_at: currentScheduledPublishAt,\r\n                    status: taskData?.status\r\n                }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Failed to save learning material: ${response.status}`);\r\n            }\r\n\r\n            // Get the updated task data from the response\r\n            const updatedTaskData = await response.json();\r\n\r\n            // Create updated data with the current title\r\n            const updatedData = {\r\n                ...updatedTaskData,\r\n                title: currentTitle // Use the current title from the dialog\r\n            };\r\n\r\n            // Update our local state with the data from the API\r\n            setTaskData(updatedData);\r\n\r\n            // Call the onSaveSuccess callback if provided\r\n            if (onSaveSuccess) {\r\n                // Use setTimeout to break the current render cycle\r\n                setTimeout(() => {\r\n                    onSaveSuccess(updatedData);\r\n                }, 0);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error saving learning material:\", error);\r\n        }\r\n    };\r\n\r\n    // Update the content when it changes\r\n    useEffect(() => {\r\n        if (onChange && taskData?.blocks) {\r\n            onChange(taskData.blocks);\r\n        }\r\n    }, [taskData?.blocks, onChange]);\r\n\r\n    // Expose methods via the forwarded ref\r\n    useImperativeHandle(ref, () => ({\r\n        save: handleSave,\r\n        cancel: handleCancel,\r\n        hasContent: () => {\r\n            // First check the editorContent state\r\n            const checkContent = (content: any[] | undefined) => {\r\n                if (!content || content.length === 0) return false;\r\n\r\n                // Check if there are any blocks beyond the first default paragraph\r\n                if (content.length > 1) return true;\r\n\r\n                // If there's only one block, check if it has actual content\r\n                if (content.length === 1) {\r\n                    const block = content[0];\r\n                    // Use stringify to check if there's actual content\r\n                    const blockContent = JSON.stringify(block.content);\r\n                    // Check if it's not just an empty paragraph\r\n                    if (blockContent &&\r\n                        blockContent !== '{}' &&\r\n                        blockContent !== '[]' &&\r\n                        blockContent !== 'null' &&\r\n                        blockContent !== '{\"text\":[]}' &&\r\n                        blockContent !== '{\"text\":\"\"}') {\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n                return false;\r\n            };\r\n\r\n            // First check editorContent (which might be updated if user made changes)\r\n            if (checkContent(editorContent)) {\r\n                return true;\r\n            }\r\n\r\n            // If editorContent is empty but we have taskData, check that as a fallback\r\n            if (taskData?.blocks) {\r\n                return checkContent(taskData.blocks);\r\n            }\r\n\r\n            return false;\r\n        },\r\n        hasChanges: () => {\r\n            // If we don't have original data to compare with, assume no changes\r\n            if (!originalDataRef.current) return false;\r\n\r\n            // Check if title has changed\r\n            const dialogTitleElement = document.querySelector('.dialog-content-editor')?.parentElement?.querySelector('h2');\r\n            const currentTitle = dialogTitleElement?.textContent || \"\";\r\n            const originalTitle = originalDataRef.current.title || \"\";\r\n\r\n            if (currentTitle !== originalTitle) {\r\n                return true;\r\n            }\r\n\r\n            // Check if content has changed\r\n            const originalContent = originalDataRef.current.blocks || [];\r\n\r\n            // Convert both to JSON strings for deep comparison\r\n            const currentContentStr = JSON.stringify(editorContent);\r\n            const originalContentStr = JSON.stringify(originalContent);\r\n\r\n            // Return true if there are changes\r\n            return currentContentStr !== originalContentStr;\r\n        }\r\n    }));\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"h-full flex items-center justify-center\">\r\n                <div\r\n                    data-testid=\"editor-loading-spinner\"\r\n                    className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-white\"\r\n                    aria-label=\"Loading...\"\r\n                >\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={`w-full h-full ${className}`}>\r\n            <div className=\"w-full flex flex-col my-4\">\r\n                <div className={`editor-container h-full min-h-screen overflow-y-auto overflow-hidden relative z-0`}>\r\n                    <BlockNoteEditor\r\n                        initialContent={initialContent}\r\n                        onChange={handleEditorChange}\r\n                        isDarkMode={isDarkMode}\r\n                        readOnly={readOnly}\r\n                        className=\"dark-editor min-h-screen\"\r\n                        onEditorReady={setEditorInstance}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* Replace the ConfirmationDialog with PublishConfirmationDialog */}\r\n            <PublishConfirmationDialog\r\n                show={showPublishConfirmation}\r\n                title=\"Ready to publish?\"\r\n                message=\"Make sure your content is complete and reviewed for errors before publishing\"\r\n                onConfirm={handleConfirmPublish}\r\n                onCancel={handleCancelPublish}\r\n                isLoading={isPublishing}\r\n                errorMessage={publishError}\r\n            />\r\n        </div>\r\n    );\r\n});\r\n\r\n// Add display name for better debugging\r\nLearningMaterialEditor.displayName = 'LearningMaterialEditor';\r\n\r\nexport default LearningMaterialEditor;"],"names":[],"mappings":"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","debugId":null}}]
}