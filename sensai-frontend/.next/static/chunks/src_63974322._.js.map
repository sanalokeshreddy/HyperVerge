{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/Toast.tsx"],"sourcesContent":["import React from 'react';\r\nimport { X } from 'lucide-react';\r\n\r\ninterface ToastProps {\r\n    show: boolean;\r\n    title: string;\r\n    description: string;\r\n    emoji: string;\r\n    onClose: () => void;\r\n    isMobileView?: boolean;\r\n}\r\n\r\nconst Toast: React.FC<ToastProps> = ({\r\n    show,\r\n    title,\r\n    description,\r\n    emoji,\r\n    onClose,\r\n    isMobileView = false\r\n}) => {\r\n    if (!show) return null;\r\n\r\n    return (\r\n        <div className={`fixed ${isMobileView ? 'top-0 left-0 right-0 w-full rounded-none' : 'bottom-4 right-4 rounded-lg max-w-md'} bg-white text-black px-6 py-4 shadow-lg z-100 flex items-center gap-4`}>\r\n            <div className=\"flex items-center justify-center w-10 h-10 bg-amber-50 rounded-full\">\r\n                <span className=\"text-xl\">{emoji}</span>\r\n            </div>\r\n            <div className=\"flex-1\">\r\n                <h3 className=\"font-medium text-base\">{title}</h3>\r\n                <p className=\"text-sm text-gray-600 mt-0.5 leading-tight\">{description}</p>\r\n            </div>\r\n            <button\r\n                onClick={onClose}\r\n                className=\"text-gray-400 hover:text-gray-600 cursor-pointer\"\r\n            >\r\n                <X size={16} />\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Toast; "],"names":[],"mappings":";;;;AACA;;;AAWA,MAAM,QAA8B;QAAC,EACjC,IAAI,EACJ,KAAK,EACL,WAAW,EACX,KAAK,EACL,OAAO,EACP,eAAe,KAAK,EACvB;IACG,IAAI,CAAC,MAAM,OAAO;IAElB,qBACI,4SAAC;QAAI,WAAW,AAAC,SAA2G,OAAnG,eAAe,6CAA6C,wCAAuC;;0BACxH,4SAAC;gBAAI,WAAU;0BACX,cAAA,4SAAC;oBAAK,WAAU;8BAAW;;;;;;;;;;;0BAE/B,4SAAC;gBAAI,WAAU;;kCACX,4SAAC;wBAAG,WAAU;kCAAyB;;;;;;kCACvC,4SAAC;wBAAE,WAAU;kCAA8C;;;;;;;;;;;;0BAE/D,4SAAC;gBACG,SAAS;gBACT,WAAU;0BAEV,cAAA,4SAAC,mRAAA,CAAA,IAAC;oBAAC,MAAM;;;;;;;;;;;;;;;;;AAIzB;KA3BM;uCA6BS","debugId":null}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/ConfirmationDialog.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from 'react';\r\nimport { X, Trash2 } from 'lucide-react';\r\n\r\ninterface ConfirmationDialogProps {\r\n    // Core props (required)\r\n    onConfirm: () => void;\r\n    onCancel: () => void;\r\n    onClickOutside?: () => void;\r\n    // Visibility prop (with two possible names for backward compatibility)\r\n    open?: boolean;\r\n    show?: boolean;\r\n\r\n    // Content props\r\n    title?: string;\r\n    message?: string;\r\n\r\n    // Button text props\r\n    confirmButtonText?: string;\r\n    cancelButtonText?: string;\r\n\r\n    // State props\r\n    isLoading?: boolean;\r\n    errorMessage?: string | null;\r\n\r\n    // Type props for styling\r\n    type?: 'publish' | 'delete' | 'custom' | 'save';\r\n\r\n    // Custom content to be rendered between message and buttons\r\n    children?: React.ReactNode;\r\n\r\n    // Close button props\r\n    showCloseButton?: boolean;\r\n    onClose?: () => void;\r\n}\r\n\r\nexport default function ConfirmationDialog({\r\n    // Use either open or show prop for visibility\r\n    open,\r\n    show,\r\n\r\n    // Content props with defaults\r\n    title,\r\n    message,\r\n\r\n    // Action handlers\r\n    onConfirm,\r\n    onCancel,\r\n    onClickOutside,\r\n    // Button text with defaults\r\n    confirmButtonText,\r\n    cancelButtonText = \"Cancel\",\r\n\r\n    // State props\r\n    isLoading = false,\r\n    errorMessage = null,\r\n\r\n    // Type with default\r\n    type = 'delete',\r\n\r\n    // Custom content\r\n    children,\r\n\r\n    // Close button props\r\n    showCloseButton = false,\r\n    onClose\r\n}: ConfirmationDialogProps) {\r\n    // Handle both 'open' and 'show' props for backward compatibility\r\n    const isVisible = open !== undefined ? open : (show !== undefined ? show : false);\r\n\r\n    if (!isVisible) return null;\r\n\r\n    // Default values based on type\r\n    const defaultTitle = type === 'publish' ? \"Ready to publish?\"\r\n        : type === 'save' ? \"Save changes?\"\r\n            : \"Confirm deletion\";\r\n    const defaultMessage = type === 'publish'\r\n        ? \"Make sure your content is complete and reviewed for errors before publishing\"\r\n        : type === 'save'\r\n            ? \"Do you want to save your changes?\"\r\n            : \"Are you sure you want to delete? This action cannot be undone.\";\r\n    const defaultButtonText = type === 'publish' ? \"Publish Now\"\r\n        : type === 'save' ? \"Save\"\r\n            : \"Delete\";\r\n\r\n    // Use provided values or defaults\r\n    const displayTitle = title || defaultTitle;\r\n    const displayMessage = message || defaultMessage;\r\n    const buttonText = confirmButtonText || defaultButtonText;\r\n\r\n    // Button styles based on type\r\n    const buttonBgColor =\r\n        type === 'publish' ? 'bg-green-800 hover:bg-green-900' :\r\n            type === 'delete' ? 'bg-red-800 hover:bg-red-900' :\r\n                type === 'save' ? 'bg-yellow-500 hover:bg-yellow-600' :\r\n                    'bg-blue-600 hover:bg-blue-700'; // Default for custom type\r\n\r\n    // Handle close button click\r\n    const handleClose = () => {\r\n        if (onClose) {\r\n            onClose();\r\n        } else {\r\n            onCancel();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"fixed inset-0 bg-black bg-opacity-70 backdrop-blur-sm z-[100] flex items-center justify-center p-4\"\r\n            onClick={(e) => {\r\n                e.stopPropagation();\r\n                onClickOutside ? onClickOutside() : onCancel();\r\n            }}\r\n        >\r\n            <div\r\n                className=\"w-full max-w-md bg-[#1A1A1A] rounded-lg shadow-2xl relative\"\r\n                onClick={(e) => e.stopPropagation()}\r\n            >\r\n                {showCloseButton && (\r\n                    <button\r\n                        className=\"absolute top-4 right-4 text-gray-400 hover:text-white transition-colors focus:outline-none cursor-pointer\"\r\n                        onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleClose();\r\n                        }}\r\n                    >\r\n                        <X size={18} />\r\n                    </button>\r\n                )}\r\n                <div className=\"p-6\">\r\n                    <h2 className=\"text-xl font-light text-white mb-4\">{displayTitle}</h2>\r\n                    <p className=\"text-gray-300\">{displayMessage}</p>\r\n                    {errorMessage && (\r\n                        <p className=\"mt-4 text-red-400 text-sm\">{errorMessage}</p>\r\n                    )}\r\n\r\n                    {/* Render custom content if provided */}\r\n                    {children && (\r\n                        <div className=\"mt-6\">\r\n                            {children}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"flex justify-end gap-4 p-6\">\r\n                    <button\r\n                        onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            onCancel();\r\n                        }}\r\n                        className=\"px-4 py-2 text-gray-400 hover:text-white transition-colors focus:outline-none cursor-pointer\"\r\n                        disabled={isLoading}\r\n                    >\r\n                        {cancelButtonText}\r\n                    </button>\r\n                    <button\r\n                        onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            onConfirm();\r\n                        }}\r\n                        className={`px-6 py-2 ${buttonBgColor} ${type === 'save' ? 'text-black' : 'text-white'} text-sm font-medium rounded-full transition-colors focus:outline-none cursor-pointer ${isLoading ? 'opacity-70' : ''}`}\r\n                        disabled={isLoading}\r\n                    >\r\n                        {isLoading ? (\r\n                            <div className=\"flex items-center justify-center\">\r\n                                <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"></div>\r\n                                <span>{buttonText}</span>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"flex items-center\">\r\n                                {type === 'delete' && <Trash2 size={16} className=\"mr-2\" />}\r\n                                {buttonText}\r\n                            </div>\r\n                        )}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n} "],"names":[],"mappings":";;;;AAGA;AAAA;AAHA;;;AAqCe,SAAS,mBAAmB,KA8BjB;QA9BiB,EACvC,8CAA8C;IAC9C,IAAI,EACJ,IAAI,EAEJ,8BAA8B;IAC9B,KAAK,EACL,OAAO,EAEP,kBAAkB;IAClB,SAAS,EACT,QAAQ,EACR,cAAc,EACd,4BAA4B;IAC5B,iBAAiB,EACjB,mBAAmB,QAAQ,EAE3B,cAAc;IACd,YAAY,KAAK,EACjB,eAAe,IAAI,EAEnB,oBAAoB;IACpB,OAAO,QAAQ,EAEf,iBAAiB;IACjB,QAAQ,EAER,qBAAqB;IACrB,kBAAkB,KAAK,EACvB,OAAO,EACe,GA9BiB;IA+BvC,iEAAiE;IACjE,MAAM,YAAY,SAAS,YAAY,OAAQ,SAAS,YAAY,OAAO;IAE3E,IAAI,CAAC,WAAW,OAAO;IAEvB,+BAA+B;IAC/B,MAAM,eAAe,SAAS,YAAY,sBACpC,SAAS,SAAS,kBACd;IACV,MAAM,iBAAiB,SAAS,YAC1B,iFACA,SAAS,SACL,sCACA;IACV,MAAM,oBAAoB,SAAS,YAAY,gBACzC,SAAS,SAAS,SACd;IAEV,kCAAkC;IAClC,MAAM,eAAe,SAAS;IAC9B,MAAM,iBAAiB,WAAW;IAClC,MAAM,aAAa,qBAAqB;IAExC,8BAA8B;IAC9B,MAAM,gBACF,SAAS,YAAY,oCACjB,SAAS,WAAW,gCAChB,SAAS,SAAS,sCACd,iCAAiC,0BAA0B;IAE3E,4BAA4B;IAC5B,MAAM,cAAc;QAChB,IAAI,SAAS;YACT;QACJ,OAAO;YACH;QACJ;IACJ;IAEA,qBACI,4SAAC;QACG,WAAU;QACV,SAAS,CAAC;YACN,EAAE,eAAe;YACjB,iBAAiB,mBAAmB;QACxC;kBAEA,cAAA,4SAAC;YACG,WAAU;YACV,SAAS,CAAC,IAAM,EAAE,eAAe;;gBAEhC,iCACG,4SAAC;oBACG,WAAU;oBACV,SAAS,CAAC;wBACN,EAAE,eAAe;wBACjB;oBACJ;8BAEA,cAAA,4SAAC,mRAAA,CAAA,IAAC;wBAAC,MAAM;;;;;;;;;;;8BAGjB,4SAAC;oBAAI,WAAU;;sCACX,4SAAC;4BAAG,WAAU;sCAAsC;;;;;;sCACpD,4SAAC;4BAAE,WAAU;sCAAiB;;;;;;wBAC7B,8BACG,4SAAC;4BAAE,WAAU;sCAA6B;;;;;;wBAI7C,0BACG,4SAAC;4BAAI,WAAU;sCACV;;;;;;;;;;;;8BAIb,4SAAC;oBAAI,WAAU;;sCACX,4SAAC;4BACG,SAAS,CAAC;gCACN,EAAE,eAAe;gCACjB;4BACJ;4BACA,WAAU;4BACV,UAAU;sCAET;;;;;;sCAEL,4SAAC;4BACG,SAAS,CAAC;gCACN,EAAE,eAAe;gCACjB;4BACJ;4BACA,WAAW,AAAC,aAA6B,OAAjB,eAAc,KAAyI,OAAtI,SAAS,SAAS,eAAe,cAAa,0FAAsH,OAA9B,YAAY,eAAe;4BAC1M,UAAU;sCAET,0BACG,4SAAC;gCAAI,WAAU;;kDACX,4SAAC;wCAAI,WAAU;;;;;;kDACf,4SAAC;kDAAM;;;;;;;;;;;qDAGX,4SAAC;gCAAI,WAAU;;oCACV,SAAS,0BAAY,4SAAC,iSAAA,CAAA,SAAM;wCAAC,MAAM;wCAAI,WAAU;;;;;;oCACjD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQjC;KA9IwB","debugId":null}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/Tooltip.tsx"],"sourcesContent":["import { ReactNode, useState, useEffect, useRef } from \"react\";\r\n\r\ninterface TooltipProps {\r\n    children: ReactNode;\r\n    content: string;\r\n    position?: \"top\" | \"bottom\" | \"left\" | \"right\";\r\n    delay?: number;\r\n    disabled?: boolean;\r\n    className?: string;\r\n}\r\n\r\nexport default function Tooltip({\r\n    children,\r\n    content,\r\n    position = \"top\",\r\n    delay = 300,\r\n    disabled = false,\r\n    className = \"\",\r\n}: TooltipProps) {\r\n    const [isVisible, setIsVisible] = useState(false);\r\n    const timeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n    const clearTimeouts = () => {\r\n        if (timeoutRef.current) {\r\n            clearTimeout(timeoutRef.current);\r\n            timeoutRef.current = null;\r\n        }\r\n    };\r\n\r\n    // Clear timeout on unmount\r\n    useEffect(() => {\r\n        return () => clearTimeouts();\r\n    }, []);\r\n\r\n    const showTip = () => {\r\n        clearTimeouts(); // Clear any existing timeouts first\r\n        timeoutRef.current = setTimeout(() => {\r\n            setIsVisible(true);\r\n        }, delay);\r\n    };\r\n\r\n    const hideTip = () => {\r\n        clearTimeouts(); // Clear the show timeout\r\n        setIsVisible(false);\r\n    };\r\n\r\n    // Position-based classes for the tooltip\r\n    const positionClasses = {\r\n        top: \"bottom-full left-1/2 -translate-x-1/2 mb-2\",\r\n        bottom: \"top-full left-1/2 -translate-x-1/2 mt-2\",\r\n        left: \"right-full top-1/2 -translate-y-1/2 mr-2\",\r\n        right: \"left-full top-1/2 -translate-y-1/2 ml-2\",\r\n    };\r\n\r\n    // Arrow classes based on position\r\n    const arrowClasses = {\r\n        top: \"bottom-[-6px] left-1/2 -translate-x-1/2 border-l-transparent border-r-transparent border-b-transparent\",\r\n        bottom: \"top-[-6px] left-1/2 -translate-x-1/2 border-l-transparent border-r-transparent border-t-transparent\",\r\n        left: \"right-[-6px] top-1/2 -translate-y-1/2 border-t-transparent border-b-transparent border-r-transparent\",\r\n        right: \"left-[-6px] top-1/2 -translate-y-1/2 border-t-transparent border-b-transparent border-l-transparent\",\r\n    };\r\n\r\n    if (disabled) return children;\r\n\r\n    return (\r\n        <div\r\n            className={`relative inline-block cursor-pointer ${className}`}\r\n            onMouseEnter={showTip}\r\n            onMouseLeave={hideTip}\r\n            onTouchStart={showTip}\r\n            onTouchEnd={hideTip}\r\n        >\r\n            {children}\r\n\r\n            {isVisible && (\r\n                <div\r\n                    className={`absolute px-3 py-2 text-sm font-light text-white bg-gray-900 rounded-md whitespace-nowrap pointer-events-none ${positionClasses[position]}`}\r\n                    role=\"tooltip\"\r\n                    aria-hidden={!isVisible}\r\n                    style={{ zIndex: 9999 }}\r\n                >\r\n                    {content}\r\n                    <div\r\n                        className={`absolute w-0 h-0 border-4 border-gray-900 ${arrowClasses[position]}`}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n} "],"names":[],"mappings":";;;;AAAA;;;;AAWe,SAAS,QAAQ,KAOjB;QAPiB,EAC5B,QAAQ,EACR,OAAO,EACP,WAAW,KAAK,EAChB,QAAQ,GAAG,EACX,WAAW,KAAK,EAChB,YAAY,EAAE,EACH,GAPiB;;IAQ5B,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,4QAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,aAAa,CAAA,GAAA,4QAAA,CAAA,SAAM,AAAD,EAAyB;IAEjD,MAAM,gBAAgB;QAClB,IAAI,WAAW,OAAO,EAAE;YACpB,aAAa,WAAW,OAAO;YAC/B,WAAW,OAAO,GAAG;QACzB;IACJ;IAEA,2BAA2B;IAC3B,CAAA,GAAA,4QAAA,CAAA,YAAS,AAAD;6BAAE;YACN;qCAAO,IAAM;;QACjB;4BAAG,EAAE;IAEL,MAAM,UAAU;QACZ,iBAAiB,oCAAoC;QACrD,WAAW,OAAO,GAAG,WAAW;YAC5B,aAAa;QACjB,GAAG;IACP;IAEA,MAAM,UAAU;QACZ,iBAAiB,yBAAyB;QAC1C,aAAa;IACjB;IAEA,yCAAyC;IACzC,MAAM,kBAAkB;QACpB,KAAK;QACL,QAAQ;QACR,MAAM;QACN,OAAO;IACX;IAEA,kCAAkC;IAClC,MAAM,eAAe;QACjB,KAAK;QACL,QAAQ;QACR,MAAM;QACN,OAAO;IACX;IAEA,IAAI,UAAU,OAAO;IAErB,qBACI,4SAAC;QACG,WAAW,AAAC,wCAAiD,OAAV;QACnD,cAAc;QACd,cAAc;QACd,cAAc;QACd,YAAY;;YAEX;YAEA,2BACG,4SAAC;gBACG,WAAW,AAAC,iHAA0I,OAA1B,eAAe,CAAC,SAAS;gBACrJ,MAAK;gBACL,eAAa,CAAC;gBACd,OAAO;oBAAE,QAAQ;gBAAK;;oBAErB;kCACD,4SAAC;wBACG,WAAW,AAAC,6CAAmE,OAAvB,YAAY,CAAC,SAAS;;;;;;;;;;;;;;;;;;AAMtG;GA9EwB;KAAA","debugId":null}},
    {"offset": {"line": 404, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/lib/utils/dateFormat.ts"],"sourcesContent":["/**\r\n * Formats a scheduled date for display in tooltips and buttons\r\n * @param date The date to format\r\n * @returns A human-readable string representation of the date\r\n */\r\nexport const formatScheduleDate = (date: Date | null): string => {\r\n    if (!date) return \"\";\r\n\r\n    // If the date is today, show \"Today at [time]\"\r\n    const today = new Date();\r\n    if (date.getDate() === today.getDate() &&\r\n        date.getMonth() === today.getMonth() &&\r\n        date.getFullYear() === today.getFullYear()) {\r\n        return `Today at ${date.toLocaleTimeString(undefined, { hour: '2-digit', minute: '2-digit' })}`;\r\n    }\r\n\r\n    // If the date is tomorrow, show \"Tomorrow at [time]\"\r\n    const tomorrow = new Date(today);\r\n    tomorrow.setDate(tomorrow.getDate() + 1);\r\n    if (date.getDate() === tomorrow.getDate() &&\r\n        date.getMonth() === tomorrow.getMonth() &&\r\n        date.getFullYear() === tomorrow.getFullYear()) {\r\n        return `Tomorrow at ${date.toLocaleTimeString(undefined, { hour: '2-digit', minute: '2-digit' })}`;\r\n    }\r\n\r\n    // Otherwise, show the full date\r\n    return date.toLocaleDateString(undefined, {\r\n        month: 'short',\r\n        day: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n    });\r\n};\r\n\r\n/**\r\n * Formats a date for full display in tooltips\r\n * @param date The date to format\r\n * @returns A detailed string representation of the date\r\n */\r\nexport const formatFullScheduleDate = (date: Date | null): string => {\r\n    if (!date) return \"\";\r\n    \r\n    return date.toLocaleDateString(undefined, { \r\n        weekday: 'long', \r\n        year: 'numeric', \r\n        month: 'long', \r\n        day: 'numeric', \r\n        hour: '2-digit', \r\n        minute: '2-digit' \r\n    });\r\n}; "],"names":[],"mappings":"AAAA;;;;CAIC;;;;AACM,MAAM,qBAAqB,CAAC;IAC/B,IAAI,CAAC,MAAM,OAAO;IAElB,+CAA+C;IAC/C,MAAM,QAAQ,IAAI;IAClB,IAAI,KAAK,OAAO,OAAO,MAAM,OAAO,MAChC,KAAK,QAAQ,OAAO,MAAM,QAAQ,MAClC,KAAK,WAAW,OAAO,MAAM,WAAW,IAAI;QAC5C,OAAO,AAAC,YAAsF,OAA3E,KAAK,kBAAkB,CAAC,WAAW;YAAE,MAAM;YAAW,QAAQ;QAAU;IAC/F;IAEA,qDAAqD;IACrD,MAAM,WAAW,IAAI,KAAK;IAC1B,SAAS,OAAO,CAAC,SAAS,OAAO,KAAK;IACtC,IAAI,KAAK,OAAO,OAAO,SAAS,OAAO,MACnC,KAAK,QAAQ,OAAO,SAAS,QAAQ,MACrC,KAAK,WAAW,OAAO,SAAS,WAAW,IAAI;QAC/C,OAAO,AAAC,eAAyF,OAA3E,KAAK,kBAAkB,CAAC,WAAW;YAAE,MAAM;YAAW,QAAQ;QAAU;IAClG;IAEA,gCAAgC;IAChC,OAAO,KAAK,kBAAkB,CAAC,WAAW;QACtC,OAAO;QACP,KAAK;QACL,MAAM;QACN,QAAQ;IACZ;AACJ;AAOO,MAAM,yBAAyB,CAAC;IACnC,IAAI,CAAC,MAAM,OAAO;IAElB,OAAO,KAAK,kBAAkB,CAAC,WAAW;QACtC,SAAS;QACT,MAAM;QACN,OAAO;QACP,KAAK;QACL,MAAM;QACN,QAAQ;IACZ;AACJ","debugId":null}},
    {"offset": {"line": 459, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/CourseItemDialog.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useRef, useEffect, useState } from \"react\";\r\nimport { Sparkles, Check, X, Pencil, Eye, Edit2, Zap } from \"lucide-react\";\r\nimport dynamic from \"next/dynamic\";\r\nimport { QuizQuestion } from \"../types\";\r\nimport type { LearningMaterialEditorHandle } from \"./LearningMaterialEditor\";\r\nimport type { QuizEditorHandle } from \"../types\";\r\nimport Toast from \"./Toast\";\r\nimport ConfirmationDialog from \"./ConfirmationDialog\";\r\nimport { TaskData } from \"@/types\";\r\nimport Tooltip from \"./Tooltip\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { formatScheduleDate } from \"@/lib/utils/dateFormat\";\r\nimport { useAuth } from \"@/lib/auth\";\r\n\r\n// Dynamically import the editor components\r\nconst DynamicLearningMaterialEditor = dynamic(\r\n    () => import(\"./LearningMaterialEditor\"),\r\n    {\r\n        ssr: false,\r\n        loading: () => (\r\n            <div className=\"flex items-center justify-center h-full w-full\">\r\n                <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-white\"></div>\r\n            </div>\r\n        )\r\n    }\r\n);\r\n\r\n// Dynamically import the QuizEditor component\r\nconst DynamicQuizEditor = dynamic(\r\n    () => import(\"./QuizEditor\"),\r\n    {\r\n        ssr: false,\r\n        loading: () => (\r\n            <div className=\"flex items-center justify-center h-full w-full\">\r\n                <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-white\"></div>\r\n            </div>\r\n        )\r\n    }\r\n);\r\n\r\n// Define props interface for the component\r\ninterface CourseItemDialogProps {\r\n    isOpen: boolean;\r\n    activeItem: any; // Using any for now, should be properly typed\r\n    activeModuleId: string | null;\r\n    isEditMode: boolean;\r\n    isPreviewMode: boolean;\r\n    showPublishConfirmation: boolean;\r\n    dialogTitleRef: React.RefObject<HTMLHeadingElement | null>;\r\n    dialogContentRef: React.RefObject<HTMLDivElement | null>;\r\n    onClose: () => void;\r\n    onPublishConfirm: () => void;\r\n    onPublishCancel: () => void;\r\n    onSetShowPublishConfirmation: (show: boolean) => void;\r\n    onSaveItem: () => void;\r\n    onCancelEditMode: () => void;\r\n    onEnableEditMode: () => void;\r\n    onQuizContentChange: (questions: QuizQuestion[]) => void;\r\n    focusEditor: () => void;\r\n    schoolId?: string; // School ID for fetching scorecards\r\n    courseId?: string; // Add courseId prop for learning materials\r\n}\r\n\r\nconst CourseItemDialog: React.FC<CourseItemDialogProps> = ({\r\n    isOpen,\r\n    activeItem,\r\n    activeModuleId,\r\n    isEditMode,\r\n    isPreviewMode,\r\n    showPublishConfirmation,\r\n    dialogTitleRef,\r\n    dialogContentRef,\r\n    onClose,\r\n    onPublishConfirm,\r\n    onPublishCancel,\r\n    onSetShowPublishConfirmation,\r\n    onSaveItem,\r\n    onCancelEditMode,\r\n    onEnableEditMode,\r\n    onQuizContentChange,\r\n    focusEditor,\r\n    schoolId,\r\n    courseId,\r\n}) => {\r\n    // Get authenticated user ID\r\n    const { user } = useAuth();\r\n\r\n    // Add refs for the editor components\r\n    const learningMaterialEditorRef = useRef<LearningMaterialEditorHandle>(null);\r\n    const quizEditorRef = useRef<QuizEditorHandle>(null);\r\n\r\n    // Ref to store toast timeout ID\r\n    const toastTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n    // State to track preview mode for quizzes\r\n    const [quizPreviewMode, setQuizPreviewMode] = useState(false);\r\n\r\n    // State for scheduled date\r\n    const [scheduledDate, setScheduledDate] = useState<Date | null>(null);\r\n    const [showSchedulePicker, setShowSchedulePicker] = useState(false);\r\n\r\n    // Toast state\r\n    const [showToast, setShowToast] = useState(false);\r\n    const [toastTitle, setToastTitle] = useState(\"Published\");\r\n    const [toastDescription, setToastDescription] = useState(\"\");\r\n    const [toastEmoji, setToastEmoji] = useState(\"🚀\");\r\n\r\n    // Add state for close confirmation dialog\r\n    const [showCloseConfirmation, setShowCloseConfirmation] = useState(false);\r\n\r\n    // Add a new state variable to track which type of confirmation is being shown\r\n    const [confirmationType, setConfirmationType] = useState<'exit_edit_publish' | 'close' | 'exit_draft'>('exit_draft');\r\n\r\n    // Add state for save confirmation dialog\r\n    const [showSaveConfirmation, setShowSaveConfirmation] = useState(false);\r\n\r\n    // State to track if quiz has questions (for publish/preview button visibility)\r\n    const [hasQuizQuestions, setHasQuizQuestions] = useState(false);\r\n\r\n    // Add state for unsaved scorecard confirmation dialog\r\n    const [showUnsavedScorecardConfirmation, setShowUnsavedScorecardConfirmation] = useState(false);\r\n\r\n    const [showUnsavedScorecardChangesInfo, setShowUnsavedScorecardChangesInfo] = useState(false);\r\n\r\n    // Use useRef instead of useState for storing the pending action\r\n    const pendingActionRef = useRef<(() => void) | null>(null);\r\n\r\n    // Add a ref for the date picker container\r\n    const datePickerRef = useRef<HTMLDivElement>(null);\r\n\r\n    // Initialize scheduledDate when activeItem changes\r\n    useEffect(() => {\r\n        if (activeItem && activeItem.scheduled_publish_at) {\r\n            setScheduledDate(new Date(activeItem.scheduled_publish_at));\r\n        } else {\r\n            setScheduledDate(null);\r\n        }\r\n    }, [activeItem]);\r\n\r\n    // Function to validate scheduled date\r\n    const verifyScheduledDateAndSchedule = (date: Date | null) => {\r\n        if (!date) {\r\n            return;\r\n        }\r\n\r\n        if (date < new Date()) {\r\n            // Show error toast for dates in the past\r\n            displayToast(\"Invalid Date\", \"Scheduled date cannot be in the past\", \"⚠️\");\r\n            return;\r\n        }\r\n\r\n        setScheduledDate(date);\r\n    }\r\n\r\n    // Reset quiz preview mode when dialog is closed\r\n    useEffect(() => {\r\n        if (!isOpen) {\r\n            setQuizPreviewMode(false);\r\n\r\n            // Clear any active toast timeout when dialog closes\r\n            if (toastTimeoutRef.current) {\r\n                clearTimeout(toastTimeoutRef.current);\r\n                toastTimeoutRef.current = null;\r\n            }\r\n\r\n            // Reset toast state when dialog closes to prevent stuck toasts\r\n            setShowToast(false);\r\n\r\n            // Make sure to clear questions from active item when the dialog closes for draft quizzes\r\n            if (activeItem &&\r\n                activeItem.type === 'quiz' &&\r\n                activeItem.status === 'draft') {\r\n\r\n                console.log('Cleaning up draft quiz questions on dialog close');\r\n                activeItem.questions = [];\r\n            }\r\n        } else if (isOpen) {\r\n            // Reset toast state when dialog opens to prevent lingering toasts\r\n            if (toastTimeoutRef.current) {\r\n                clearTimeout(toastTimeoutRef.current);\r\n                toastTimeoutRef.current = null;\r\n            }\r\n            setShowToast(false);\r\n\r\n            // When dialog opens, ensure hasQuizQuestions is correctly initialized\r\n            // For draft quizzes, always start with false (no questions)\r\n            if (activeItem &&\r\n                activeItem.type === 'quiz' &&\r\n                activeItem.status === 'draft') {\r\n\r\n                // Reset to false when dialog opens for draft quizzes\r\n                setHasQuizQuestions(false);\r\n\r\n                // Also ensure activeItem.questions is cleared\r\n                console.log('Clearing questions for draft quiz on dialog open');\r\n                activeItem.questions = [];\r\n            } else if (activeItem &&\r\n                activeItem.type === 'quiz' &&\r\n                activeItem.status === 'published') {\r\n\r\n                // For published quizzes, initialize based on actual data\r\n                // Will be updated when data is loaded by the QuizEditor\r\n                setHasQuizQuestions(activeItem.questions && activeItem.questions.length > 0);\r\n            } else {\r\n                // For materials, always true\r\n                setHasQuizQuestions(true);\r\n            }\r\n        }\r\n    }, [isOpen, activeItem]);\r\n\r\n    // Add a capture phase event listener for Escape key\r\n    useEffect(() => {\r\n        // Handler function for keydown events in the capture phase\r\n        const handleKeyDown = (e: KeyboardEvent) => {\r\n            // If Escape key is pressed\r\n            if (e.key === 'Escape') {\r\n                // Check for active dialog element to ensure dialog is actually open\r\n                const dialogElement = dialogContentRef.current;\r\n                if (!dialogElement) return;\r\n\r\n                // If close confirmation is already showing, don't do anything\r\n                if (showCloseConfirmation) {\r\n                    return;\r\n                }\r\n\r\n                // For published items in view mode, close directly\r\n                if (activeItem?.status === 'published' && !isEditMode) {\r\n                    onClose();\r\n                    return;\r\n                }\r\n\r\n                // Prevent the default behavior and stop propagation\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n\r\n                // Check if there are actual changes\r\n                const hasChanges = activeItem.type === 'material'\r\n                    ? learningMaterialEditorRef.current?.hasChanges() || false\r\n                    : quizEditorRef.current?.hasChanges() || false;\r\n\r\n                // If we're in edit mode for a published item\r\n                if (activeItem?.status === 'published') {\r\n                    // Only show confirmation if there are changes\r\n                    if (hasChanges) {\r\n                        setConfirmationType('exit_edit_publish');\r\n                        setShowCloseConfirmation(true);\r\n                    } else {\r\n                        // No changes, just exit edit mode\r\n                        onCancelEditMode();\r\n                    }\r\n                } else {\r\n                    // For draft items\r\n                    // Check if the editor/quiz has any content using the appropriate ref\r\n                    const hasContent = activeItem.type === 'material'\r\n                        ? learningMaterialEditorRef.current?.hasContent() || false\r\n                        : quizEditorRef.current?.hasContent() || false;\r\n\r\n                    // Check if the title has been changed from default\r\n                    const titleElement = dialogTitleRef.current;\r\n                    const currentTitle = titleElement?.textContent || '';\r\n\r\n                    // Set default title based on item type\r\n                    let defaultTitle = \"New learning material\";\r\n                    if (activeItem.type === 'quiz') defaultTitle = \"New quiz\";\r\n\r\n                    const isTitleChanged = currentTitle !== defaultTitle && currentTitle.trim() !== '';\r\n\r\n                    // If there's no content and title hasn't changed, close without confirmation   \r\n                    if (!hasContent && !isTitleChanged) {\r\n                        onClose();\r\n                        return;\r\n                    }\r\n\r\n                    // Only show confirmation if there are changes\r\n                    if (hasChanges) {\r\n                        setConfirmationType('exit_draft');\r\n                        setShowCloseConfirmation(true);\r\n                    } else {\r\n                        // No changes, just close\r\n                        onClose();\r\n                    }\r\n                    return;\r\n                }\r\n            }\r\n        };\r\n\r\n        // Add the event listener in the capture phase to intercept before other handlers\r\n        document.addEventListener('keydown', handleKeyDown, true);\r\n\r\n        // Clean up the event listener when the component unmounts or when dependencies change\r\n        return () => {\r\n            document.removeEventListener('keydown', handleKeyDown, true);\r\n        };\r\n    }, [activeItem, isEditMode, showCloseConfirmation, onClose, onCancelEditMode, dialogContentRef, dialogTitleRef]);\r\n\r\n    // Add a cleanup effect for the toast timeout when the component unmounts\r\n    useEffect(() => {\r\n        return () => {\r\n            // Clean up toast timeout on unmount\r\n            if (toastTimeoutRef.current) {\r\n                clearTimeout(toastTimeoutRef.current);\r\n                toastTimeoutRef.current = null;\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    // Handle clicking outside of the date picker\r\n    useEffect(() => {\r\n        const handleClickOutside = (event: MouseEvent) => {\r\n            if (datePickerRef.current && !datePickerRef.current.contains(event.target as Node)) {\r\n                setShowSchedulePicker(false);\r\n            }\r\n        };\r\n\r\n        if (showSchedulePicker) {\r\n            document.addEventListener('mousedown', handleClickOutside);\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, [showSchedulePicker]);\r\n\r\n    // Bail early if dialog isn't open or there's no active item\r\n    if (!isOpen || !activeItem) return null;\r\n\r\n    // Check if the quiz has questions using the local state variable\r\n    // For non-quiz items, this is always true\r\n\r\n    // Function to handle closing the dialog\r\n    const handleCloseRequest = () => {\r\n        // Check if there are actual changes\r\n        const hasChanges = activeItem.type === 'material'\r\n            ? learningMaterialEditorRef.current?.hasChanges() || false\r\n            : quizEditorRef.current?.hasChanges() || false;\r\n\r\n        // Case 1: Published learning material in edit mode \r\n        if (activeItem?.status === 'published' && isEditMode) {\r\n            // Only show confirmation if there are changes\r\n            if (hasChanges) {\r\n                // For X button and backdrop click, we want to close the entire dialog after confirmation\r\n                // Use a different confirmation type to differentiate from the Cancel button\r\n                setConfirmationType('close');\r\n                setShowCloseConfirmation(true);\r\n            } else {\r\n                // No changes, just close\r\n                onClose();\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Case 2: Draft items (check for content)\r\n        if (activeItem?.status === 'draft') {\r\n            // Check if the editor/quiz has any content using the appropriate ref\r\n            const hasContent = activeItem.type === 'material'\r\n                ? learningMaterialEditorRef.current?.hasContent() || false\r\n                : quizEditorRef.current?.hasContent() || false;\r\n\r\n            // Check if the title has been changed from default\r\n            const titleElement = dialogTitleRef.current;\r\n            const currentTitle = titleElement?.textContent || '';\r\n\r\n            // Set default title based on item type\r\n            let defaultTitle = \"New learning material\";\r\n            if (activeItem.type === 'quiz') defaultTitle = \"New quiz\";\r\n\r\n            const isTitleChanged = currentTitle !== defaultTitle && currentTitle.trim() !== '';\r\n\r\n            // If there's no content and title hasn't changed, close without confirmation\r\n            if (!hasContent && !isTitleChanged) {\r\n                onClose();\r\n                return;\r\n            }\r\n\r\n            // Only show confirmation if there are changes\r\n            if (hasChanges) {\r\n                // Set confirmation type for draft items\r\n                setConfirmationType('exit_draft');\r\n                setShowCloseConfirmation(true);\r\n            } else {\r\n                // No changes, just close\r\n                onClose();\r\n            }\r\n            return;\r\n        }\r\n        onClose();\r\n    };\r\n\r\n    // Add a handler for the Cancel button in published items' edit mode\r\n    const handleCancelEditClick = () => {\r\n        // Check if there are actual changes\r\n        const hasChanges = activeItem.type === 'material'\r\n            ? learningMaterialEditorRef.current?.hasChanges() || false\r\n            : quizEditorRef.current?.hasChanges() || false;\r\n\r\n        // Only show confirmation if there are changes\r\n        if (hasChanges) {\r\n            // Show confirmation for published items in edit mode\r\n            setConfirmationType('exit_edit_publish');\r\n            setShowCloseConfirmation(true);\r\n        } else {\r\n            // No changes, just exit edit mode\r\n            onCancelEditMode();\r\n        }\r\n    };\r\n\r\n    const handleConfirmSaveDraft = () => {\r\n        setShowCloseConfirmation(false);\r\n\r\n        // Save logic for draft: call save and then close dialog\r\n        if (activeItem?.type === 'material') {\r\n            learningMaterialEditorRef.current?.save();\r\n        } else if (activeItem?.type === 'quiz') {\r\n            quizEditorRef.current?.saveDraft();\r\n        }\r\n        onClose();\r\n    }\r\n\r\n    // Handle confirmed close action\r\n    const handleConfirmDiscardChanges = () => {\r\n        setShowCloseConfirmation(false);\r\n\r\n        if (confirmationType === 'exit_edit_publish') {\r\n            // For published items in edit mode, just exit edit mode without closing the dialog\r\n            if (activeItem?.type === 'material') {\r\n                // Use the ref to call cancel directly to revert any changes\r\n                learningMaterialEditorRef.current?.cancel();\r\n            } else if (activeItem?.type === 'quiz') {\r\n                // Use the ref to call cancel directly to revert any changes\r\n                quizEditorRef.current?.cancel();\r\n            }\r\n\r\n            // Exit edit mode but keep the dialog open\r\n            onCancelEditMode();\r\n        } else {\r\n            // For other confirmation types (draft items or X button click), close the entire dialog\r\n            onClose();\r\n        }\r\n    };\r\n\r\n    // Handle cancel close action\r\n    const handleCancelClosingDialog = () => {\r\n        setShowCloseConfirmation(false);\r\n    };\r\n\r\n    // Handle backdrop click to close dialog\r\n    const handleDialogBackdropClick = (e: React.MouseEvent) => {\r\n        // Only close if clicking directly on the backdrop, not on the dialog content\r\n        if (dialogContentRef.current && !dialogContentRef.current.contains(e.target as Node)) {\r\n            handleCloseRequest();\r\n        }\r\n    };\r\n\r\n    // Toggle quiz preview mode\r\n    const toggleQuizPreviewMode = () => {\r\n        // If we're not already in preview mode and trying to enter it\r\n        if (!quizPreviewMode && quizEditorRef.current) {\r\n            // Check if current question has content\r\n            const hasContent = quizEditorRef.current.hasQuestionContent();\r\n\r\n            if (!hasContent) {\r\n                // Show toast notification\r\n                displayToast(\"Empty Question\", \"Please add details to the question before previewing\", \"🚫\");\r\n                return; // Prevent entering preview mode\r\n            }\r\n\r\n            // Get the current question type and check for empty correct answer or missing scorecard\r\n            const currentQuestionType = quizEditorRef.current.getCurrentQuestionType();\r\n            const currentQuestionInputType = quizEditorRef.current.getCurrentQuestionInputType();\r\n\r\n            if (currentQuestionInputType === 'code') {\r\n                const hasCodingLanguages = quizEditorRef.current.hasCodingLanguages();\r\n                if (!hasCodingLanguages) {\r\n                    // Show toast notification for missing coding languages\r\n                    displayToast(\"Missing Coding Languages\", \"Please select at least one programming language\", \"🚫\");\r\n                    return; // Prevent entering preview mode\r\n                }\r\n            }\r\n\r\n            if (currentQuestionType === 'objective') {\r\n                // For objective questions, check if correct answer is empty\r\n                const hasCorrectAnswer = quizEditorRef.current.hasCorrectAnswer();\r\n                if (!hasCorrectAnswer) {\r\n                    // Show toast notification for empty correct answer\r\n                    displayToast(\"Empty Correct Answer\", \"Please set a correct answer for this question before previewing\", \"🚫\");\r\n                    // Switch to answer tab\r\n                    quizEditorRef.current.setActiveTab('answer');\r\n                    return; // Prevent entering preview mode\r\n                }\r\n            } else if (currentQuestionType === 'subjective') {\r\n                // For subjective questions, check if scorecard is set\r\n                const hasScorecard = quizEditorRef.current.hasScorecard();\r\n                if (!hasScorecard) {\r\n                    // Show toast notification for missing scorecard\r\n                    displayToast(\"Missing Scorecard\", \"Please set a scorecard for evaluating this question before previewing\", \"🚫\");\r\n                    // Switch to scorecard tab\r\n                    quizEditorRef.current.setActiveTab('scorecard');\r\n                    return; // Prevent entering preview mode\r\n                }\r\n\r\n                // Validate the scorecard criteria for subjective questions\r\n                // Get the current question's scorecard data\r\n                const currentQuestionConfig = quizEditorRef.current.getCurrentQuestionConfig?.();\r\n\r\n                if (currentQuestionConfig?.scorecardData) {\r\n                    // Use the shared validation function to validate the scorecard criteria\r\n                    const isValid = quizEditorRef.current.validateScorecardCriteria(\r\n                        currentQuestionConfig.scorecardData,\r\n                        {\r\n                            setActiveTab: quizEditorRef.current.setActiveTab,\r\n                            showErrorMessage: displayToast\r\n                        }\r\n                    );\r\n\r\n                    if (!isValid) {\r\n                        return; // Prevent entering preview mode if validation fails\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Toggle preview mode if content exists or we're exiting preview mode\r\n        setQuizPreviewMode(!quizPreviewMode);\r\n    };\r\n\r\n    // Handle showing and hiding toast\r\n    const displayToast = (title: string, description: string, emoji: string = \"🚀\") => {\r\n        // Clear any existing timeout to prevent premature closing of new toast\r\n        if (toastTimeoutRef.current) {\r\n            clearTimeout(toastTimeoutRef.current);\r\n            toastTimeoutRef.current = null;\r\n        }\r\n\r\n        // Set toast content\r\n        setToastTitle(title);\r\n        setToastDescription(description);\r\n        setToastEmoji(emoji);\r\n        setShowToast(true);\r\n\r\n        // Set new timeout and store the ID for future reference\r\n        toastTimeoutRef.current = setTimeout(() => {\r\n            setShowToast(false);\r\n            toastTimeoutRef.current = null;\r\n        }, 5000); // Auto-hide after 5 seconds\r\n    };\r\n\r\n    // Handle save button click - show confirmation\r\n    const handleSaveClick = () => {\r\n        checkUnsavedScorecardChangesBeforeAction(() => {\r\n            // For quizzes, validate before showing save confirmation\r\n            if (activeItem?.type === 'quiz' && quizEditorRef.current) {\r\n                // Run validation before opening the save confirmation\r\n                const isValid = quizEditorRef.current.validateBeforePublish();\r\n                if (!isValid) {\r\n                    return; // Don't show confirmation if validation fails\r\n                }\r\n            }\r\n\r\n            // For learning materials, validate content exists\r\n            if (activeItem?.type === 'material' && learningMaterialEditorRef.current) {\r\n                const hasContent = learningMaterialEditorRef.current.hasContent();\r\n                if (!hasContent) {\r\n                    // Show error message\r\n                    displayToast(\r\n                        \"Empty learning material\",\r\n                        \"Please add content before saving\",\r\n                        \"🚫\"\r\n                    );\r\n                    return; // Don't show confirmation if validation fails\r\n                }\r\n            }\r\n\r\n            // If validation passes, show save confirmation\r\n            setShowSaveConfirmation(true);\r\n        });\r\n    };\r\n\r\n    // Function to check for unsaved scorecard changes and handle appropriately\r\n    const checkUnsavedScorecardChangesBeforeAction = (action: () => void) => {\r\n        // For quizzes, check for unsaved scorecard changes first\r\n        if (activeItem?.type === 'quiz' && quizEditorRef.current) {\r\n            if (quizEditorRef.current.hasUnsavedScorecardChanges()) {\r\n                pendingActionRef.current = action;\r\n                setShowUnsavedScorecardConfirmation(true);\r\n                return;\r\n            }\r\n        }\r\n\r\n        // If no unsaved scorecard changes, proceed with the action\r\n        action();\r\n    };\r\n\r\n    // Handle unsaved scorecard confirmation - navigate to question\r\n    const handleGoBackToScorecard = () => {\r\n        setShowUnsavedScorecardConfirmation(false);\r\n\r\n        // Clear the pending action\r\n        pendingActionRef.current = null;\r\n    };\r\n\r\n    // Handle discard unsaved scorecard changes\r\n    const handleDiscardScorecardChanges = () => {\r\n        setShowUnsavedScorecardConfirmation(false);\r\n\r\n        // Execute the appropriate action based on what was being attempted\r\n        if (pendingActionRef.current) {\r\n            pendingActionRef.current();\r\n        }\r\n\r\n        // Clear the pending action\r\n        pendingActionRef.current = null;\r\n    };\r\n\r\n    // Handle confirmed save action\r\n    const handleConfirmSavePublished = () => {\r\n        setShowSaveConfirmation(false);\r\n\r\n        // Execute the actual save action based on item type\r\n        if (activeItem?.type === 'material') {\r\n            // Use the ref to call save directly\r\n            learningMaterialEditorRef.current?.save();\r\n        } else if (activeItem?.type === 'quiz') {\r\n            // Use the ref to call save directly\r\n            quizEditorRef.current?.savePublished();\r\n        }\r\n    };\r\n\r\n    // Handle cancel save action\r\n    const handleCancelSave = () => {\r\n        setShowSaveConfirmation(false);\r\n    };\r\n\r\n    const isClosingDraft = confirmationType === 'exit_draft';\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"fixed inset-0 z-50 bg-[#111111] flex flex-col\"\r\n                onClick={handleDialogBackdropClick}\r\n            >\r\n                <div\r\n                    ref={dialogContentRef}\r\n                    style={{\r\n                        backgroundColor: '#1A1A1A',\r\n                        border: 'none'\r\n                    }}\r\n                    className=\"w-full h-full flex flex-col\"\r\n                    onClick={(e) => e.stopPropagation()}\r\n                >\r\n                    {/* Dialog Header */}\r\n                    <div\r\n                        className=\"flex items-center justify-between p-4 border-b\"\r\n                        style={{ backgroundColor: '#111111' }}\r\n                    >\r\n                        <div className=\"flex-1 flex items-center\">\r\n                            <h2\r\n                                ref={dialogTitleRef}\r\n                                contentEditable={(activeItem?.status !== 'published' || isEditMode)}\r\n                                suppressContentEditableWarning\r\n                                onInput={(e) => {\r\n                                    // For both learning materials and quizzes, allow editing title \r\n                                    // but don't propagate changes upward yet (will be handled during save)\r\n                                    // The current title will be stored in the DOM element\r\n                                    // and will be sent to the API during save/publish\r\n                                }}\r\n                                onKeyDown={(e) => {\r\n                                    if (e.key === 'Enter') {\r\n                                        e.preventDefault();\r\n                                        // Blur the element to trigger save\r\n                                        (e.target as HTMLElement).blur();\r\n                                    }\r\n                                }}\r\n                                onClick={(e) => {\r\n                                    // Prevent click from bubbling up\r\n                                    e.stopPropagation();\r\n\r\n                                    // If not editable, don't continue\r\n                                    if ((activeItem?.status === 'published' && !isEditMode)) {\r\n                                        return;\r\n                                    }\r\n\r\n                                    // Set a flag to indicate the title is being edited\r\n                                    const titleElement = e.currentTarget as HTMLElement;\r\n                                    titleElement.dataset.editing = \"true\";\r\n\r\n                                    // Only set cursor at the end on first click (not on double-click)\r\n                                    // This allows double-click to select text as expected\r\n                                    if (!titleElement.dataset.clicked) {\r\n                                        titleElement.dataset.clicked = \"true\";\r\n\r\n                                        // Set cursor position at the end of text\r\n                                        const range = document.createRange();\r\n                                        const selection = window.getSelection();\r\n                                        const textNode = titleElement.firstChild || titleElement;\r\n\r\n                                        if (textNode) {\r\n                                            const textLength = textNode.textContent?.length || 0;\r\n                                            range.setStart(textNode, textLength);\r\n                                            range.setEnd(textNode, textLength);\r\n                                            selection?.removeAllRanges();\r\n                                            selection?.addRange(range);\r\n                                        }\r\n\r\n                                        // Reset the clicked flag after a short delay\r\n                                        setTimeout(() => {\r\n                                            titleElement.dataset.clicked = \"\";\r\n                                        }, 300);\r\n                                    }\r\n                                }}\r\n                                className={`text-2xl font-light text-white outline-none empty:before:content-[attr(data-placeholder)] empty:before:text-gray-400 empty:before:pointer-events-none cursor-text mr-4 ${(activeItem?.status !== 'published' || isEditMode) ? 'w-full min-w-[300px]' : ''}`}\r\n                                data-placeholder={activeItem?.type === 'material' ? 'New learning material' : 'New quiz'}\r\n                            >\r\n                                {activeItem?.title}\r\n                            </h2>\r\n                        </div>\r\n                        <div className=\"flex items-center space-x-3\">\r\n                            {/* Preview Mode Toggle for Quizzes/Exams */}\r\n                            {activeItem?.type === 'quiz' && hasQuizQuestions && (\r\n                                <button\r\n                                    onClick={toggleQuizPreviewMode}\r\n                                    className=\"flex items-center px-4 py-2 text-sm text-white bg-transparent border !border-blue-500 hover:bg-[#222222] focus:border-blue-500 active:border-blue-500 rounded-full transition-colors cursor-pointer\"\r\n                                    aria-label={quizPreviewMode ? \"Exit preview\" : \"Preview quiz\"}\r\n                                >\r\n                                    {quizPreviewMode ? (\r\n                                        <>\r\n                                            <Edit2 size={16} className=\"mr-2\" />\r\n                                            Exit Preview\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <Eye size={16} className=\"mr-2\" />\r\n                                            Preview\r\n                                        </>\r\n                                    )}\r\n                                </button>\r\n                            )}\r\n\r\n                            {/* Publish button for all item types */}\r\n                            {activeItem?.status === 'draft' &&\r\n                                ((activeItem?.type === 'quiz' && hasQuizQuestions) ||\r\n                                    activeItem?.type === 'material') && (\r\n                                    <>\r\n                                        {/* Save Draft button */}\r\n                                        <button\r\n                                            onClick={() => {\r\n                                                checkUnsavedScorecardChangesBeforeAction(() => {\r\n                                                    handleConfirmSaveDraft();\r\n                                                });\r\n                                            }}\r\n                                            className=\"flex items-center px-4 py-2 text-sm text-white bg-transparent border !border-yellow-500 hover:bg-[#222222] focus:border-gray-500 active:border-gray-500 rounded-full transition-colors cursor-pointer mr-3\"\r\n                                            aria-label={`Save ${activeItem?.type} draft`}\r\n                                        >\r\n                                            <Check size={16} className=\"mr-2\" />\r\n                                            Save draft\r\n                                        </button>\r\n                                        {/* Existing Publish button */}\r\n                                        <button\r\n                                            onClick={() => {\r\n                                                checkUnsavedScorecardChangesBeforeAction(() => {\r\n                                                    // For quizzes, validate before showing publish confirmation\r\n                                                    if (activeItem?.type === 'quiz' && quizEditorRef.current) {\r\n                                                        // Run validation before opening the publish confirmation\r\n                                                        const isValid = quizEditorRef.current.validateBeforePublish();\r\n                                                        if (!isValid) {\r\n                                                            return; // Don't show confirmation if validation fails\r\n                                                        }\r\n                                                    }\r\n\r\n                                                    // For learning materials, validate content exists\r\n                                                    if (activeItem?.type === 'material' && learningMaterialEditorRef.current) {\r\n                                                        const hasContent = learningMaterialEditorRef.current.hasContent();\r\n                                                        if (!hasContent) {\r\n                                                            // Show error message\r\n                                                            displayToast(\r\n                                                                \"Empty learning material\",\r\n                                                                \"Please add content before publishing\",\r\n                                                                \"🚫\"\r\n                                                            );\r\n                                                            return; // Don't show confirmation if validation fails\r\n                                                        }\r\n                                                    }\r\n\r\n                                                    // If validation passes, show publish confirmation\r\n                                                    onSetShowPublishConfirmation(true);\r\n                                                });\r\n                                            }}\r\n                                            className=\"flex items-center px-4 py-2 text-sm text-white bg-transparent border !border-green-500 hover:bg-[#222222] focus:border-green-500 active:border-green-500 rounded-full transition-colors cursor-pointer\"\r\n                                            aria-label={`Publish ${activeItem?.type}`}\r\n                                        >\r\n                                            <Zap size={16} className=\"mr-2\" />\r\n                                            Publish\r\n                                        </button>\r\n                                    </>\r\n                                )}\r\n\r\n                            {activeItem?.status === 'published' && isEditMode && !quizPreviewMode ? (\r\n                                <>\r\n                                    {scheduledDate && (\r\n                                        <div className=\"flex items-center mr-3\">\r\n                                            <button\r\n                                                onClick={() => setShowSchedulePicker(!showSchedulePicker)}\r\n                                                className=\"flex items-center px-4 py-2 text-sm text-white bg-transparent border !border-yellow-600 hover:bg-[#222222] focus:border-yellow-600 active:border-yellow-600 rounded-full transition-colors cursor-pointer\"\r\n                                                aria-label=\"Set scheduled publication date\"\r\n                                            >\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"mr-2\">\r\n                                                    <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n                                                    <polyline points=\"12 6 12 12 16 14\"></polyline>\r\n                                                </svg>\r\n                                                {formatScheduleDate(scheduledDate)}\r\n                                            </button>\r\n                                            {showSchedulePicker && (\r\n                                                <div ref={datePickerRef} className=\"absolute mt-2 top-16 z-50 bg-[#242424] p-3 border border-gray-700 rounded-lg shadow-lg\">\r\n                                                    <DatePicker\r\n                                                        selected={scheduledDate}\r\n                                                        onChange={(date) => verifyScheduledDateAndSchedule(date)}\r\n                                                        showTimeSelect\r\n                                                        timeFormat=\"HH:mm\"\r\n                                                        timeIntervals={15}\r\n                                                        dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                                                        timeCaption=\"Time\"\r\n                                                        minDate={new Date()} // Can't schedule in the past\r\n                                                        className=\"bg-[#333333] rounded-md p-2 px-4 w-full text-white cursor-pointer\"\r\n                                                        wrapperClassName=\"w-full\"\r\n                                                        calendarClassName=\"bg-[#242424] text-white border border-gray-700 rounded-lg shadow-lg cursor-pointer\"\r\n                                                        inline\r\n                                                    />\r\n                                                    <div className=\"mt-2 flex justify-end\">\r\n                                                        <button\r\n                                                            onClick={() => setShowSchedulePicker(false)}\r\n                                                            className=\"px-3 py-1 text-xs text-white bg-[#444444] hover:bg-[#555555] rounded-md\"\r\n                                                        >\r\n                                                            Close\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    )}\r\n                                    <button\r\n                                        onClick={handleSaveClick}\r\n                                        className=\"flex items-center px-4 py-2 text-sm text-white bg-transparent border !border-green-500 hover:bg-[#222222] focus:border-green-500 active:border-green-500 rounded-full transition-colors cursor-pointer\"\r\n                                        aria-label=\"Save changes\"\r\n                                    >\r\n                                        <Check size={16} className=\"mr-2\" />\r\n                                        Save\r\n                                    </button>\r\n                                    <button\r\n                                        onClick={handleCancelEditClick}\r\n                                        className=\"flex items-center px-4 py-2 text-sm text-white bg-transparent border !border-gray-500 hover:bg-[#222222] focus:border-gray-500 active:border-gray-500 rounded-full transition-colors cursor-pointer\"\r\n                                        aria-label=\"Cancel editing\"\r\n                                    >\r\n                                        <X size={16} className=\"mr-2\" />\r\n                                        Cancel\r\n                                    </button>\r\n                                </>\r\n                            ) : activeItem?.status === 'published' && !isEditMode && !quizPreviewMode && (\r\n                                <>\r\n                                    {activeItem.scheduled_publish_at && (\r\n                                        <Tooltip content={`Scheduled for ${formatScheduleDate(new Date(activeItem.scheduled_publish_at))}`} position=\"top\">\r\n                                            <button\r\n                                                className=\"flex items-center px-4 py-2 text-sm text-white bg-transparent border !border-yellow-600 hover:bg-[#222222] focus:border-yellow-600 active:border-yellow-600 rounded-full transition-colors\"\r\n                                                aria-label=\"Scheduled publishing information\"\r\n                                            >\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"mr-2\">\r\n                                                    <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n                                                    <polyline points=\"12 6 12 12 16 14\"></polyline>\r\n                                                </svg>\r\n                                                Scheduled\r\n                                            </button>\r\n                                        </Tooltip>\r\n                                    )}\r\n                                    <button\r\n                                        onClick={onEnableEditMode}\r\n                                        className=\"flex items-center px-4 py-2 text-sm text-white bg-transparent border !border-violet-600 hover:bg-[#222222] focus:border-violet-600 active:border-violet-600 rounded-full transition-colors cursor-pointer\"\r\n                                        aria-label=\"Edit item\"\r\n                                    >\r\n                                        <Pencil size={16} className=\"mr-2\" />\r\n                                        Edit\r\n                                    </button>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n\r\n                        {/* Close button */}\r\n                        <button\r\n                            onClick={handleCloseRequest}\r\n                            className=\"ml-2 p-2 text-white hover:text-white rounded-full hover:bg-[#333333] transition-colors cursor-pointer\"\r\n                            aria-label=\"Close dialog\"\r\n                        >\r\n                            <X size={24} />\r\n                        </button>\r\n                    </div>\r\n\r\n                    {/* Dialog Content */}\r\n                    <div\r\n                        className=\"flex-1 overflow-y-auto dialog-content-editor\"\r\n                        style={{ height: 'calc(100vh - 65px)' }} // Adjust height to account for header\r\n                        onClick={(e) => {\r\n                            // Ensure the click event doesn't bubble up\r\n                            e.stopPropagation();\r\n\r\n                            // Only focus the editor if in editable mode\r\n                            if (activeItem?.status !== 'published' || isEditMode) {\r\n                                // Focus the editor\r\n                                focusEditor();\r\n                            }\r\n                        }}\r\n                    >\r\n                        {activeItem?.type === 'material' ? (\r\n                            <DynamicLearningMaterialEditor\r\n                                ref={learningMaterialEditorRef}\r\n                                key={`material-${activeItem.id}-${isEditMode}`}\r\n                                readOnly={activeItem.status === 'published' && !isEditMode}\r\n                                showPublishConfirmation={showPublishConfirmation}\r\n                                onPublishConfirm={onPublishConfirm}\r\n                                onPublishCancel={onPublishCancel}\r\n                                taskId={activeItem.id}\r\n                                isDarkMode={true}\r\n                                scheduledPublishAt={scheduledDate ? scheduledDate.toISOString() : null}\r\n                                onPublishSuccess={(updatedData?: TaskData) => {\r\n                                    // Handle publish success\r\n                                    if (updatedData) {\r\n                                        // Properly update the UI state first\r\n                                        // This will transform the publish button to edit button\r\n                                        if (activeItem && updatedData.status === 'published') {\r\n                                            activeItem.status = 'published';\r\n                                            activeItem.title = updatedData.title;\r\n                                            // Add the scheduled_publish_at value from updatedData to activeItem\r\n                                            activeItem.scheduled_publish_at = updatedData.scheduled_publish_at;\r\n\r\n                                            if (updatedData.scheduled_publish_at) {\r\n                                                setScheduledDate(new Date(updatedData.scheduled_publish_at));\r\n                                            } else {\r\n                                                setScheduledDate(null);\r\n                                            }\r\n\r\n                                            if (updatedData.blocks) {\r\n                                                // @ts-ignore - types may not perfectly match\r\n                                                activeItem.content = updatedData.blocks;\r\n                                            }\r\n                                        }\r\n\r\n                                        // Update will be handled by the parent component\r\n                                        onPublishConfirm();\r\n\r\n                                        // Show toast notification\r\n                                        const publishMessage = updatedData.scheduled_publish_at ? \"Your learning material has been scheduled for publishing\" : \"Your learning material has been published\";\r\n                                        displayToast(\"Published\", publishMessage);\r\n                                    }\r\n                                    // Hide the publish confirmation dialog\r\n                                    onSetShowPublishConfirmation(false);\r\n                                }}\r\n                                onSaveSuccess={(updatedData?: TaskData) => {\r\n                                    // Handle save success - similar to publish success but without status change\r\n                                    if (updatedData) {\r\n                                        // Update the activeItem with new title and content\r\n                                        if (activeItem) {\r\n                                            activeItem.title = updatedData.title;\r\n                                            // Add the scheduled_publish_at value when saving\r\n                                            activeItem.scheduled_publish_at = updatedData.scheduled_publish_at;\r\n\r\n                                            if (updatedData.blocks) {\r\n                                                // @ts-ignore - types may not perfectly match\r\n                                                activeItem.content = updatedData.blocks;\r\n                                            }\r\n                                        }\r\n\r\n                                        // Call the parent's save function\r\n                                        onSaveItem();\r\n\r\n                                        // Show toast notification for save success\r\n                                        displayToast(\"Saved\", `Your learning material has been updated`);\r\n                                    }\r\n                                }}\r\n                            />\r\n                        ) : activeItem?.type === 'quiz' ? (\r\n                            <DynamicQuizEditor\r\n                                ref={quizEditorRef}\r\n                                key={`quiz-${activeItem.id}-${isEditMode}`}\r\n                                scheduledPublishAt={scheduledDate ? scheduledDate.toISOString() : null}\r\n                                onChange={(questions) => {\r\n                                    // Track if there are questions for publish/preview button visibility\r\n                                    setHasQuizQuestions(questions.length > 0);\r\n\r\n                                    // Keep activeItem.questions updated for component state consistency\r\n                                    if (activeItem) {\r\n                                        activeItem.questions = questions;\r\n                                    }\r\n\r\n                                    // Notify parent component\r\n                                    onQuizContentChange(questions);\r\n                                }}\r\n                                isPreviewMode={quizPreviewMode}\r\n                                isDarkMode={true}\r\n                                readOnly={activeItem.status === 'published' && !isEditMode}\r\n                                taskId={activeItem.id}\r\n                                status={activeItem.status}\r\n                                taskType={activeItem.type}\r\n                                showPublishConfirmation={showPublishConfirmation}\r\n                                onPublishCancel={onPublishCancel}\r\n                                onValidationError={(message, description) => {\r\n                                    // Display toast notification for validation errors during publishing\r\n                                    displayToast(message, description, \"🚫\");\r\n                                }}\r\n                                courseId={courseId}\r\n                                userId={user?.id}\r\n                                onSaveSuccess={(updatedData) => {\r\n                                    // Handle save success\r\n                                    if (updatedData) {\r\n                                        // Update the activeItem with the updated title and questions\r\n                                        if (activeItem) {\r\n                                            activeItem.title = updatedData.title;\r\n                                            // Add the scheduled_publish_at value when saving\r\n                                            activeItem.scheduled_publish_at = updatedData.scheduled_publish_at;\r\n\r\n                                            if (updatedData.questions) {\r\n                                                activeItem.questions = updatedData.questions;\r\n                                            }\r\n                                        }\r\n\r\n                                        // Call onSaveItem to exit edit mode\r\n                                        onSaveItem();\r\n\r\n                                        // Show toast notification for save success\r\n                                        displayToast(\"Saved\", `Your ${activeItem.type} has been updated`);\r\n                                    }\r\n                                }}\r\n                                onPublishSuccess={(updatedData) => {\r\n                                    // Handle publish success\r\n                                    if (updatedData) {\r\n                                        // Properly update the UI state first\r\n                                        // Properly update the UI state first\r\n                                        // This will transform the publish button to edit button\r\n                                        if (activeItem && updatedData.status === 'published') {\r\n                                            activeItem.status = 'published';\r\n                                            activeItem.title = updatedData.title;\r\n                                            // Add the scheduled_publish_at value from updatedData to activeItem\r\n                                            activeItem.scheduled_publish_at = updatedData.scheduled_publish_at;\r\n\r\n                                            if (updatedData.scheduled_publish_at) {\r\n                                                setScheduledDate(new Date(updatedData.scheduled_publish_at));\r\n                                            } else {\r\n                                                setScheduledDate(null);\r\n                                            }\r\n\r\n                                            if (updatedData.questions) {\r\n                                                activeItem.questions = updatedData.questions;\r\n                                            }\r\n                                        }\r\n\r\n                                        // Update will be handled by the parent component\r\n                                        // Pass the updated data to the parent component\r\n                                        onPublishConfirm();\r\n\r\n                                        // Show toast notification\r\n                                        const publishMessage = updatedData.scheduled_publish_at ? `Your quiz has been scheduled for publishing` : `Your quiz has been published`;\r\n                                        displayToast(\"Published\", publishMessage);\r\n                                    }\r\n\r\n                                    // Hide the publish confirmation dialog\r\n                                    onSetShowPublishConfirmation(false);\r\n                                }}\r\n                                schoolId={schoolId}\r\n                                onQuestionChangeWithUnsavedScorecardChanges={() => {\r\n                                    setShowUnsavedScorecardChangesInfo(true);\r\n                                }}\r\n                            />\r\n                        ) : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Close confirmation dialog */}\r\n            <ConfirmationDialog\r\n                open={showCloseConfirmation}\r\n                title={isClosingDraft ? \"Save Your Progress\" : \"Unsaved Changes\"}\r\n                message={\r\n                    isClosingDraft\r\n                        ?\r\n                        \"Would you like to save your progress before leaving? If you don't save, all your progress will be lost.\" : \"All your unsaved changes will be lost if you leave without saving. Are you sure you want to leave?\"\r\n                }\r\n                confirmButtonText={isClosingDraft ? \"Save\" : \"Discard changes\"}\r\n                cancelButtonText={isClosingDraft ? \"Discard\" : \"Continue Editing\"}\r\n                onConfirm={isClosingDraft ? handleConfirmSaveDraft : handleConfirmDiscardChanges}\r\n                onCancel={isClosingDraft ? handleConfirmDiscardChanges : handleCancelClosingDialog}\r\n                onClickOutside={isClosingDraft ? () => setShowCloseConfirmation(false) : handleCancelClosingDialog}\r\n                type={isClosingDraft ? 'save' : 'delete'}\r\n                showCloseButton={isClosingDraft}\r\n                onClose={() => setShowCloseConfirmation(false)}\r\n            />\r\n\r\n            {/* Save confirmation dialog */}\r\n            <ConfirmationDialog\r\n                open={showSaveConfirmation}\r\n                title=\"Ready to save changes\"\r\n                message=\"These changes will be reflected to learners immediately after saving. Are you sure you want to proceed?\"\r\n                confirmButtonText=\"Save\"\r\n                cancelButtonText=\"Continue Editing\"\r\n                onConfirm={handleConfirmSavePublished}\r\n                onCancel={handleCancelSave}\r\n                type=\"publish\"\r\n            />\r\n\r\n            {/* Unsaved scorecard confirmation dialog */}\r\n            <ConfirmationDialog\r\n                open={showUnsavedScorecardConfirmation}\r\n                title=\"Unsaved Scorecard Changes\"\r\n                message={`The scorecard for this question has unsaved changes. Do you want to discard them and continue, or go back to save them?`}\r\n                confirmButtonText=\"Discard changes\"\r\n                cancelButtonText=\"Go Back\"\r\n                onConfirm={handleDiscardScorecardChanges}\r\n                onCancel={handleGoBackToScorecard}\r\n                type=\"delete\"\r\n            />\r\n\r\n            <ConfirmationDialog\r\n                open={showUnsavedScorecardChangesInfo}\r\n                title=\"You have unsaved changes\"\r\n                message={`Your scorecard has unsaved changes. Either save them or discard them.`}\r\n                confirmButtonText=\"Go back\"\r\n                cancelButtonText=\"\"\r\n                onConfirm={() => {\r\n                    setShowUnsavedScorecardChangesInfo(false);\r\n                }}\r\n                onCancel={() => {\r\n                    setShowUnsavedScorecardChangesInfo(false);\r\n                }}\r\n                type=\"custom\"\r\n            />\r\n\r\n            {/* Toast notification */}\r\n            <Toast\r\n                show={showToast}\r\n                title={toastTitle}\r\n                description={toastDescription}\r\n                emoji={toastEmoji}\r\n                onClose={() => setShowToast(false)}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CourseItemDialog; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1739, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/CourseModuleList.tsx"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\r\nimport { ChevronUp, ChevronDown, ChevronRight, ChevronDown as ChevronDownExpand, Plus, HelpCircle, Trash, Clipboard, Check, Loader2, Copy, FileText, Brain, BookOpen, PenSquare, FileQuestion, ClipboardList, Lock, Ban } from \"lucide-react\";\r\nimport { Module, ModuleItem, Quiz } from \"@/types/course\";\r\nimport { QuizQuestion } from \"@/types/quiz\"; // Import from types instead\r\nimport CourseItemDialog from \"@/components/CourseItemDialog\";\r\nimport ConfirmationDialog from \"@/components/ConfirmationDialog\";\r\nimport Tooltip from \"@/components/Tooltip\"; // Import the Tooltip component\r\nimport { formatScheduleDate } from \"@/lib/utils/dateFormat\"; // Import the utility function\r\n\r\n\r\ninterface CourseModuleListProps {\r\n    modules: Module[];\r\n    mode: 'edit' | 'view'; // 'edit' for teacher editing, 'view' for learner viewing\r\n    onToggleModule: (moduleId: string) => void;\r\n    onOpenItem?: (moduleId: string, itemId: string) => void;\r\n    onMoveItemUp?: (moduleId: string, itemId: string) => void;\r\n    onMoveItemDown?: (moduleId: string, itemId: string) => void;\r\n    onDeleteItem?: (moduleId: string, itemId: string) => void;\r\n    onAddLearningMaterial?: (moduleId: string) => Promise<void>;\r\n    onAddQuiz?: (moduleId: string) => Promise<void>;\r\n    onMoveModuleUp?: (moduleId: string) => void;\r\n    onMoveModuleDown?: (moduleId: string) => void;\r\n    onDeleteModule?: (moduleId: string) => void;\r\n    onEditModuleTitle?: (moduleId: string) => void;\r\n    expandedModules?: Record<string, boolean>; // For learner view\r\n    saveModuleTitle?: (moduleId: string) => void; // Function to save module title\r\n    cancelModuleEditing?: (moduleId: string) => void; // Function to cancel module title editing\r\n    completedTaskIds?: Record<string, boolean>; // Added prop for completed task IDs\r\n    completedQuestionIds?: Record<string, Record<string, boolean>>; // Add prop for partially completed quiz questions\r\n    schoolId?: string; // Add school ID for fetching scorecards\r\n    courseId?: string; // Add courseId for fetching learning materials\r\n\r\n    // Dialog-related props\r\n    isDialogOpen?: boolean;\r\n    activeItem?: ModuleItem | null;\r\n    activeModuleId?: string | null;\r\n    isEditMode?: boolean;\r\n    isPreviewMode?: boolean;\r\n    showPublishConfirmation?: boolean;\r\n    handleConfirmPublish?: () => void;\r\n    handleCancelPublish?: () => void;\r\n    closeDialog?: () => void;\r\n    saveItem?: () => void;\r\n    cancelEditMode?: () => void;\r\n    enableEditMode?: () => void;\r\n    handleQuizContentChange?: (questions: QuizQuestion[]) => void;\r\n    setShowPublishConfirmation?: (show: boolean) => void;\r\n    onDuplicateItem?: (moduleId: string, taskData: any, ordering: number) => Promise<void>;\r\n}\r\n\r\nexport default function CourseModuleList({\r\n    modules,\r\n    mode,\r\n    onToggleModule,\r\n    onOpenItem,\r\n    onMoveItemUp,\r\n    onMoveItemDown,\r\n    onDeleteItem,\r\n    onAddLearningMaterial,\r\n    onAddQuiz,\r\n    onMoveModuleUp,\r\n    onMoveModuleDown,\r\n    onDeleteModule,\r\n    onEditModuleTitle,\r\n    expandedModules = {},\r\n    saveModuleTitle = () => { }, // Default empty function\r\n    cancelModuleEditing = () => { }, // Default empty function\r\n    completedTaskIds = {}, // Default empty object for completed task IDs\r\n    completedQuestionIds = {}, // Default empty object for completed question IDs\r\n    schoolId,\r\n    courseId,\r\n\r\n    // Dialog-related props\r\n    isDialogOpen = false,\r\n    activeItem = null,\r\n    activeModuleId = null,\r\n    isEditMode = false,\r\n    isPreviewMode = false,\r\n    showPublishConfirmation = false,\r\n    handleConfirmPublish = () => { },\r\n    handleCancelPublish = () => { },\r\n    closeDialog = () => { },\r\n    saveItem = () => { },\r\n    cancelEditMode = () => { },\r\n    enableEditMode = () => { },\r\n    handleQuizContentChange = () => { },\r\n    setShowPublishConfirmation = () => { },\r\n    onDuplicateItem,\r\n}: CourseModuleListProps) {\r\n\r\n    // Track completed items - initialize with completedTaskIds prop\r\n    const [completedItems, setCompletedItems] = useState<Record<string, boolean>>(completedTaskIds);\r\n\r\n    // State to track module deletion confirmation\r\n    const [moduleToDelete, setModuleToDelete] = useState<string | null>(null);\r\n\r\n    // State to track deletion in progress\r\n    const [deletingTaskId, setDeletingTaskId] = useState<string | null>(null);\r\n\r\n    // State to track module deletion in progress\r\n    const [deletingModuleId, setDeletingModuleId] = useState<string | null>(null);\r\n\r\n    // State to track task deletion confirmation\r\n    const [taskToDelete, setTaskToDelete] = useState<{ moduleId: string, itemId: string, itemType?: string } | null>(null);\r\n\r\n    // States to track module swapping in progress\r\n    const [swappingModuleUpId, setSwappingModuleUpId] = useState<string | null>(null);\r\n    const [swappingModuleDownId, setSwappingModuleDownId] = useState<string | null>(null);\r\n\r\n    // States to track task swapping in progress\r\n    const [swappingTaskUpId, setSwappingTaskUpId] = useState<string | null>(null);\r\n    const [swappingTaskDownId, setSwappingTaskDownId] = useState<string | null>(null);\r\n\r\n    // State to track task duplication in progress\r\n    const [duplicatingTaskId, setDuplicatingTaskId] = useState<string | null>(null);\r\n\r\n    // Update completedItems when completedTaskIds changes\r\n    useEffect(() => {\r\n        // Only update the state if the values are actually different\r\n        // This prevents an infinite update loop\r\n        const hasChanged = JSON.stringify(completedItems) !== JSON.stringify(completedTaskIds);\r\n        if (hasChanged) {\r\n            setCompletedItems(completedTaskIds);\r\n        }\r\n    }, [completedTaskIds, completedItems]);\r\n\r\n    // Refs for the dialog\r\n    const dialogTitleRef = useRef<HTMLHeadingElement | null>(null);\r\n    const dialogContentRef = useRef<HTMLDivElement | null>(null);\r\n\r\n    // Function to focus the editor\r\n    const focusEditor = () => {\r\n        // First, blur the title element\r\n        if (dialogTitleRef.current) {\r\n            dialogTitleRef.current.blur();\r\n        }\r\n\r\n        // Then try to find and focus the editor\r\n        setTimeout(() => {\r\n            try {\r\n                const selectors = [\r\n                    '.bn-editor',\r\n                    '.ProseMirror',\r\n                    '.dialog-content-editor [contenteditable=\"true\"]',\r\n                    '.dialog-content-editor .bn-container',\r\n                    '.dialog-content-editor [tabindex=\"0\"]',\r\n                    '.dialog-content-editor [role=\"textbox\"]',\r\n                    '.dialog-content-editor div[contenteditable]'\r\n                ];\r\n\r\n                for (const selector of selectors) {\r\n                    const el = document.querySelector(selector);\r\n                    if (el instanceof HTMLElement) {\r\n                        el.focus();\r\n                        return; // Exit once we've focused an element\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                console.error('Error focusing editor:', err);\r\n            }\r\n        }, 200);\r\n    };\r\n\r\n    // Function to handle swapping modules via API\r\n    const swapModules = async (moduleId1: string, moduleId2: string) => {\r\n        if (!courseId) {\r\n            console.error('Course ID is required for swapping modules');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/courses/${courseId}/milestones/swap`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    milestone_1_id: moduleId1,\r\n                    milestone_2_id: moduleId2,\r\n                }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Failed to swap modules: ${response.statusText}`);\r\n            }\r\n\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.error('Error swapping modules:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    // Function to handle swapping tasks via API\r\n    const swapTasks = async (taskId1: string, taskId2: string) => {\r\n        if (!courseId) {\r\n            console.error('Course ID is required for swapping modules');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/courses/${courseId}/tasks/swap`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    task_1_id: taskId1,\r\n                    task_2_id: taskId2,\r\n                }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Failed to swap tasks: ${response.statusText}`);\r\n            }\r\n\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.error('Error swapping tasks:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    // Function to handle moving a module up (with API call)\r\n    const handleMoveModuleUp = async (moduleId: string) => {\r\n        // Find the module and its index\r\n        const index = modules.findIndex(m => m.id === moduleId);\r\n        if (index <= 0) return; // Can't move up if it's the first one\r\n\r\n        // Get the previous module\r\n        const previousModule = modules[index - 1];\r\n        if (!previousModule) return;\r\n\r\n        try {\r\n            // Set loading state\r\n            setSwappingModuleUpId(moduleId);\r\n\r\n            // Call the API to swap modules\r\n            await swapModules(moduleId, previousModule.id);\r\n\r\n            // Update UI via the parent component's handler\r\n            if (onMoveModuleUp) {\r\n                onMoveModuleUp(moduleId);\r\n            }\r\n        } catch (error) {\r\n            console.error('Failed to move module up:', error);\r\n            // Could add a toast notification here\r\n        } finally {\r\n            // Clear loading state\r\n            setSwappingModuleUpId(null);\r\n        }\r\n    };\r\n\r\n    // Function to handle moving a module down (with API call)\r\n    const handleMoveModuleDown = async (moduleId: string) => {\r\n        // Find the module and its index\r\n        const index = modules.findIndex(m => m.id === moduleId);\r\n        if (index === -1 || index === modules.length - 1) return; // Can't move down if it's the last one\r\n\r\n        // Get the next module\r\n        const nextModule = modules[index + 1];\r\n        if (!nextModule) return;\r\n\r\n        try {\r\n            // Set loading state\r\n            setSwappingModuleDownId(moduleId);\r\n\r\n            // Call the API to swap modules\r\n            await swapModules(moduleId, nextModule.id);\r\n\r\n            // Update UI via the parent component's handler\r\n            if (onMoveModuleDown) {\r\n                onMoveModuleDown(moduleId);\r\n            }\r\n        } catch (error) {\r\n            console.error('Failed to move module down:', error);\r\n            // Could add a toast notification here\r\n        } finally {\r\n            // Clear loading state\r\n            setSwappingModuleDownId(null);\r\n        }\r\n    };\r\n\r\n    // Function to handle moving a task up (with API call)\r\n    const handleMoveTaskUp = async (moduleId: string, taskId: string) => {\r\n        // Find the module\r\n        const module = modules.find(m => m.id === moduleId);\r\n        if (!module) return;\r\n\r\n        // Find the task and its index\r\n        const index = module.items.findIndex(item => item.id === taskId);\r\n        if (index <= 0) return; // Can't move up if it's the first one\r\n\r\n        // Get the previous task\r\n        const previousTask = module.items[index - 1];\r\n        if (!previousTask) return;\r\n\r\n        try {\r\n            // Set loading state\r\n            setSwappingTaskUpId(taskId);\r\n\r\n            // Call the API to swap tasks\r\n            await swapTasks(taskId, previousTask.id);\r\n\r\n            // Update UI via the parent component's handler\r\n            if (onMoveItemUp) {\r\n                onMoveItemUp(moduleId, taskId);\r\n            }\r\n        } catch (error) {\r\n            console.error('Failed to move task up:', error);\r\n            // Could add a toast notification here\r\n        } finally {\r\n            // Clear loading state\r\n            setSwappingTaskUpId(null);\r\n        }\r\n    };\r\n\r\n    // Function to handle moving a task down (with API call)\r\n    const handleMoveTaskDown = async (moduleId: string, taskId: string) => {\r\n        // Find the module\r\n        const module = modules.find(m => m.id === moduleId);\r\n        if (!module) return;\r\n\r\n        // Find the task and its index\r\n        const index = module.items.findIndex(item => item.id === taskId);\r\n        if (index === -1 || index === module.items.length - 1) return; // Can't move down if it's the last one\r\n\r\n        // Get the next task\r\n        const nextTask = module.items[index + 1];\r\n        if (!nextTask) return;\r\n\r\n        try {\r\n            // Set loading state\r\n            setSwappingTaskDownId(taskId);\r\n\r\n            // Call the API to swap tasks\r\n            await swapTasks(taskId, nextTask.id);\r\n\r\n            // Update UI via the parent component's handler\r\n            if (onMoveItemDown) {\r\n                onMoveItemDown(moduleId, taskId);\r\n            }\r\n        } catch (error) {\r\n            console.error('Failed to move task down:', error);\r\n            // Could add a toast notification here\r\n        } finally {\r\n            // Clear loading state\r\n            setSwappingTaskDownId(null);\r\n        }\r\n    };\r\n\r\n    // Get the appropriate expanded state based on mode\r\n    const getIsExpanded = (moduleId: string) => {\r\n        if (mode === 'edit') {\r\n            return modules.find(m => m.id === moduleId)?.isExpanded || false;\r\n        } else {\r\n            return expandedModules[moduleId] || false;\r\n        }\r\n    };\r\n\r\n    // Function to format unlock date for display\r\n    const formatUnlockDate = (unlockAt: string) => {\r\n        const date = new Date(unlockAt);\r\n        return date.toLocaleDateString('en-US', {\r\n            weekday: 'long',\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric',\r\n            hour: '2-digit',\r\n            minute: '2-digit'\r\n        });\r\n    };\r\n\r\n    // Handle module click based on mode\r\n    const handleModuleClick = (e: React.MouseEvent, moduleId: string) => {\r\n        // Find the module\r\n        const module = modules.find(m => m.id === moduleId);\r\n        if (!module) return;\r\n\r\n        // Prevent clicking on locked modules\r\n        if (module.unlockAt) {\r\n            return;\r\n        }\r\n\r\n        // If in edit mode and module is in editing mode, don't toggle expansion\r\n        if (mode === 'edit' && module.isEditing) {\r\n            return;\r\n        }\r\n\r\n        // Prevent toggling if clicking on buttons\r\n        if (\r\n            (e.target as HTMLElement).tagName === 'BUTTON' ||\r\n            (e.target as HTMLElement).closest('button')\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        onToggleModule(moduleId);\r\n    };\r\n\r\n    // Function to handle task deletion with API call\r\n    const handleDeleteTask = async (moduleId: string, itemId: string) => {\r\n        try {\r\n            setDeletingTaskId(itemId);\r\n\r\n            // Make the API call to delete the task\r\n            const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/tasks/${itemId}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Failed to delete task: ${response.statusText}`);\r\n            }\r\n\r\n            // If the API call was successful, update the UI\r\n            if (onDeleteItem) {\r\n                onDeleteItem(moduleId, itemId);\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Error deleting task:', error);\r\n            // You could add a toast notification here for the error\r\n        } finally {\r\n            setDeletingTaskId(null);\r\n        }\r\n    };\r\n\r\n    // Function to handle task delete confirmation\r\n    const handleConfirmTaskDelete = () => {\r\n        if (taskToDelete) {\r\n            handleDeleteTask(taskToDelete.moduleId, taskToDelete.itemId);\r\n        }\r\n        setTaskToDelete(null);\r\n    };\r\n\r\n    // Function to cancel task deletion\r\n    const handleCancelTaskDelete = () => {\r\n        setTaskToDelete(null);\r\n    };\r\n\r\n    // Function to handle module delete confirmation\r\n    const handleConfirmModuleDelete = async () => {\r\n        if (moduleToDelete && onDeleteModule) {\r\n            try {\r\n                setDeletingModuleId(moduleToDelete);\r\n\r\n                // Make the API call to delete the module (milestone)\r\n                const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/milestones/${moduleToDelete}`, {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    }\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(`Failed to delete module: ${response.statusText}`);\r\n                }\r\n\r\n                // If the API call was successful, update the UI\r\n                onDeleteModule(moduleToDelete);\r\n\r\n            } catch (error) {\r\n                console.error('Error deleting module:', error);\r\n                // Could add a toast notification here for the error\r\n            } finally {\r\n                setDeletingModuleId(null);\r\n            }\r\n        }\r\n        setModuleToDelete(null);\r\n    };\r\n\r\n    // Function to cancel module deletion\r\n    const handleCancelModuleDelete = () => {\r\n        setModuleToDelete(null);\r\n    };\r\n\r\n    // Function to get item type name for display\r\n    const getItemTypeName = (type?: string) => {\r\n        switch (type) {\r\n            case 'material': return 'learning material';\r\n            case 'quiz': return 'quiz';\r\n        }\r\n    };\r\n\r\n    // Function to handle task duplication with API call\r\n    const handleDuplicateTask = async (moduleId: string, itemId: string) => {\r\n        if (!courseId) {\r\n            console.error('Course ID is required for cloning tasks');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setDuplicatingTaskId(itemId);\r\n\r\n            // Make the API call to duplicate the task\r\n            const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/tasks/duplicate`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    task_id: parseInt(itemId),\r\n                    milestone_id: parseInt(moduleId),\r\n                    course_id: parseInt(courseId)\r\n                })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Failed to duplicate task: ${response.statusText}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            // If the API call was successful, update the UI\r\n            if (onDuplicateItem) {\r\n                await onDuplicateItem(moduleId, data['task'], data['ordering']);\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Error duplicating task:', error);\r\n            // You could add a toast notification here for the error\r\n        } finally {\r\n            setDuplicatingTaskId(null);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"space-y-2\">\r\n                {modules.map((module, index) => {\r\n                    const moduleContent = (\r\n                        <div\r\n                            key={module.id}\r\n                            className=\"border-none rounded-lg transition-colors\"\r\n                            style={{ backgroundColor: module.backgroundColor }}\r\n                        >\r\n                            <div className=\"flex flex-col\">\r\n                                {/* Module header with title and buttons */}\r\n                                <div\r\n                                    className={`flex items-center p-4 pb-3 ${module.unlockAt ? 'cursor-not-allowed opacity-50' : 'cursor-pointer'}`}\r\n                                    onClick={(e) => handleModuleClick(e, module.id)}\r\n                                >\r\n                                    <button\r\n                                        onClick={(e) => {\r\n                                            e.stopPropagation();\r\n                                            // Prevent toggling locked modules\r\n                                            if (module.unlockAt) return;\r\n\r\n                                            onToggleModule(module.id);\r\n                                        }}\r\n                                        className={`hidden sm:block mr-2 transition-colors ${module.unlockAt ? 'text-gray-500 cursor-not-allowed' : 'text-gray-400 hover:text-white cursor-pointer'}`}\r\n                                        aria-label={getIsExpanded(module.id) ? \"Collapse module\" : \"Expand module\"}\r\n                                        disabled={!!module.unlockAt}\r\n                                    >\r\n                                        {getIsExpanded(module.id) ? <ChevronDownExpand size={18} /> : <ChevronRight size={18} />}\r\n                                    </button>\r\n                                    <div className=\"flex-1 mr-2 sm:mr-4\">\r\n                                        {mode === 'edit' && module.isEditing ? (\r\n                                            <h2\r\n                                                contentEditable\r\n                                                suppressContentEditableWarning\r\n                                                className=\"text-lg sm:text-xl font-light text-white outline-none empty:before:content-[attr(data-placeholder)] empty:before:text-gray-400 empty:before:pointer-events-none\"\r\n                                                data-module-id={module.id}\r\n                                                data-placeholder=\"New Module\"\r\n                                                onClick={(e) => e.stopPropagation()}\r\n                                            >\r\n                                                {module.title}\r\n                                            </h2>\r\n                                        ) : (\r\n                                            <div className=\"flex items-center\">\r\n                                                <h2\r\n                                                    className={`text-lg sm:text-xl font-light ${module.unlockAt ? 'text-gray-400' : 'text-white'}`}\r\n                                                >\r\n                                                    {module.title || \"New Module\"}\r\n                                                </h2>\r\n                                                {module.unlockAt && (\r\n                                                    <Lock size={16} className=\"ml-2 text-gray-400\" />\r\n                                                )}\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    {/* Module action buttons - only in edit mode */}\r\n                                    {mode === 'edit' && (\r\n                                        <div className=\"flex items-center space-x-2\">\r\n                                            {module.isEditing ? (\r\n                                                <>\r\n                                                    <button\r\n                                                        onClick={(e) => {\r\n                                                            e.stopPropagation();\r\n                                                            saveModuleTitle(module.id);\r\n                                                        }}\r\n                                                        className=\"px-3 py-1 text-sm text-black bg-gray-300 hover:bg-gray-400 border border-black hover:border-gray-600 rounded-md transition-colors cursor-pointer flex items-center\"\r\n                                                        aria-label=\"Save module title\"\r\n                                                    >\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"mr-1\">\r\n                                                            <path d=\"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z\"></path>\r\n                                                            <polyline points=\"17 21 17 13 7 13 7 21\"></polyline>\r\n                                                            <polyline points=\"7 3 7 8 15 8\"></polyline>\r\n                                                        </svg>\r\n                                                        Save\r\n                                                    </button>\r\n                                                    <button\r\n                                                        onClick={(e) => {\r\n                                                            e.stopPropagation();\r\n                                                            cancelModuleEditing(module.id);\r\n                                                        }}\r\n                                                        className=\"px-3 py-1 text-sm text-gray-300 hover:text-white transition-colors focus:outline-none cursor-pointer flex items-center\"\r\n                                                        aria-label=\"Cancel editing\"\r\n                                                    >\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"mr-1\">\r\n                                                            <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n                                                            <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n                                                        </svg>\r\n                                                        Cancel\r\n                                                    </button>\r\n                                                </>\r\n                                            ) : (\r\n                                                <>\r\n                                                    <button\r\n                                                        onClick={(e) => {\r\n                                                            e.stopPropagation();\r\n                                                            if (onEditModuleTitle) {\r\n                                                                onEditModuleTitle(module.id);\r\n                                                            }\r\n                                                        }}\r\n                                                        className=\"px-3 py-1 text-sm text-black bg-gray-300 hover:bg-gray-400 border border-black hover:border-gray-600 rounded-md transition-colors cursor-pointer flex items-center\"\r\n                                                        aria-label=\"Edit module title\"\r\n                                                    >\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"mr-1\">\r\n                                                            <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path>\r\n                                                            <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>\r\n                                                        </svg>\r\n                                                        Edit\r\n                                                    </button>\r\n                                                    <button\r\n                                                        onClick={(e) => {\r\n                                                            e.stopPropagation();\r\n                                                            handleMoveModuleUp(module.id);\r\n                                                        }}\r\n                                                        disabled={index === 0 || swappingModuleUpId === module.id}\r\n                                                        className=\"p-1 text-gray-400 hover:text-white disabled:opacity-30 disabled:cursor-not-allowed transition-colors cursor-pointer\"\r\n                                                        aria-label=\"Move module up\"\r\n                                                    >\r\n                                                        {swappingModuleUpId === module.id ? (\r\n                                                            <div className=\"animate-spin w-4 h-4 border-2 border-gray-400 border-t-transparent rounded-full\" />\r\n                                                        ) : (\r\n                                                            <ChevronUp size={18} />\r\n                                                        )}\r\n                                                    </button>\r\n                                                    <button\r\n                                                        onClick={(e) => {\r\n                                                            e.stopPropagation();\r\n                                                            handleMoveModuleDown(module.id);\r\n                                                        }}\r\n                                                        disabled={index === modules.length - 1 || swappingModuleDownId === module.id}\r\n                                                        className=\"p-1 text-gray-400 hover:text-white disabled:opacity-30 disabled:cursor-not-allowed transition-colors cursor-pointer\"\r\n                                                        aria-label=\"Move module down\"\r\n                                                    >\r\n                                                        {swappingModuleDownId === module.id ? (\r\n                                                            <div className=\"animate-spin w-4 h-4 border-2 border-gray-400 border-t-transparent rounded-full\" />\r\n                                                        ) : (\r\n                                                            <ChevronDown size={18} />\r\n                                                        )}\r\n                                                    </button>\r\n                                                    <button\r\n                                                        onClick={(e) => {\r\n                                                            e.stopPropagation();\r\n                                                            setModuleToDelete(module.id);\r\n                                                        }}\r\n                                                        className=\"p-1 text-gray-400 hover:text-white transition-colors cursor-pointer\"\r\n                                                        aria-label=\"Delete module\"\r\n                                                        disabled={deletingModuleId === module.id}\r\n                                                    >\r\n                                                        {deletingModuleId === module.id ? (\r\n                                                            <div className=\"animate-spin w-4 h-4 border-2 border-gray-400 border-t-transparent rounded-full\" />\r\n                                                        ) : (\r\n                                                            <Trash size={18} />\r\n                                                        )}\r\n                                                    </button>\r\n                                                </>\r\n                                            )}\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {/* Add expand/collapse button on the right side for view mode */}\r\n                                    {mode === 'view' && (\r\n                                        <button\r\n                                            onClick={(e) => {\r\n                                                e.stopPropagation();\r\n                                                // Prevent toggling locked modules\r\n                                                if (module.unlockAt) return;\r\n\r\n                                                onToggleModule(module.id);\r\n\r\n                                            }}\r\n                                            className={`flex items-center px-3 py-1 text-sm focus:outline-none focus:ring-0 focus:border-0 transition-colors rounded-full border ${module.unlockAt ? 'text-gray-500 border-gray-600 bg-gray-800 cursor-not-allowed' : 'text-gray-400 hover:text-white border-gray-700 bg-gray-900 cursor-pointer'}`}\r\n                                            aria-label={getIsExpanded(module.id) ? \"Collapse module\" : \"Expand module\"}\r\n                                            disabled={!!module.unlockAt}\r\n                                        >\r\n                                            {getIsExpanded(module.id) ? (\r\n                                                <>\r\n                                                    <ChevronUp size={16} className=\"mr-1\" />\r\n                                                    <span className=\"hidden sm:inline\">Collapse</span>\r\n                                                </>\r\n                                            ) : (\r\n                                                <>\r\n                                                    <ChevronDown size={16} className=\"mr-1\" />\r\n                                                    <span className=\"hidden sm:inline\">Expand</span>\r\n                                                </>\r\n                                            )}\r\n                                        </button>\r\n                                    )}\r\n                                </div>\r\n\r\n                                {/* Progress information and bar - shown differently based on expanded state */}\r\n                                {mode === 'view' && module.progress !== undefined && (\r\n                                    <div className={`${module.unlockAt ? 'cursor-not-allowed' : 'cursor-pointer'}`}>\r\n                                        {getIsExpanded(module.id) ? (\r\n                                            <div className=\"px-4 pb-2\">\r\n                                                <div className=\"flex justify-end items-center mb-1\">\r\n                                                    <div className=\"text-sm text-gray-400\">\r\n                                                        {module.progress}%\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"w-full bg-gray-700 h-2 rounded-full\">\r\n                                                    <div\r\n                                                        className=\"bg-green-500 h-2 rounded-full transition-all duration-300\"\r\n                                                        style={{ width: `${module.progress}%` }}\r\n                                                    ></div>\r\n                                                </div>\r\n                                            </div>\r\n                                        ) : (\r\n                                            <div className=\"px-4 pb-4\">\r\n                                                <div className=\"flex justify-end items-center mb-1\">\r\n                                                    <div className=\"text-sm text-gray-400\">\r\n                                                        {module.progress}%\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"w-full bg-gray-700 h-2 rounded-full\">\r\n                                                    <div\r\n                                                        className=\"bg-green-500 h-2 rounded-full transition-all duration-300\"\r\n                                                        style={{ width: `${module.progress}%` }}\r\n                                                    ></div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            {/* Module content - only visible when expanded */}\r\n                            {getIsExpanded(module.id) && (\r\n                                <div className=\"px-4 pb-4\">\r\n                                    <div className=\"pl-2 sm:pl-6 border-l border-gray-400 ml-2 space-y-2\">\r\n                                        {module.items.map((item, itemIndex) => (\r\n                                            <div\r\n                                                key={item.id}\r\n                                                data-testid={`module-item-${item.id}`}\r\n                                                className={`flex items-center group p-2 rounded-md cursor-pointer transition-all relative mt-2 hover:bg-gray-700/50 ${completedItems[item.id] ? \"opacity-60\" : \"\"\r\n                                                    } ${item.isGenerating ? \"opacity-40 pointer-events-none\" : \"\"\r\n                                                    }`}\r\n                                                onClick={() => onOpenItem && !item.isGenerating && onOpenItem(module.id, item.id)}\r\n                                            >\r\n                                                <div className={`flex items-center justify-center mr-4 sm:mr-2 ${completedItems[item.id]\r\n                                                    ? \"opacity-50\"\r\n                                                    : \"opacity-100\"\r\n                                                    }`}>\r\n                                                    {/* Enhanced visual distinction with color and better icons */}\r\n                                                    {item.type === 'material' ? (\r\n                                                        <div className={`w-7 h-7 rounded-md flex items-center justify-center ${completedItems[item.id]\r\n                                                            ? \"bg-green-500/15\"\r\n                                                            : \"bg-blue-500/15\"\r\n                                                            }`}>\r\n                                                            <BookOpen size={16} className={`${completedItems[item.id]\r\n                                                                ? \"text-green-500\"\r\n                                                                : \"text-blue-400\"\r\n                                                                }`} />\r\n                                                        </div>\r\n                                                    ) : (\r\n                                                        <div className={`w-7 h-7 rounded-md flex items-center justify-center ${completedItems[item.id]\r\n                                                            ? \"bg-green-500/15\"\r\n                                                            : (completedQuestionIds[item.id] &&\r\n                                                                Object.keys(completedQuestionIds[item.id]).some(qId => completedQuestionIds[item.id][qId] === true)\r\n                                                                ? \"bg-yellow-500/15\"\r\n                                                                : \"bg-purple-500/15\")\r\n                                                            }`}>\r\n                                                            <ClipboardList size={16} className={completedItems[item.id]\r\n                                                                ? \"text-green-500\"\r\n                                                                : completedQuestionIds[item.id] &&\r\n                                                                    Object.keys(completedQuestionIds[item.id]).some(qId => completedQuestionIds[item.id][qId] === true)\r\n                                                                    ? \"text-yellow-500\"\r\n                                                                    : \"text-white\"\r\n                                                            } />\r\n                                                        </div>\r\n                                                    )}\r\n\r\n                                                    {/* Add a small generating indicator if the item is still being generated */}\r\n                                                    {item.isGenerating && (\r\n                                                        <div className=\"ml-2 animate-pulse\">\r\n                                                            <Loader2 size={12} className=\"animate-spin text-gray-400\" />\r\n                                                        </div>\r\n                                                    )}\r\n                                                </div>\r\n                                                <div className=\"flex-1\">\r\n                                                    <div className={`text-base font-light ${completedItems[item.id]\r\n                                                        ? \"line-through text-white\"\r\n                                                        : (item.type === 'quiz') &&\r\n                                                            completedQuestionIds[item.id] &&\r\n                                                            Object.keys(completedQuestionIds[item.id]).some(qId => completedQuestionIds[item.id][qId] === true)\r\n                                                            ? \"text-yellow-500\"\r\n                                                            : \"text-white\"\r\n                                                        } outline-none empty:before:content-[attr(data-placeholder)] empty:before:text-gray-400 empty:before:pointer-events-none mr-2`}>\r\n                                                        {item.title}\r\n\r\n                                                        {/* Always display question count for quizzes (except drafts) */}\r\n                                                        {item.type === 'quiz' && item.status !== 'draft' && (\r\n                                                            <span className={`inline-block ml-2 text-sm font-normal ${!completedItems[item.id] &&\r\n                                                                completedQuestionIds[item.id] &&\r\n                                                                Object.keys(completedQuestionIds[item.id]).some(qId => completedQuestionIds[item.id][qId] === true)\r\n                                                                ? \"text-yellow-500\"\r\n                                                                : \"text-gray-400\"\r\n                                                                }`}>\r\n                                                                ({completedQuestionIds[item.id]\r\n                                                                    ? mode === 'view' && !completedItems[item.id] && Object.keys(completedQuestionIds[item.id]).some(qId => completedQuestionIds[item.id][qId] === true)\r\n                                                                        ? `${Object.values(completedQuestionIds[item.id]).filter(Boolean).length} / ${(item as Quiz).numQuestions}`\r\n                                                                        : `${Object.keys(completedQuestionIds[item.id]).length} question${Object.keys(completedQuestionIds[item.id]).length === 1 ? \"\" : \"s\"}`\r\n                                                                    : `${(item as Quiz).numQuestions} question${(item as Quiz).numQuestions === 1 ? \"\" : \"s\"}`})\r\n                                                            </span>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                {/* Item action buttons - only in edit mode */}\r\n                                                {mode === 'edit' && (\r\n                                                    <div className=\"flex items-center space-x-2\" onClick={(e) => e.stopPropagation()}>\r\n                                                        {item.status === 'draft' && (\r\n                                                            <span className=\"inline-flex items-center px-2 py-0.5 rounded-full text-[10px] font-medium bg-red-500 text-white\">\r\n                                                                DRAFT\r\n                                                            </span>\r\n                                                        )}\r\n                                                        {item.status === 'published' && item.scheduled_publish_at && (\r\n                                                            <Tooltip content={`Scheduled for ${formatScheduleDate(new Date(item.scheduled_publish_at))}`} position=\"top\">\r\n                                                                <span className=\"inline-flex items-center px-2 py-0.5 rounded-full text-[10px] font-medium bg-yellow-900 text-white\">\r\n                                                                    SCHEDULED\r\n                                                                </span>\r\n                                                            </Tooltip>\r\n                                                        )}\r\n                                                        <Tooltip content=\"Duplicate as draft\" position=\"top\">\r\n                                                            <button\r\n                                                                onClick={(e) => {\r\n                                                                    e.stopPropagation();\r\n                                                                    handleDuplicateTask(module.id, item.id);\r\n                                                                }}\r\n                                                                disabled={duplicatingTaskId === item.id}\r\n                                                                className=\"p-1 text-gray-400 hover:text-white disabled:opacity-30 disabled:cursor-not-allowed transition-colors cursor-pointer\"\r\n                                                                aria-label=\"Duplicate task as draft\"\r\n                                                            >\r\n                                                                {duplicatingTaskId === item.id ? (\r\n                                                                    <div className=\"animate-spin w-4 h-4 border-2 border-gray-400 border-t-transparent rounded-full\" />\r\n                                                                ) : (\r\n                                                                    <Copy size={16} />\r\n                                                                )}\r\n                                                            </button>\r\n                                                        </Tooltip>\r\n                                                        <button\r\n                                                            onClick={(e) => {\r\n                                                                e.stopPropagation();\r\n                                                                handleMoveTaskUp(module.id, item.id);\r\n                                                            }}\r\n                                                            disabled={itemIndex === 0 || swappingTaskUpId === item.id}\r\n                                                            className=\"p-1 text-gray-400 hover:text-white disabled:opacity-30 disabled:cursor-not-allowed transition-colors cursor-pointer\"\r\n                                                            aria-label=\"Move item up\"\r\n                                                        >\r\n                                                            {swappingTaskUpId === item.id ? (\r\n                                                                <div className=\"animate-spin w-4 h-4 border-2 border-gray-400 border-t-transparent rounded-full\" />\r\n                                                            ) : (\r\n                                                                <ChevronUp size={16} />\r\n                                                            )}\r\n                                                        </button>\r\n                                                        <button\r\n                                                            onClick={(e) => {\r\n                                                                e.stopPropagation();\r\n                                                                handleMoveTaskDown(module.id, item.id);\r\n                                                            }}\r\n                                                            disabled={itemIndex === module.items.length - 1 || swappingTaskDownId === item.id}\r\n                                                            className=\"p-1 text-gray-400 hover:text-white disabled:opacity-30 disabled:cursor-not-allowed transition-colors cursor-pointer\"\r\n                                                            aria-label=\"Move item down\"\r\n                                                        >\r\n                                                            {swappingTaskDownId === item.id ? (\r\n                                                                <div className=\"animate-spin w-4 h-4 border-2 border-gray-400 border-t-transparent rounded-full\" />\r\n                                                            ) : (\r\n                                                                <ChevronDown size={16} />\r\n                                                            )}\r\n                                                        </button>\r\n                                                        <button\r\n                                                            onClick={(e) => {\r\n                                                                e.stopPropagation();\r\n                                                                if (onDeleteItem) {\r\n                                                                    setTaskToDelete({\r\n                                                                        moduleId: module.id,\r\n                                                                        itemId: item.id,\r\n                                                                        itemType: item.type\r\n                                                                    });\r\n                                                                }\r\n                                                            }}\r\n                                                            className=\"p-1 text-gray-400 hover:text-white transition-colors cursor-pointer\"\r\n                                                            aria-label=\"Delete item\"\r\n                                                            disabled={deletingTaskId === item.id}\r\n                                                        >\r\n                                                            {deletingTaskId === item.id ? (\r\n                                                                <div className=\"animate-spin w-4 h-4 border-2 border-gray-400 border-t-transparent rounded-full\" />\r\n                                                            ) : (\r\n                                                                <Trash size={16} />\r\n                                                            )}\r\n                                                        </button>\r\n                                                    </div>\r\n                                                )}\r\n\r\n                                                {/* Completion checkbox - only in view mode */}\r\n                                                {mode === 'view' && (\r\n                                                    <div className=\"flex items-center\" onClick={(e) => e.stopPropagation()}>\r\n                                                        <button\r\n                                                            className={`w-5 h-5 rounded-full flex items-center justify-center transition-colors cursor-pointer ${completedItems[item.id]\r\n                                                                ? \"bg-green-500 border-0\"\r\n                                                                : \"border border-gray-500 hover:border-white\"\r\n                                                                }`}\r\n                                                            aria-label={completedItems[item.id] ? \"Mark as incomplete\" : \"Mark as completed\"}\r\n                                                        >\r\n                                                            {completedItems[item.id] ? (\r\n                                                                <Check size={12} className=\"text-white\" />\r\n                                                            ) : null}\r\n                                                        </button>\r\n                                                    </div>\r\n                                                )}\r\n                                            </div>\r\n                                        ))}\r\n\r\n                                        {/* Add item buttons - only in edit mode */}\r\n                                        {mode === 'edit' && (\r\n                                            <div className=\"flex space-x-2 mt-4\">\r\n                                                <Tooltip content=\"Add learning material to teach a topic in the module\" position=\"top\">\r\n                                                    <button\r\n                                                        onClick={async () => {\r\n                                                            if (onAddLearningMaterial) {\r\n                                                                try {\r\n                                                                    await onAddLearningMaterial(module.id);\r\n                                                                } catch (error) {\r\n                                                                    console.error(\"Failed to add learning material:\", error);\r\n                                                                }\r\n                                                            }\r\n                                                        }}\r\n                                                        className=\"flex items-center px-3 py-1.5 text-sm text-gray-300 hover:text-white border border-gray-400 rounded-full transition-colors cursor-pointer\"\r\n                                                    >\r\n                                                        <Plus size={14} className=\"mr-1\" />\r\n                                                        Learning material\r\n                                                    </button>\r\n                                                </Tooltip>\r\n                                                <Tooltip content=\"Create a quiz for practice or assessment\" position=\"top\">\r\n                                                    <button\r\n                                                        onClick={async () => {\r\n                                                            if (onAddQuiz) {\r\n                                                                try {\r\n                                                                    await onAddQuiz(module.id);\r\n                                                                } catch (error) {\r\n                                                                    console.error(\"Failed to add quiz:\", error);\r\n                                                                }\r\n                                                            }\r\n                                                        }}\r\n                                                        className=\"flex items-center px-3 py-1.5 text-sm text-gray-300 hover:text-white border border-gray-400 rounded-full transition-colors cursor-pointer\"\r\n                                                    >\r\n                                                        <Plus size={14} className=\"mr-1\" />\r\n                                                        Quiz\r\n                                                    </button>\r\n                                                </Tooltip>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    );\r\n\r\n                    return module.unlockAt ? (\r\n                        <Tooltip key={module.id} content={`Unlocks on ${formatUnlockDate(module.unlockAt)}`} className=\"w-full block\" position=\"top\">\r\n                            {moduleContent}\r\n                        </Tooltip>\r\n                    ) : (\r\n                        moduleContent\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            {/* Add CourseItemDialog inside the CourseModuleList component */}\r\n            < CourseItemDialog\r\n                isOpen={isDialogOpen}\r\n                activeItem={activeItem}\r\n                activeModuleId={activeModuleId}\r\n                isEditMode={isEditMode}\r\n                isPreviewMode={isPreviewMode}\r\n                showPublishConfirmation={showPublishConfirmation}\r\n                dialogTitleRef={dialogTitleRef}\r\n                dialogContentRef={dialogContentRef}\r\n                onClose={closeDialog}\r\n                onPublishConfirm={handleConfirmPublish}\r\n                onPublishCancel={handleCancelPublish}\r\n                onSetShowPublishConfirmation={setShowPublishConfirmation}\r\n                onSaveItem={saveItem}\r\n                onCancelEditMode={cancelEditMode}\r\n                onEnableEditMode={enableEditMode}\r\n                onQuizContentChange={handleQuizContentChange}\r\n                focusEditor={focusEditor}\r\n                schoolId={schoolId}\r\n                courseId={courseId}\r\n            />\r\n\r\n            {/* Module deletion confirmation dialog */}\r\n            < ConfirmationDialog\r\n                open={moduleToDelete !== null\r\n                }\r\n                title=\"Are you sure you want to delete this module?\"\r\n                message=\"All tasks within this module will be permanently removed. This action cannot be undone.\"\r\n                confirmButtonText=\"Delete\"\r\n                onConfirm={handleConfirmModuleDelete}\r\n                onCancel={handleCancelModuleDelete}\r\n                type=\"delete\"\r\n                data-testid=\"module-delete-dialog\"\r\n            />\r\n\r\n            {/* Task deletion confirmation dialog */}\r\n            {\r\n                taskToDelete && (\r\n                    <ConfirmationDialog\r\n                        open={taskToDelete !== null}\r\n                        title={`Are you sure you want to delete this ${getItemTypeName(taskToDelete.itemType)}?`}\r\n                        message={`This ${getItemTypeName(taskToDelete.itemType)} will be permanently removed. This action cannot be undone.`}\r\n                        confirmButtonText={`Delete`}\r\n                        onConfirm={handleConfirmTaskDelete}\r\n                        onCancel={handleCancelTaskDelete}\r\n                        type=\"delete\"\r\n                        data-testid=\"task-delete-dialog\"\r\n                    />\r\n                )\r\n            }\r\n        </>\r\n    );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3098, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/CoursePublishSuccessBanner.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Copy, Check } from 'lucide-react';\r\n\r\ninterface CoursePublishSuccessBannerProps {\r\n    isOpen: boolean;\r\n    onClose: () => void;\r\n    cohortId: number | null;\r\n    cohortName: string;\r\n    schoolId: string;\r\n    schoolSlug: string;\r\n    courseCount?: number;\r\n    courseNames?: string[];\r\n    // Source indicates where the banner was triggered from\r\n    source?: 'course' | 'cohort';\r\n}\r\n\r\nconst CoursePublishSuccessBanner: React.FC<CoursePublishSuccessBannerProps> = ({\r\n    isOpen,\r\n    onClose,\r\n    cohortId,\r\n    cohortName,\r\n    schoolId,\r\n    schoolSlug,\r\n    courseCount = 0,\r\n    courseNames = [],\r\n    source = 'course' // Default to course page as the source\r\n}) => {\r\n    const [isCopied, setIsCopied] = useState(false);\r\n\r\n    if (!isOpen) return null;\r\n\r\n    // Determine message based on source\r\n    const isCohortSource = source === 'cohort';\r\n    const title = isCohortSource\r\n        ? \"Courses are now live\"\r\n        : \"Your course is now live\";\r\n    const description = isCohortSource\r\n        ? (\r\n            <>\r\n                Learners added to this cohort can see {courseCount === 1 ? \"this course\" : \"these courses\"} now. Either add them manually from the <strong>Learners</strong> tab or send them an invite link.\r\n            </>\r\n        )\r\n        : (\r\n            <>\r\n                Learners added to this cohort can see this course now. Either add them manually from the{' '}\r\n                <a\r\n                    href={`/school/admin/${schoolId}/cohorts/${cohortId}`}\r\n                    className=\"text-blue-600 hover:text-blue-800\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                >\r\n                    cohort admin dashboard\r\n                </a>{' '}\r\n                or send them an invite link.\r\n            </>\r\n        );\r\n\r\n    // Generate the invite link\r\n    const inviteLink = `${window.location.origin}/school/${schoolSlug}/join?cohortId=${cohortId}`;\r\n\r\n    const handleCopyInviteLink = async () => {\r\n        try {\r\n            await navigator.clipboard.writeText(inviteLink);\r\n            setIsCopied(true);\r\n\r\n            // Reset the copied state after 2 seconds\r\n            setTimeout(() => {\r\n                setIsCopied(false);\r\n            }, 2000);\r\n        } catch (error) {\r\n            console.error('Failed to copy to clipboard:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div data-testid=\"course-publish-success-banner\" className=\"fixed inset-0 flex items-center justify-center z-50\">\r\n            <div className=\"absolute inset-0 bg-black bg-opacity-90\"></div>\r\n\r\n            {/* Main Modal Container */}\r\n            <div className=\"relative z-10 flex w-[600px] max-w-[90vw] h-[400px] max-h-[90vh] overflow-hidden\">\r\n\r\n                {/* Left panel - Icon */}\r\n                <div className=\"w-1/3 bg-black flex flex-col items-center justify-center relative overflow-hidden\">\r\n                    {/* Subtle animated background */}\r\n                    <div className=\"absolute inset-0 opacity-10\">\r\n                        <div className=\"absolute top-0 left-0 w-full h-full\">\r\n                            <svg viewBox=\"0 0 200 200\" xmlns=\"http://www.w3.org/2000/svg\" className=\"w-full h-full opacity-30\">\r\n                                <path fill=\"#FFFFFF\" d=\"M40,-65.9C53.2,-60.1,66.3,-52.7,73.7,-41.4C81.2,-30.1,83,-14.9,81.9,-0.6C80.8,13.6,76.9,27.1,69.5,39.3C62.1,51.5,51.2,62.2,38.5,67.5C25.8,72.8,11.3,72.6,-2.5,76.2C-16.3,79.8,-29.9,87.3,-41.9,85.3C-53.9,83.3,-64.3,71.9,-71.2,58.8C-78.2,45.7,-81.8,30.8,-82.9,16C-84,1.2,-82.5,-13.5,-76.8,-25.9C-71.1,-38.2,-61.2,-48.1,-49.2,-54.5C-37.2,-60.9,-23.1,-63.8,-8.9,-69.1C5.3,-74.4,26.8,-71.8,40,-65.9Z\" transform=\"translate(100 100)\" style={{ animation: \"morphBackground 30s infinite alternate-reverse\" }} />\r\n                            </svg>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Checkmark with ripple effect */}\r\n                    <div className=\"relative z-10\">\r\n                        <div className=\"w-20 h-20 rounded-full border-2 border-white flex items-center justify-center mb-6 relative\">\r\n                            <svg width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M20 6L9 17L4 12\" stroke=\"white\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                            </svg>\r\n\r\n                            {/* Ripple effect */}\r\n                            <div className=\"absolute w-full h-full rounded-full border border-white opacity-0 animate-ripple\"></div>\r\n                            <div className=\"absolute w-full h-full rounded-full border border-white opacity-0 animate-ripple\" style={{ animationDelay: '1s' }}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Right panel - Text */}\r\n                <div className=\"w-2/3 bg-white flex flex-col justify-between p-12\">\r\n                    <div className=\"mb-auto\">\r\n                        <h2 className=\"text-3xl font-light text-black mb-6 animate-slideUp\">{title}</h2>\r\n\r\n                        <div className=\"pl-3 border-l-2 border-gray-200 animate-slideUp\" style={{ animationDelay: '0.2s' }}>\r\n                            <p className=\"text-gray-600 text-sm\">\r\n                                {description}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Buttons */}\r\n                    <div className=\"space-y-3 animate-fadeIn\" style={{ animationDelay: '0.5s' }}>\r\n                        {/* Copy Invite Link Button */}\r\n                        <button\r\n                            onClick={handleCopyInviteLink}\r\n                            className={`w-full py-3 border font-medium rounded-md transition-colors duration-300 cursor-pointer group flex items-center justify-center ${isCopied\r\n                                ? 'border-green-300 text-green-700 bg-green-50'\r\n                                : 'border-gray-300 text-gray-700 hover:bg-gray-50'\r\n                                }`}\r\n                        >\r\n                            {isCopied ? (\r\n                                <>\r\n                                    <Check size={16} className=\"mr-2\" />\r\n                                    Copied\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <Copy size={16} className=\"mr-2\" />\r\n                                    Copy invite link\r\n                                </>\r\n                            )}\r\n                        </button>\r\n\r\n                        {/* Back Button */}\r\n                        <button\r\n                            onClick={onClose}\r\n                            className=\"w-full py-3 border border-black text-black font-medium rounded-md hover:bg-black hover:text-white transition-colors duration-300 cursor-pointer group\"\r\n                        >\r\n                            {isCohortSource ? \"Back to Cohort\" : \"Back to Course\"}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Animations */}\r\n            <style jsx>{`\r\n                @keyframes ripple {\r\n                    0% {\r\n                        transform: scale(1);\r\n                        opacity: 0.8;\r\n                    }\r\n                    100% {\r\n                        transform: scale(1.5);\r\n                        opacity: 0;\r\n                    }\r\n                }\r\n                \r\n                @keyframes fadeIn {\r\n                    0% {\r\n                        opacity: 0;\r\n                    }\r\n                    100% {\r\n                        opacity: 1;\r\n                    }\r\n                }\r\n                \r\n                @keyframes slideUp {\r\n                    0% {\r\n                        opacity: 0;\r\n                        transform: translateY(20px);\r\n                    }\r\n                    100% {\r\n                        opacity: 1;\r\n                        transform: translateY(0);\r\n                    }\r\n                }\r\n                \r\n                @keyframes morphBackground {\r\n                    0% {\r\n                        d: path(\"M40,-65.9C53.2,-60.1,66.3,-52.7,73.7,-41.4C81.2,-30.1,83,-14.9,81.9,-0.6C80.8,13.6,76.9,27.1,69.5,39.3C62.1,51.5,51.2,62.2,38.5,67.5C25.8,72.8,11.3,72.6,-2.5,76.2C-16.3,79.8,-29.9,87.3,-41.9,85.3C-53.9,83.3,-64.3,71.9,-71.2,58.8C-78.2,45.7,-81.8,30.8,-82.9,16C-84,1.2,-82.5,-13.5,-76.8,-25.9C-71.1,-38.2,-61.2,-48.1,-49.2,-54.5C-37.2,-60.9,-23.1,-63.8,-8.9,-69.1C5.3,-74.4,26.8,-71.8,40,-65.9Z\");\r\n                    }\r\n                    50% {\r\n                        d: path(\"M44.1,-76.5C56.3,-69.5,64.9,-54.3,70.6,-39.1C76.3,-23.9,79.2,-8.8,77.7,5.9C76.2,20.6,70.3,34.9,61.3,46.3C52.3,57.8,40.2,66.5,26.3,71.6C12.5,76.8,-3.1,78.5,-17.1,75.1C-31.1,71.7,-43.6,63.2,-54.1,52.2C-64.7,41.2,-73.2,27.5,-75.3,12.8C-77.4,-1.9,-73,-17.8,-65.7,-31.7C-58.4,-45.5,-48.2,-57.4,-36.1,-64.2C-24,-71,-12,-72.9,2.2,-76.5C16.3,-80,32.6,-85.2,44.1,-76.5Z\");\r\n                    }\r\n                    100% {\r\n                        d: path(\"M38.5,-64.9C47.6,-59,51.2,-42.5,59.3,-28C67.4,-13.5,80.1,-1,78.9,10.1C77.6,21.1,62.5,30.7,50.3,40.9C38.1,51.2,28.9,62.1,16.5,69.1C4.1,76,-11.5,79,-24,74.5C-36.5,69.9,-45.9,57.9,-52.9,45.6C-59.9,33.3,-64.5,20.7,-67.6,7.1C-70.7,-6.5,-72.2,-21.1,-67.2,-33.5C-62.1,-45.9,-50.5,-56.2,-37.5,-59.8C-24.6,-63.3,-10.3,-60.1,2.7,-64.7C15.8,-69.3,29.5,-81.8,38.5,-64.9Z\");\r\n                    }\r\n                }\r\n                \r\n                .animate-ripple {\r\n                    animation: ripple 2s ease-out infinite;\r\n                }\r\n                \r\n                .animate-fadeIn {\r\n                    animation: fadeIn 0.8s ease-out forwards;\r\n                }\r\n                \r\n                .animate-slideUp {\r\n                    animation: slideUp 0.8s ease-out forwards;\r\n                }\r\n            `}</style>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CoursePublishSuccessBanner; "],"names":[],"mappings":";;;;;AAAA;AACA;AAAA;;;;;;AAeA,MAAM,6BAAwE;QAAC,EAC3E,MAAM,EACN,OAAO,EACP,QAAQ,EACR,UAAU,EACV,QAAQ,EACR,UAAU,EACV,cAAc,CAAC,EACf,cAAc,EAAE,EAChB,SAAS,SAAS,uCAAuC;IAAxC,EACpB;;IACG,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,4QAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,IAAI,CAAC,QAAQ,OAAO;IAEpB,oCAAoC;IACpC,MAAM,iBAAiB,WAAW;IAClC,MAAM,QAAQ,iBACR,yBACA;IACN,MAAM,cAAc,+BAEZ;;YAAE;YACyC,gBAAgB,IAAI,gBAAgB;YAAgB;0BAAwC,4SAAC;0BAAO;;;;;;YAAiB;;qCAIhK;;YAAE;YAC2F;0BACzF,4SAAC;gBACG,MAAM,AAAC,iBAAoC,OAApB,UAAS,aAAoB,OAAT;gBAC3C,WAAU;gBACV,QAAO;gBACP,KAAI;0BACP;;;;;;YAEI;YAAI;;;IAKrB,2BAA2B;IAC3B,MAAM,aAAa,AAAC,GAAmC,OAAjC,OAAO,QAAQ,CAAC,MAAM,EAAC,YAAsC,OAA5B,YAAW,mBAA0B,OAAT;IAEnF,MAAM,uBAAuB;QACzB,IAAI;YACA,MAAM,UAAU,SAAS,CAAC,SAAS,CAAC;YACpC,YAAY;YAEZ,yCAAyC;YACzC,WAAW;gBACP,YAAY;YAChB,GAAG;QACP,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,gCAAgC;QAClD;IACJ;IAEA,qBACI,4SAAC;QAAI,eAAY;kDAA0C;;0BACvD,4SAAC;0DAAc;;;;;;0BAGf,4SAAC;0DAAc;;kCAGX,4SAAC;kEAAc;;0CAEX,4SAAC;0EAAc;0CACX,cAAA,4SAAC;8EAAc;8CACX,cAAA,4SAAC;wCAAI,SAAQ;wCAAc,OAAM;kFAAuC;kDACpE,cAAA,4SAAC;4CAAK,MAAK;4CAAU,GAAE;4CAA4Y,WAAU;4CAAqB,OAAO;gDAAE,WAAW;4CAAiD;;;;;;;;;;;;;;;;;;;;;;0CAMnhB,4SAAC;0EAAc;0CACX,cAAA,4SAAC;8EAAc;;sDACX,4SAAC;4CAAI,OAAM;4CAAK,QAAO;4CAAK,SAAQ;4CAAY,MAAK;4CAAO,OAAM;;sDAC9D,cAAA,4SAAC;gDAAK,GAAE;gDAAkB,QAAO;gDAAQ,aAAY;gDAAI,eAAc;gDAAQ,gBAAe;;;;;;;;;;;;sDAIlG,4SAAC;sFAAc;;;;;;sDACf,4SAAC;4CAAiG,OAAO;gDAAE,gBAAgB;4CAAK;sFAAjH;;;;;;;;;;;;;;;;;;;;;;;kCAM3B,4SAAC;kEAAc;;0CACX,4SAAC;0EAAc;;kDACX,4SAAC;kFAAa;kDAAuD;;;;;;kDAErE,4SAAC;wCAAgE,OAAO;4CAAE,gBAAgB;wCAAO;kFAAlF;kDACX,cAAA,4SAAC;sFAAY;sDACR;;;;;;;;;;;;;;;;;0CAMb,4SAAC;gCAAyC,OAAO;oCAAE,gBAAgB;gCAAO;0EAA3D;;kDAEX,4SAAC;wCACG,SAAS;kFACE,AAAC,kIAGP,OAHwI,WACvI,gDACA;kDAGL,yBACG;;8DACI,4SAAC,2RAAA,CAAA,QAAK;oDAAC,MAAM;oDAAI,WAAU;;;;;;gDAAS;;yEAIxC;;8DACI,4SAAC,yRAAA,CAAA,OAAI;oDAAC,MAAM;oDAAI,WAAU;;;;;;gDAAS;;;;;;;;kDAO/C,4SAAC;wCACG,SAAS;kFACC;kDAET,iBAAiB,mBAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEjE;GAnMM;KAAA;uCAqMS","debugId":null}},
    {"offset": {"line": 3412, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/DripPublishingConfig.tsx"],"sourcesContent":["import { useState, useEffect, forwardRef, useImperativeHandle } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { DripConfig } from \"@/types/course\";\r\nimport Toast from './Toast';\r\n\r\ninterface DripPublishingConfigProps {\r\n    onConfigChange?: (config: DripConfig | undefined) => void;\r\n}\r\n\r\nexport interface DripPublishingConfigRef {\r\n    validateDripConfig: () => string | null;\r\n}\r\n\r\n// Time units for frequency selection\r\nconst TIME_UNITS = [\r\n    'minute',\r\n    'hour', \r\n    'day',\r\n    'week',\r\n    'month',\r\n    'year'\r\n];\r\n\r\nconst DripPublishingConfig = forwardRef<DripPublishingConfigRef, DripPublishingConfigProps>(({\r\n    onConfigChange,\r\n}, ref) => {\r\n    const [isDripEnabled, setIsDripEnabled] = useState(false);\r\n    const [frequencyValue, setFrequencyValue] = useState(1);\r\n    const [frequencyUnit, setFrequencyUnit] = useState('day');\r\n    const [isReleaseDateEnabled, setIsReleaseDateEnabled] = useState(false);\r\n    const [publishDate, setPublishDate] = useState<Date | null>(null);\r\n    const [toast, setToast] = useState({\r\n        show: false,\r\n        title: '',\r\n        description: '',\r\n        emoji: ''\r\n    });\r\n\r\n    // Notify parent of config changes without validation\r\n    useEffect(() => {\r\n        if (onConfigChange) {\r\n            const config = isDripEnabled ? {\r\n                is_drip_enabled: true,\r\n                frequency_value: frequencyValue,\r\n                frequency_unit: frequencyUnit,\r\n                publish_at: isReleaseDateEnabled && publishDate ? publishDate : null\r\n            } : undefined;\r\n\r\n            onConfigChange(config);\r\n        }\r\n    }, [isDripEnabled, frequencyValue, frequencyUnit, isReleaseDateEnabled, publishDate]);\r\n\r\n    const handleValidationError = (error: string) => {\r\n        setToast({\r\n            show: true,\r\n            title: 'Invalid publish settings',\r\n            description: error,\r\n            emoji: '❌'\r\n        });\r\n\r\n        setTimeout(() => {\r\n            setToast(prev => ({ ...prev, show: false }));\r\n        }, 4000);\r\n    };\r\n\r\n    const handleCloseToast = () => {\r\n        setToast(prev => ({ ...prev, show: false }));\r\n    };\r\n\r\n    // Expose validation function to parent\r\n    useImperativeHandle(ref, () => ({\r\n        validateDripConfig: () => {\r\n            if (isDripEnabled) {\r\n                if (!frequencyValue || frequencyValue < 1) {\r\n                    const error = 'Please enter a valid value for the release schedule';\r\n                    handleValidationError(error);\r\n                    return error;\r\n                }\r\n                if (!frequencyUnit) {\r\n                    const error = 'Please enter a valid unit for the release schedule';\r\n                    handleValidationError(error);\r\n                    return error;\r\n                }\r\n                if (isReleaseDateEnabled && !publishDate) {\r\n                    const error = 'Please select a release date and time';\r\n                    handleValidationError(error);\r\n                    return error;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <div className=\"p-4 border-t border-gray-800 bg-[#23282d] rounded-lg\">\r\n                {/* Pill Toggle for Drip Publishing */}\r\n                <div className={`flex items-center ${isDripEnabled ? 'mb-4' : ''}`}>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        id=\"drip-enabled\"\r\n                        checked={isDripEnabled}\r\n                        onChange={(e) => setIsDripEnabled(e.target.checked)}\r\n                        className=\"mr-3 h-4 w-4 cursor-pointer bg-[#181818] border-gray-600 rounded focus:ring-2 focus:ring-[#016037] focus:ring-offset-0 checked:bg-[#016037] checked:border-[#016037] transition-colors\"\r\n                    />\r\n                    <label htmlFor=\"drip-enabled\" className=\"text-white text-sm font-light cursor-pointer select-none\">\r\n                        Release modules gradually using a drip schedule\r\n                    </label>\r\n                </div>\r\n\r\n                {isDripEnabled && (\r\n                    <div className=\"space-y-4\">\r\n                        {/* Frequency Row: Every [number] [unit] */}\r\n                        <div className=\"flex items-center space-x-2\">\r\n                            <span className=\"text-white text-sm font-light select-none\">Every</span>\r\n                            <input\r\n                                type=\"number\"\r\n                                min=\"1\"\r\n                                value={frequencyValue || ''}\r\n                                onChange={e => setFrequencyValue(Number(e.target.value))}\r\n                                placeholder=\"1\"\r\n                                className=\"w-20 p-2 bg-[#181818] text-white text-sm font-light px-3 rounded-md border-0 focus:ring-2 focus:ring-[#016037] transition-all outline-none appearance-none text-center\"\r\n                            />\r\n                            <select\r\n                                value={frequencyUnit || 'day'}\r\n                                onChange={e => setFrequencyUnit(e.target.value)}\r\n                                className=\"w-32 p-2 bg-[#181818] text-white text-sm font-light px-4 rounded-md border-0 focus:ring-2 focus:ring-[#016037] transition-all outline-none appearance-none\"\r\n                            >\r\n                                <option value=\"\" disabled>Select unit</option>\r\n                                {TIME_UNITS.map(unit => (\r\n                                    <option key={unit} value={unit}>{unit}{frequencyValue <= 1 ? '' : 's'}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className={`flex items-center ${isReleaseDateEnabled ? 'mb-4' : ''}`}>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                id=\"release-date-enabled\"\r\n                                checked={isReleaseDateEnabled}\r\n                                onChange={(e) => setIsReleaseDateEnabled(e.target.checked)}\r\n                                className=\"mr-3 h-4 w-4 cursor-pointer bg-[#181818] border-gray-600 rounded focus:ring-2 focus:ring-[#016037] focus:ring-offset-0 checked:bg-[#016037] checked:border-[#016037] transition-colors\"\r\n                            />\r\n                            <label htmlFor=\"release-date-enabled\" className=\"text-white text-sm font-light cursor-pointer select-none\">\r\n                                Set a specific start date and time\r\n                            </label>\r\n                        </div>\r\n\r\n                        {/* Combined Date and Time Picker */}\r\n                        {isReleaseDateEnabled && (\r\n                            <div>\r\n                                <label className=\"block text-sm text-gray-300 font-light mb-1\">Release date & time</label>\r\n                                <DatePicker\r\n                                    selected={publishDate}\r\n                                    onChange={(date) => setPublishDate(date)}\r\n                                    showTimeSelect\r\n                                    timeFormat=\"HH:mm\"\r\n                                    timeIntervals={15}\r\n                                    dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                                    timeCaption=\"Time\"\r\n                                    minDate={new Date()}\r\n                                    placeholderText=\"Select release date and time\"\r\n                                    className=\"bg-[#181818] rounded-md p-2 px-4 w-full text-sm text-white cursor-pointer\"\r\n                                    wrapperClassName=\"w-full\"\r\n                                    calendarClassName=\"bg-[#242424] text-white border border-gray-700 rounded-lg shadow-lg cursor-pointer\"\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Toast notification */}\r\n            <Toast\r\n                show={toast.show}\r\n                title={toast.title}\r\n                description={toast.description}\r\n                emoji={toast.emoji}\r\n                onClose={handleCloseToast}\r\n            />\r\n        </>\r\n    );\r\n});\r\n\r\nDripPublishingConfig.displayName = 'DripPublishingConfig';\r\n\r\nexport default DripPublishingConfig; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3716, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/CourseCohortSelectionDialog.tsx"],"sourcesContent":["import { useRef, useState, useEffect } from 'react';\r\nimport { X, Check } from 'lucide-react';\r\nimport Link from 'next/link';\r\nimport CreateCohortDialog from './CreateCohortDialog';\r\nimport DripPublishingConfig, { DripPublishingConfigRef } from './DripPublishingConfig';\r\nimport { DripConfig } from '@/types/course';\r\n\r\n// Define interface for CourseCohortSelectionDialog props\r\ninterface CourseCohortSelectionDialogProps {\r\n    isOpen: boolean;\r\n    onClose: () => void;\r\n    originButtonRef: React.RefObject<HTMLButtonElement | null>;\r\n    isPublishing: boolean;\r\n    onConfirm: () => void;\r\n    showLoading: boolean;\r\n    hasError: boolean;\r\n    errorMessage: string;\r\n    onRetry: () => void;\r\n    cohorts: any[]; // Using any[] for consistency with existing cohorts state\r\n    selectedCohort: any | null; // Changed from tempSelectedCohorts to single selection\r\n    onSelectCohort: (cohort: any) => void;\r\n    onSearchChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    searchQuery: string;\r\n    filteredCohorts: any[];\r\n    totalSchoolCohorts: number;\r\n    schoolId: string;\r\n    courseId?: string; // Add courseId for linking the new cohort\r\n    onCohortCreated?: (cohort: any) => void; // Callback when a cohort is created and linked\r\n    onOpenCreateCohortDialog: () => void; // New callback to open the CreateCohortDialog\r\n    onAutoCreateAndPublish: () => void; // New callback for auto-creating cohort and publishing\r\n    onDripConfigChange: (config: DripConfig | undefined) => void;\r\n}\r\n\r\n// Add CohortSelectionDialog component\r\nexport const CourseCohortSelectionDialog = ({\r\n    isOpen,\r\n    onClose,\r\n    originButtonRef,\r\n    isPublishing,\r\n    onConfirm,\r\n    showLoading,\r\n    hasError,\r\n    errorMessage,\r\n    onRetry,\r\n    cohorts,\r\n    selectedCohort,\r\n    onSelectCohort,\r\n    onSearchChange,\r\n    searchQuery,\r\n    filteredCohorts,\r\n    totalSchoolCohorts,\r\n    schoolId,\r\n    courseId,\r\n    onCohortCreated,\r\n    onOpenCreateCohortDialog,\r\n    onAutoCreateAndPublish,\r\n    onDripConfigChange,\r\n}: CourseCohortSelectionDialogProps) => {\r\n    const dropdownRef = useRef<HTMLDivElement>(null);\r\n    const dripConfigRef = useRef<DripPublishingConfigRef>(null);\r\n    const [position, setPosition] = useState({ top: 0, left: 0 });\r\n    \r\n    // Calculate position when button or isOpen changes\r\n    useEffect(() => {\r\n        const updatePosition = () => {\r\n            if (isOpen && originButtonRef.current && dropdownRef.current) {\r\n                const buttonRect = originButtonRef.current.getBoundingClientRect();\r\n                const windowWidth = window.innerWidth;\r\n\r\n                // Position dropdown below button\r\n                // Use viewport-relative position (since fixed positioning is relative to viewport)\r\n                const top = buttonRect.bottom;\r\n\r\n                // Calculate left position to avoid going off-screen\r\n                // Default to aligning with left edge of button\r\n                let left = buttonRect.left;\r\n\r\n                // If dropdown would go off right edge, align with right edge of button instead\r\n                const dropdownWidth = 400; // Width of dropdown from CSS\r\n                if (left + dropdownWidth > windowWidth) {\r\n                    left = buttonRect.right - dropdownWidth;\r\n                }\r\n\r\n                // Apply the new position directly to the DOM element for immediate effect\r\n                setPosition({ top, left });\r\n            }\r\n        };\r\n\r\n        // Initial position update\r\n        updatePosition();\r\n\r\n        // Add scroll and resize event listeners\r\n        if (isOpen) {\r\n            window.addEventListener('scroll', updatePosition, { passive: true });\r\n            window.addEventListener('resize', updatePosition, { passive: true });\r\n            // Add a more frequent position update for smoother following during scrolling\r\n            const intervalId = setInterval(updatePosition, 16); // ~60fps\r\n\r\n            return () => {\r\n                window.removeEventListener('scroll', updatePosition);\r\n                window.removeEventListener('resize', updatePosition);\r\n                clearInterval(intervalId);\r\n            };\r\n        }\r\n\r\n        return undefined;\r\n    }, [isOpen, originButtonRef, dropdownRef]);\r\n\r\n    // Handle clicks outside of the dropdown\r\n    useEffect(() => {\r\n        function handleClickOutside(event: MouseEvent) {\r\n            const target = event.target as Node;\r\n\r\n            if (dropdownRef.current &&\r\n                !dropdownRef.current.contains(target) &&\r\n                !(target as Element).closest('[data-dropdown-toggle=\"true\"]')) {\r\n                onClose();\r\n            }\r\n        }\r\n\r\n        if (isOpen) {\r\n            document.addEventListener(\"mousedown\", handleClickOutside);\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [isOpen, onClose]);\r\n\r\n    // Update the click handler to use the new callback\r\n    const handleCreateCohortClick = (e: React.MouseEvent) => {\r\n        e.preventDefault();\r\n        onOpenCreateCohortDialog();\r\n    };\r\n\r\n    const handleConfirm = () => {\r\n        // Validate drip config if publishing and drip config is enabled\r\n        if (isPublishing && dripConfigRef.current) {\r\n            const dripError = dripConfigRef.current.validateDripConfig();\r\n            if (dripError) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        onConfirm();\r\n    };\r\n\r\n    if (!isOpen) return null;\r\n\r\n    const buttonText = isPublishing\r\n        ? showLoading\r\n            ? \"Publishing...\"\r\n            : \"Publish course to selected cohort\"\r\n        : showLoading\r\n            ? \"Adding...\"\r\n            : \"Add course to selected cohort\";\r\n\r\n    return (\r\n        <div\r\n            ref={dropdownRef}\r\n            className=\"fixed z-50 py-2 w-[400px] bg-[#1A1A1A] rounded-lg shadow-xl\"\r\n            onClick={(e) => e.stopPropagation()}\r\n            style={{\r\n                top: `${position.top}px`,\r\n                left: `${position.left}px`,\r\n                position: 'fixed',\r\n            }}\r\n        >\r\n            <div className=\"p-4 pb-2\">\r\n                {/* Add label at the top */}\r\n                <h3 className=\"text-white text-sm font-light mb-3\">Select the cohort of learners to share this course with</h3>\r\n\r\n                {/* Only show search when not loading */}\r\n                {!showLoading && (\r\n                    <>\r\n                        {/* Only show search when there are available cohorts */}\r\n                        {!hasError && cohorts.length > 0 && (\r\n                            <div className=\"relative\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Search for a cohort\"\r\n                                    className=\"w-full bg-[#111] rounded-md px-3 py-2 text-white\"\r\n                                    value={searchQuery}\r\n                                    onChange={onSearchChange}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </div>\r\n\r\n            {showLoading ? (\r\n                <div className=\"flex justify-center items-center py-6\">\r\n                    <div className=\"w-8 h-8 border-2 border-t-green-500 border-r-green-500 border-b-transparent border-l-transparent rounded-full animate-spin\" data-testid=\"loading-spinner\"></div>\r\n                </div>\r\n            ) : hasError ? (\r\n                <div className=\"p-4 text-center\">\r\n                    <p className=\"text-red-400 mb-2\">{errorMessage}</p>\r\n                    <button\r\n                        className=\"text-green-400 hover:text-green-300 cursor-pointer\"\r\n                        onClick={onRetry}\r\n                    >\r\n                        Try again\r\n                    </button>\r\n                </div>\r\n            ) : filteredCohorts.length === 0 ? (\r\n                <div className=\"p-4 text-center\">\r\n                    {totalSchoolCohorts === 0 ? (\r\n                        // School has no cohorts at all\r\n                        <>\r\n                            <h3 className=\"text-lg text-white font-light mb-1\">No cohorts available</h3>\r\n                            <p className=\"text-gray-400 text-sm\">Create cohorts in your school that you can publish courses to</p>\r\n                            <button\r\n                                onClick={handleCreateCohortClick}\r\n                                className=\"mt-4 inline-block px-4 py-2 text-sm bg-white text-black rounded-full hover:opacity-90 transition-opacity cursor-pointer\"\r\n                            >\r\n                                Create cohort\r\n                            </button>\r\n                        </>\r\n                    ) : totalSchoolCohorts > 0 && cohorts.length === 0 ? (\r\n                        // All cohorts have been assigned to the course already\r\n                        <>\r\n                            <h3 className=\"text-lg text-white font-light mb-1\">All cohorts assigned</h3>\r\n                            <p className=\"text-gray-400 text-sm\">All available cohorts are already assigned to this course</p>\r\n                            <button\r\n                                onClick={onAutoCreateAndPublish}\r\n                                className=\"mt-4 inline-block px-4 py-2 text-sm bg-white text-black rounded-full hover:opacity-90 transition-opacity cursor-pointer\"\r\n                            >\r\n                                Make a new cohort\r\n                            </button>\r\n                        </>\r\n                    ) : (\r\n                        // Search returned no results\r\n                        <>\r\n                            <h3 className=\"text-lg text-white font-light mb-1\">No matching cohorts</h3>\r\n                            <p className=\"text-gray-400 text-sm\">Try a different search term</p>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    {/* Scrollable cohorts list - limited to height of ~4 cohorts */}\r\n                    <div className=\"max-h-[10rem] overflow-y-auto py-2 px-4\">\r\n                        <div className=\"space-y-0.5\">\r\n                            {filteredCohorts.map(cohort => {\r\n                                const isSelected = selectedCohort && selectedCohort.id === cohort.id;\r\n                                return (\r\n                                    <div\r\n                                        key={cohort.id}\r\n                                        className={`flex items-center px-3 py-1.5 hover:bg-[#222] rounded-md cursor-pointer ${isSelected ? 'bg-[#222]' : ''}`}\r\n                                        onClick={() => onSelectCohort(isSelected ? null : cohort)}\r\n                                    >\r\n                                        {isSelected && (\r\n                                            <div className=\"w-4 h-4 bg-green-600 rounded-sm flex items-center justify-center mr-2\">\r\n                                                <Check size={12} className=\"text-white\" />\r\n                                            </div>\r\n                                        )}\r\n                                        <p className=\"text-white text-sm font-light\">{cohort.name}</p>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Drip Publishing UI - Only show when publishing and a cohort is selected */}\r\n                    {isPublishing && selectedCohort && (\r\n                        <div className=\"px-4 py-2 space-y-2\">\r\n                            <DripPublishingConfig\r\n                                ref={dripConfigRef}\r\n                                onConfigChange={onDripConfigChange}\r\n                            />\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Buttons always visible at bottom */}\r\n                    <div className=\"px-4 pb-4 space-y-2\">\r\n                        <button\r\n                            className=\"w-full bg-[#016037] text-white py-3 rounded-full text-sm hover:bg-[#017045] transition-colors cursor-pointer disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                                        onClick={handleConfirm}\r\n                            disabled={showLoading || !selectedCohort}\r\n                        >\r\n                            {buttonText}\r\n                        </button>\r\n                        <button\r\n                            className=\"w-full bg-transparent border border-gray-600 text-white py-3 rounded-full text-sm hover:bg-[#222] transition-colors cursor-pointer\"\r\n                            onClick={onAutoCreateAndPublish}\r\n                            disabled={showLoading}\r\n                        >\r\n                            Make a new cohort\r\n                        </button>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4119, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/GenerateWithAIDialog.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useRef, Fragment, useEffect } from 'react';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport { X, Upload, File, ArrowLeft, ArrowRight, Check, AlertCircle } from 'lucide-react';\r\nimport { Document, Page } from 'react-pdf';\r\nimport { pdfjs } from 'react-pdf';\r\n\r\n// Set worker source using CDN (keeps the bundle smaller)\r\n// Only set this in non-test environments to avoid import.meta.url issues\r\nif (typeof window !== 'undefined' && process.env.NODE_ENV !== 'test') {\r\n    try {\r\n        pdfjs.GlobalWorkerOptions.workerSrc = new URL(\r\n            'pdfjs-dist/build/pdf.worker.min.mjs',\r\n            import.meta.url,\r\n        ).toString();\r\n    } catch (error) {\r\n        // Fallback for environments that don't support import.meta.url\r\n        console.warn('Could not set PDF worker source:', error);\r\n    }\r\n}\r\n\r\ninterface GenerateWithAIDialogProps {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    onSubmit: (data: GenerateWithAIFormData) => void;\r\n    validationError?: string | null;\r\n}\r\n\r\nexport interface GenerateWithAIFormData {\r\n    courseDescription: string;\r\n    intendedAudience: string;\r\n    referencePdf: File | null;\r\n    instructionsForAI: string;\r\n}\r\n\r\ntype Step = 'description' | 'audience' | 'reference' | 'instructions' | 'review';\r\n\r\ninterface FormErrors {\r\n    courseDescription?: string;\r\n    intendedAudience?: string;\r\n    referencePdf?: string;\r\n}\r\n\r\nexport default function GenerateWithAIDialog({ open, onClose, onSubmit, validationError }: GenerateWithAIDialogProps) {\r\n    const [formData, setFormData] = useState<GenerateWithAIFormData>({\r\n        courseDescription: '',\r\n        intendedAudience: '',\r\n        referencePdf: null,\r\n        instructionsForAI: ''\r\n    });\r\n\r\n    // Add form errors state\r\n    const [errors, setErrors] = useState<FormErrors>({});\r\n\r\n    // Track which step the user is currently on\r\n    const [currentStep, setCurrentStep] = useState<Step>('description');\r\n    const [fileName, setFileName] = useState<string>('');\r\n    const fileInputRef = useRef<HTMLInputElement>(null);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    // Add inside the component, after the existing state declarations\r\n    const [fileValidating, setFileValidating] = useState(false);\r\n    const [fileError, setFileError] = useState<string | null>(null);\r\n\r\n    // Reset state when dialog is opened\r\n    const resetState = () => {\r\n        setFormData({\r\n            courseDescription: '',\r\n            intendedAudience: '',\r\n            referencePdf: null,\r\n            instructionsForAI: ''\r\n        });\r\n        setFileName('');\r\n        setCurrentStep('description');\r\n        setIsSubmitting(false);\r\n        setErrors({});\r\n        setFileError(null)\r\n    };\r\n\r\n    const handleTextChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({ ...prev, [name]: value }));\r\n\r\n        // Clear error for this field when user types\r\n        if (errors[name as keyof FormErrors]) {\r\n            setErrors(prev => ({ ...prev, [name]: undefined }));\r\n        }\r\n    };\r\n\r\n\r\n    function onDocumentLoadSuccess({ numPages }: { numPages: number }): void {\r\n        setFileValidating(false);\r\n\r\n        if (numPages > 100) {\r\n            setFileError(`The PDF has too many pages (${numPages}). A maximum of 100 pages is supported at a time. Please upload a shorter document, or generate in multiple parts by uploading smaller sections.`);\r\n\r\n            // Optionally remove the file if it's invalid\r\n            removeFile();\r\n        } else {\r\n            console.log(`PDF validation passed: ${numPages} pages`);\r\n            // We're keeping the file since it's valid\r\n        }\r\n    }\r\n\r\n    const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const file = e.target.files?.[0] || null;\r\n        if (file) {\r\n            // Reset previous validation errors\r\n            setFileError(null);\r\n\r\n            // Check file type\r\n            if (file.type !== 'application/pdf') {\r\n                setErrors(prev => ({ ...prev, referencePdf: 'Please upload a PDF file' }));\r\n                return;\r\n            }\r\n\r\n            // Check file size (32MB = 32 * 1024 * 1024 bytes)\r\n            const maxSize = 32 * 1024 * 1024; // 32MB in bytes\r\n            if (file.size > maxSize) {\r\n                setFileError(\"PDF file is too large. Please upload a file smaller than 32MB, or generate in multiple parts by uploading smaller sections.\");\r\n                return;\r\n            }\r\n\r\n            // Start validating\r\n            setFileValidating(true);\r\n\r\n            // Update form data with the file - page count validation will happen separately\r\n            setFormData(prev => ({ ...prev, referencePdf: file }));\r\n            setFileName(file.name);\r\n\r\n            // Clear error if it exists\r\n            if (errors.referencePdf) {\r\n                setErrors(prev => ({ ...prev, referencePdf: undefined }));\r\n            }\r\n        }\r\n    };\r\n\r\n    const triggerFileInput = () => {\r\n        fileInputRef.current?.click();\r\n    };\r\n\r\n    const removeFile = () => {\r\n        setFormData(prev => ({ ...prev, referencePdf: null }));\r\n        setFileName('');\r\n        if (fileInputRef.current) {\r\n            fileInputRef.current.value = '';\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        setIsSubmitting(true);\r\n\r\n        try {\r\n            // Call onSubmit (handleGenerateCourse) but don't wait for it \r\n            // since it handles its own state management\r\n            onSubmit(formData);\r\n\r\n            // Immediately close the dialog and reset its state\r\n            resetState();\r\n            onClose();\r\n        } catch (error) {\r\n            console.error('Error generating course:', error);\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n\r\n    const validateCurrentStep = (): boolean => {\r\n        let isValid = true;\r\n        const newErrors: FormErrors = {};\r\n\r\n        if (currentStep === 'description') {\r\n            if (!formData.courseDescription.trim()) {\r\n                newErrors.courseDescription = 'Please describe what the course is about';\r\n                isValid = false;\r\n            }\r\n        }\r\n\r\n        if (currentStep === 'audience') {\r\n            if (!formData.intendedAudience.trim()) {\r\n                newErrors.intendedAudience = 'Please specify who this course is for';\r\n                isValid = false;\r\n            }\r\n        }\r\n\r\n        if (currentStep === 'reference') {\r\n            if (!formData.referencePdf) {\r\n                newErrors.referencePdf = 'Please upload a reference material';\r\n                isValid = false;\r\n            }\r\n        }\r\n\r\n        setErrors(newErrors);\r\n        return isValid;\r\n    };\r\n\r\n    const nextStep = () => {\r\n        // Validate current step before proceeding\r\n        if (!validateCurrentStep()) {\r\n            return;\r\n        }\r\n\r\n        // Move to next step based on current step\r\n        switch (currentStep) {\r\n            case 'description':\r\n                setCurrentStep('audience');\r\n                break;\r\n            case 'audience':\r\n                setCurrentStep('reference');\r\n                break;\r\n            case 'reference':\r\n                setCurrentStep('instructions');\r\n                break;\r\n            case 'instructions':\r\n                setCurrentStep('review');\r\n                break;\r\n            case 'review':\r\n                handleSubmit();\r\n                break;\r\n        }\r\n    };\r\n\r\n    const prevStep = () => {\r\n        // Clear errors when going back\r\n        setErrors({});\r\n\r\n        // Move to previous step based on current step\r\n        switch (currentStep) {\r\n            case 'audience':\r\n                setCurrentStep('description');\r\n                break;\r\n            case 'reference':\r\n                setCurrentStep('audience');\r\n                break;\r\n            case 'instructions':\r\n                setCurrentStep('reference');\r\n                break;\r\n            case 'review':\r\n                setCurrentStep('instructions');\r\n                break;\r\n        }\r\n    };\r\n\r\n    // Create a handler that completely ignores outside clicks\r\n    const handleDialogClose = () => {\r\n        resetState();\r\n        onClose();\r\n    };\r\n\r\n    // Simple no-op function that ignores all outside clicks\r\n    const noop = () => {\r\n        // Intentionally empty - this prevents the dialog from closing on outside clicks\r\n    };\r\n\r\n    // Get step heading and description based on current step\r\n    const getStepContent = () => {\r\n        switch (currentStep) {\r\n            case 'description':\r\n                return {\r\n                    heading: 'What is this course about?',\r\n                    description: 'Describe what the course is about, the topics to be covered, and the main learning objectives'\r\n                };\r\n            case 'audience':\r\n                return {\r\n                    heading: 'Who is this course for?',\r\n                    description: 'Describe who this course is for, their expected background and what they hope to achieve'\r\n                };\r\n            case 'reference':\r\n                return {\r\n                    heading: 'Upload reference material',\r\n                    description: 'Add a PDF file to be used as reference to generate your course'\r\n                };\r\n            case 'instructions':\r\n                return {\r\n                    heading: 'Instructions for AI (optional)',\r\n                    description: 'Provide any specific instructions for AI to keep in mind while generating your course. For example, the tone, style, and format of the course'\r\n                };\r\n            case 'review':\r\n                return {\r\n                    heading: 'Review and generate',\r\n                    description: 'Review your inputs before starting the course generation'\r\n                };\r\n        }\r\n    };\r\n\r\n    // Calculate progress percentage\r\n    const progressPercentage = (() => {\r\n        switch (currentStep) {\r\n            case 'description': return 20;\r\n            case 'audience': return 40;\r\n            case 'reference': return 60;\r\n            case 'instructions': return 80;\r\n            case 'review': return 100;\r\n        }\r\n    })();\r\n\r\n    const stepContent = getStepContent();\r\n\r\n    return (\r\n        <Transition appear show={open} as={Fragment}>\r\n            <Dialog\r\n                as=\"div\"\r\n                className=\"relative z-50\"\r\n                onClose={noop}\r\n            >\r\n                <Transition.Child\r\n                    as={Fragment}\r\n                    enter=\"ease-out duration-300\"\r\n                    enterFrom=\"opacity-0\"\r\n                    enterTo=\"opacity-100\"\r\n                    leave=\"ease-in duration-200\"\r\n                    leaveFrom=\"opacity-100\"\r\n                    leaveTo=\"opacity-0\"\r\n                >\r\n                    <div className=\"fixed inset-0 bg-black/70\" />\r\n                </Transition.Child>\r\n\r\n                <div className=\"fixed inset-0 overflow-y-auto\">\r\n                    <div className=\"flex min-h-full items-center justify-center p-4\">\r\n                        <Transition.Child\r\n                            as={Fragment}\r\n                            enter=\"ease-out duration-300\"\r\n                            enterFrom=\"opacity-0 scale-95\"\r\n                            enterTo=\"opacity-100 scale-100\"\r\n                            leave=\"ease-in duration-200\"\r\n                            leaveFrom=\"opacity-100 scale-100\"\r\n                            leaveTo=\"opacity-0 scale-95\"\r\n                        >\r\n                            <Dialog.Panel className=\"w-full max-w-lg transform overflow-hidden rounded-lg bg-[#1A1A1A] shadow-xl transition-all\">\r\n                                {/* Progress bar */}\r\n                                <div className=\"h-1 bg-gray-800 w-full\">\r\n                                    <div\r\n                                        className=\"h-full bg-white transition-all duration-300 ease-in-out\"\r\n                                        style={{ width: `${progressPercentage}%` }}\r\n                                    />\r\n                                </div>\r\n\r\n                                {/* Close button */}\r\n                                <button\r\n                                    onClick={handleDialogClose}\r\n                                    className=\"absolute top-4 right-4 text-gray-400 hover:text-white cursor-pointer\"\r\n                                    aria-label=\"Close\"\r\n                                >\r\n                                    <X size={20} />\r\n                                </button>\r\n\r\n                                <div className=\"p-6\">\r\n                                    <Dialog.Title\r\n                                        as=\"h3\"\r\n                                        className=\"text-2xl font-light text-white\"\r\n                                    >\r\n                                        {stepContent.heading}\r\n                                    </Dialog.Title>\r\n\r\n                                    <p className=\"text-gray-400 mt-2 mb-6\">\r\n                                        {stepContent.description}\r\n                                    </p>\r\n\r\n                                    {/* Description Step */}\r\n                                    {currentStep === 'description' && (\r\n                                        <div className=\"space-y-2\">\r\n                                            <textarea\r\n                                                id=\"courseDescription\"\r\n                                                name=\"courseDescription\"\r\n                                                value={formData.courseDescription}\r\n                                                onChange={handleTextChange}\r\n                                                placeholder=\"A comprehensive guide to personal finance for beginners, covering budgeting essentials, debt management, building credit, emergency funds, and basic investment principles for long-term financial stability.\"\r\n                                                className={`w-full h-32 px-4 py-3 bg-[#0D0D0D] text-white rounded-lg font-light placeholder-gray-500 outline-none ${errors.courseDescription ? 'border-2 border-red-500' : 'border-none'} focus:ring-2 focus:ring-white/20`}\r\n                                            />\r\n                                            {errors.courseDescription && (\r\n                                                <div className=\"flex items-center text-red-500 text-sm mt-1\">\r\n                                                    <AlertCircle size={14} className=\"mr-1\" />\r\n                                                    {errors.courseDescription}\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {/* Audience Step */}\r\n                                    {currentStep === 'audience' && (\r\n                                        <div className=\"space-y-2\">\r\n                                            <textarea\r\n                                                id=\"intendedAudience\"\r\n                                                name=\"intendedAudience\"\r\n                                                value={formData.intendedAudience}\r\n                                                onChange={handleTextChange}\r\n                                                placeholder=\"Recent graduates and young professionals starting their first full-time job, individuals with no prior financial education, or anyone looking to establish healthy financial habits and avoid common money mistakes in early career stages.\"\r\n                                                className={`w-full h-32 px-4 py-3 bg-[#0D0D0D] text-white rounded-lg font-light placeholder-gray-500 outline-none ${errors.intendedAudience ? 'border-2 border-red-500' : 'border-none'} focus:ring-2 focus:ring-white/20`}\r\n                                            />\r\n                                            {errors.intendedAudience && (\r\n                                                <div className=\"flex items-center text-red-500 text-sm mt-1\">\r\n                                                    <AlertCircle size={14} className=\"mr-1\" />\r\n                                                    {errors.intendedAudience}\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {/* Reference Material Step */}\r\n                                    {currentStep === 'reference' && (\r\n                                        <div className=\"space-y-2\">\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                ref={fileInputRef}\r\n                                                onChange={handleFileChange}\r\n                                                accept=\"application/pdf\"\r\n                                                className=\"hidden\"\r\n                                            />\r\n\r\n                                            {!fileName ? (\r\n                                                <div\r\n                                                    onClick={triggerFileInput}\r\n                                                    className={`flex items-center justify-center w-full h-36 px-4 py-3 bg-[#0A0A0A] rounded-lg cursor-pointer hover:bg-[#111] transition-colors ${(errors.referencePdf || fileError) ? 'border-2 border-red-500' : 'border border-dashed border-gray-600 hover:border-white'}`}\r\n                                                >\r\n                                                    <div className=\"flex flex-col items-center text-gray-400\">\r\n                                                        <Upload size={24} className=\"mb-2\" />\r\n                                                        <p className=\"text-sm\">Upload a PDF to use as reference material</p>\r\n                                                        <p className=\"text-xs mt-1\">Click or drag and drop</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <div className=\"flex items-center justify-between w-full px-4 py-4 bg-[#0A0A0A] border border-gray-700 rounded-lg\">\r\n                                                    <div className=\"flex items-center text-white\">\r\n                                                        {fileValidating ? (\r\n                                                            <div className=\"animate-spin mr-2 h-4 w-4 border-t-2 border-b-2 border-white rounded-full\"></div>\r\n                                                        ) : (\r\n                                                            <File size={20} className=\"mr-2\" />\r\n                                                        )}\r\n                                                        <span className=\"text-sm truncate max-w-xs\">\r\n                                                            {fileValidating ? \"Validating PDF...\" : fileName}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                    <button\r\n                                                        type=\"button\"\r\n                                                        onClick={removeFile}\r\n                                                        className=\"text-gray-400 hover:text-white cursor-pointer\"\r\n                                                        aria-label=\"Remove file\"\r\n                                                    >\r\n                                                        <X size={18} />\r\n                                                    </button>\r\n                                                </div>\r\n                                            )}\r\n\r\n                                            {(errors.referencePdf || fileError) && (\r\n                                                <div className=\"flex items-start text-red-500 text-sm mt-2\">\r\n                                                    <AlertCircle size={14} className=\"mr-1 mt-1 flex-shrink-0\" />\r\n                                                    <div>\r\n                                                        {fileError || errors.referencePdf}\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {/* Additional Instructions Step */}\r\n                                    {currentStep === 'instructions' && (\r\n                                        <div className=\"space-y-2\">\r\n                                            <textarea\r\n                                                id=\"instructionsForAI\"\r\n                                                name=\"instructionsForAI\"\r\n                                                value={formData.instructionsForAI}\r\n                                                onChange={handleTextChange}\r\n                                                placeholder=\"Focus on practical, actionable advice rather than theory. Include real-world examples and templates for budgeting. Structure the course for a 4-week learning period with small, achievable weekly goals.\"\r\n                                                className=\"w-full h-32 px-4 py-3 bg-[#0D0D0D] text-white rounded-lg font-light placeholder-gray-500 outline-none border-none focus:ring-2 focus:ring-white/20\"\r\n                                            />\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {/* Review Step */}\r\n                                    {currentStep === 'review' && (\r\n                                        <div className=\"space-y-6\">\r\n                                            <div className=\"space-y-3\">\r\n                                                <h4 className=\"text-white font-medium\">Course Description</h4>\r\n                                                <p className=\"text-gray-300 bg-[#0D0D0D] p-3 rounded-lg whitespace-pre-wrap\">{formData.courseDescription}</p>\r\n                                            </div>\r\n\r\n                                            <div className=\"space-y-3\">\r\n                                                <h4 className=\"text-white font-medium\">Intended Audience</h4>\r\n                                                <p className=\"text-gray-300 bg-[#0D0D0D] p-3 rounded-lg whitespace-pre-wrap\">{formData.intendedAudience}</p>\r\n                                            </div>\r\n\r\n                                            <div className=\"space-y-3\">\r\n                                                <h4 className=\"text-white font-medium\">Reference Material</h4>\r\n                                                <div className=\"flex items-center text-gray-300 bg-[#0D0D0D] p-3 rounded-lg\">\r\n                                                    <File size={16} className=\"mr-2\" />\r\n                                                    <span>{fileName}</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {formData.instructionsForAI && (\r\n                                                <div className=\"space-y-3\">\r\n                                                    <h4 className=\"text-white font-medium\">Instructions for AI</h4>\r\n                                                    <p className=\"text-gray-300 bg-[#0D0D0D] p-3 rounded-lg whitespace-pre-wrap\">{formData.instructionsForAI}</p>\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n\r\n                                {/* Step navigation buttons */}\r\n                                <div className=\"flex justify-between px-6 py-4 bg-[#111] border-t border-gray-800\">\r\n                                    {currentStep !== 'description' ? (\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            onClick={prevStep}\r\n                                            className=\"flex items-center text-gray-400 hover:text-white transition-colors focus:outline-none cursor-pointer\"\r\n                                        >\r\n                                            <ArrowLeft size={16} className=\"mr-2\" />\r\n                                            Back\r\n                                        </button>\r\n                                    ) : (\r\n                                        <div></div> // Empty div to maintain layout\r\n                                    )}\r\n\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        onClick={nextStep}\r\n                                        disabled={isSubmitting}\r\n                                        className=\"px-6 py-2 bg-white text-black text-sm font-medium rounded-full hover:opacity-90 transition-opacity flex items-center justify-center cursor-pointer\"\r\n                                    >\r\n                                        {isSubmitting && currentStep === 'review' ? (\r\n                                            <>\r\n                                                <div className=\"w-4 h-4 border-t-2 border-b-2 border-black rounded-full animate-spin mr-2\"></div>\r\n                                                Generating...\r\n                                            </>\r\n                                        ) : currentStep === 'review' ? (\r\n                                            <>\r\n                                                <span>Generate Course</span>\r\n                                                <Check size={16} className=\"ml-2\" />\r\n                                            </>\r\n                                        ) : (\r\n                                            <>\r\n                                                <span>Continue</span>\r\n                                                <ArrowRight size={16} className=\"ml-2\" />\r\n                                            </>\r\n                                        )}\r\n                                    </button>\r\n                                </div>\r\n\r\n                                {formData.referencePdf && (\r\n                                    <Document file={formData.referencePdf} onLoadSuccess={onDocumentLoadSuccess}>\r\n                                    </Document>\r\n\r\n                                )}\r\n                            </Dialog.Panel>\r\n                        </Transition.Child>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n        </Transition>\r\n    );\r\n} "],"names":[],"mappings":";;;AAUqC;;AARrC;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;AANA;;;;;;AAQA,yDAAyD;AACzD,yEAAyE;AACzE,wCAAsE;IAClE,IAAI;QACA,6OAAA,CAAA,QAAK,CAAC,mBAAmB,CAAC,SAAS,GAAG,+KAGpC,QAAQ;IACd,EAAE,OAAO,OAAO;QACZ,+DAA+D;QAC/D,QAAQ,IAAI,CAAC,oCAAoC;IACrD;AACJ;AAwBe,SAAS,qBAAqB,KAAuE;QAAvE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,eAAe,EAA6B,GAAvE;;IACzC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,4QAAA,CAAA,WAAQ,AAAD,EAA0B;QAC7D,mBAAmB;QACnB,kBAAkB;QAClB,cAAc;QACd,mBAAmB;IACvB;IAEA,wBAAwB;IACxB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,4QAAA,CAAA,WAAQ,AAAD,EAAc,CAAC;IAElD,4CAA4C;IAC5C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,4QAAA,CAAA,WAAQ,AAAD,EAAQ;IACrD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,4QAAA,CAAA,WAAQ,AAAD,EAAU;IACjD,MAAM,eAAe,CAAA,GAAA,4QAAA,CAAA,SAAM,AAAD,EAAoB;IAC9C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,4QAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,kEAAkE;IAClE,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,4QAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,4QAAA,CAAA,WAAQ,AAAD,EAAiB;IAE1D,oCAAoC;IACpC,MAAM,aAAa;QACf,YAAY;YACR,mBAAmB;YACnB,kBAAkB;YAClB,cAAc;YACd,mBAAmB;QACvB;QACA,YAAY;QACZ,eAAe;QACf,gBAAgB;QAChB,UAAU,CAAC;QACX,aAAa;IACjB;IAEA,MAAM,mBAAmB,CAAC;QACtB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM;QAChC,YAAY,CAAA,OAAQ,CAAC;gBAAE,GAAG,IAAI;gBAAE,CAAC,KAAK,EAAE;YAAM,CAAC;QAE/C,6CAA6C;QAC7C,IAAI,MAAM,CAAC,KAAyB,EAAE;YAClC,UAAU,CAAA,OAAQ,CAAC;oBAAE,GAAG,IAAI;oBAAE,CAAC,KAAK,EAAE;gBAAU,CAAC;QACrD;IACJ;IAGA,SAAS,sBAAsB,KAAkC;YAAlC,EAAE,QAAQ,EAAwB,GAAlC;QAC3B,kBAAkB;QAElB,IAAI,WAAW,KAAK;YAChB,aAAa,AAAC,+BAAuC,OAAT,UAAS;YAErD,6CAA6C;YAC7C;QACJ,OAAO;YACH,QAAQ,GAAG,CAAC,AAAC,0BAAkC,OAAT,UAAS;QAC/C,0CAA0C;QAC9C;IACJ;IAEA,MAAM,mBAAmB,CAAC;YACT;QAAb,MAAM,OAAO,EAAA,kBAAA,EAAE,MAAM,CAAC,KAAK,cAAd,sCAAA,eAAgB,CAAC,EAAE,KAAI;QACpC,IAAI,MAAM;YACN,mCAAmC;YACnC,aAAa;YAEb,kBAAkB;YAClB,IAAI,KAAK,IAAI,KAAK,mBAAmB;gBACjC,UAAU,CAAA,OAAQ,CAAC;wBAAE,GAAG,IAAI;wBAAE,cAAc;oBAA2B,CAAC;gBACxE;YACJ;YAEA,kDAAkD;YAClD,MAAM,UAAU,KAAK,OAAO,MAAM,gBAAgB;YAClD,IAAI,KAAK,IAAI,GAAG,SAAS;gBACrB,aAAa;gBACb;YACJ;YAEA,mBAAmB;YACnB,kBAAkB;YAElB,gFAAgF;YAChF,YAAY,CAAA,OAAQ,CAAC;oBAAE,GAAG,IAAI;oBAAE,cAAc;gBAAK,CAAC;YACpD,YAAY,KAAK,IAAI;YAErB,2BAA2B;YAC3B,IAAI,OAAO,YAAY,EAAE;gBACrB,UAAU,CAAA,OAAQ,CAAC;wBAAE,GAAG,IAAI;wBAAE,cAAc;oBAAU,CAAC;YAC3D;QACJ;IACJ;IAEA,MAAM,mBAAmB;YACrB;SAAA,wBAAA,aAAa,OAAO,cAApB,4CAAA,sBAAsB,KAAK;IAC/B;IAEA,MAAM,aAAa;QACf,YAAY,CAAA,OAAQ,CAAC;gBAAE,GAAG,IAAI;gBAAE,cAAc;YAAK,CAAC;QACpD,YAAY;QACZ,IAAI,aAAa,OAAO,EAAE;YACtB,aAAa,OAAO,CAAC,KAAK,GAAG;QACjC;IACJ;IAEA,MAAM,eAAe;QACjB,gBAAgB;QAEhB,IAAI;YACA,8DAA8D;YAC9D,4CAA4C;YAC5C,SAAS;YAET,mDAAmD;YACnD;YACA;QACJ,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,gBAAgB;QACpB;IACJ;IAEA,MAAM,sBAAsB;QACxB,IAAI,UAAU;QACd,MAAM,YAAwB,CAAC;QAE/B,IAAI,gBAAgB,eAAe;YAC/B,IAAI,CAAC,SAAS,iBAAiB,CAAC,IAAI,IAAI;gBACpC,UAAU,iBAAiB,GAAG;gBAC9B,UAAU;YACd;QACJ;QAEA,IAAI,gBAAgB,YAAY;YAC5B,IAAI,CAAC,SAAS,gBAAgB,CAAC,IAAI,IAAI;gBACnC,UAAU,gBAAgB,GAAG;gBAC7B,UAAU;YACd;QACJ;QAEA,IAAI,gBAAgB,aAAa;YAC7B,IAAI,CAAC,SAAS,YAAY,EAAE;gBACxB,UAAU,YAAY,GAAG;gBACzB,UAAU;YACd;QACJ;QAEA,UAAU;QACV,OAAO;IACX;IAEA,MAAM,WAAW;QACb,0CAA0C;QAC1C,IAAI,CAAC,uBAAuB;YACxB;QACJ;QAEA,0CAA0C;QAC1C,OAAQ;YACJ,KAAK;gBACD,eAAe;gBACf;YACJ,KAAK;gBACD,eAAe;gBACf;YACJ,KAAK;gBACD,eAAe;gBACf;YACJ,KAAK;gBACD,eAAe;gBACf;YACJ,KAAK;gBACD;gBACA;QACR;IACJ;IAEA,MAAM,WAAW;QACb,+BAA+B;QAC/B,UAAU,CAAC;QAEX,8CAA8C;QAC9C,OAAQ;YACJ,KAAK;gBACD,eAAe;gBACf;YACJ,KAAK;gBACD,eAAe;gBACf;YACJ,KAAK;gBACD,eAAe;gBACf;YACJ,KAAK;gBACD,eAAe;gBACf;QACR;IACJ;IAEA,0DAA0D;IAC1D,MAAM,oBAAoB;QACtB;QACA;IACJ;IAEA,wDAAwD;IACxD,MAAM,OAAO;IACT,gFAAgF;IACpF;IAEA,yDAAyD;IACzD,MAAM,iBAAiB;QACnB,OAAQ;YACJ,KAAK;gBACD,OAAO;oBACH,SAAS;oBACT,aAAa;gBACjB;YACJ,KAAK;gBACD,OAAO;oBACH,SAAS;oBACT,aAAa;gBACjB;YACJ,KAAK;gBACD,OAAO;oBACH,SAAS;oBACT,aAAa;gBACjB;YACJ,KAAK;gBACD,OAAO;oBACH,SAAS;oBACT,aAAa;gBACjB;YACJ,KAAK;gBACD,OAAO;oBACH,SAAS;oBACT,aAAa;gBACjB;QACR;IACJ;IAEA,gCAAgC;IAChC,MAAM,qBAAqB,CAAC;QACxB,OAAQ;YACJ,KAAK;gBAAe,OAAO;YAC3B,KAAK;gBAAY,OAAO;YACxB,KAAK;gBAAa,OAAO;YACzB,KAAK;gBAAgB,OAAO;YAC5B,KAAK;gBAAU,OAAO;QAC1B;IACJ,CAAC;IAED,MAAM,cAAc;IAEpB,qBACI,4SAAC,iSAAA,CAAA,aAAU;QAAC,MAAM;QAAC,MAAM;QAAM,IAAI,4QAAA,CAAA,WAAQ;kBACvC,cAAA,4SAAC,yRAAA,CAAA,SAAM;YACH,IAAG;YACH,WAAU;YACV,SAAS;;8BAET,4SAAC,iSAAA,CAAA,aAAU,CAAC,KAAK;oBACb,IAAI,4QAAA,CAAA,WAAQ;oBACZ,OAAM;oBACN,WAAU;oBACV,SAAQ;oBACR,OAAM;oBACN,WAAU;oBACV,SAAQ;8BAER,cAAA,4SAAC;wBAAI,WAAU;;;;;;;;;;;8BAGnB,4SAAC;oBAAI,WAAU;8BACX,cAAA,4SAAC;wBAAI,WAAU;kCACX,cAAA,4SAAC,iSAAA,CAAA,aAAU,CAAC,KAAK;4BACb,IAAI,4QAAA,CAAA,WAAQ;4BACZ,OAAM;4BACN,WAAU;4BACV,SAAQ;4BACR,OAAM;4BACN,WAAU;4BACV,SAAQ;sCAER,cAAA,4SAAC,yRAAA,CAAA,SAAM,CAAC,KAAK;gCAAC,WAAU;;kDAEpB,4SAAC;wCAAI,WAAU;kDACX,cAAA,4SAAC;4CACG,WAAU;4CACV,OAAO;gDAAE,OAAO,AAAC,GAAqB,OAAnB,oBAAmB;4CAAG;;;;;;;;;;;kDAKjD,4SAAC;wCACG,SAAS;wCACT,WAAU;wCACV,cAAW;kDAEX,cAAA,4SAAC,mRAAA,CAAA,IAAC;4CAAC,MAAM;;;;;;;;;;;kDAGb,4SAAC;wCAAI,WAAU;;0DACX,4SAAC,yRAAA,CAAA,SAAM,CAAC,KAAK;gDACT,IAAG;gDACH,WAAU;0DAET,YAAY,OAAO;;;;;;0DAGxB,4SAAC;gDAAE,WAAU;0DACR,YAAY,WAAW;;;;;;4CAI3B,gBAAgB,+BACb,4SAAC;gDAAI,WAAU;;kEACX,4SAAC;wDACG,IAAG;wDACH,MAAK;wDACL,OAAO,SAAS,iBAAiB;wDACjC,UAAU;wDACV,aAAY;wDACZ,WAAW,AAAC,yGAA6K,OAArE,OAAO,iBAAiB,GAAG,4BAA4B,eAAc;;;;;;oDAE5L,OAAO,iBAAiB,kBACrB,4SAAC;wDAAI,WAAU;;0EACX,4SAAC,2SAAA,CAAA,cAAW;gEAAC,MAAM;gEAAI,WAAU;;;;;;4DAChC,OAAO,iBAAiB;;;;;;;;;;;;;4CAOxC,gBAAgB,4BACb,4SAAC;gDAAI,WAAU;;kEACX,4SAAC;wDACG,IAAG;wDACH,MAAK;wDACL,OAAO,SAAS,gBAAgB;wDAChC,UAAU;wDACV,aAAY;wDACZ,WAAW,AAAC,yGAA4K,OAApE,OAAO,gBAAgB,GAAG,4BAA4B,eAAc;;;;;;oDAE3L,OAAO,gBAAgB,kBACpB,4SAAC;wDAAI,WAAU;;0EACX,4SAAC,2SAAA,CAAA,cAAW;gEAAC,MAAM;gEAAI,WAAU;;;;;;4DAChC,OAAO,gBAAgB;;;;;;;;;;;;;4CAOvC,gBAAgB,6BACb,4SAAC;gDAAI,WAAU;;kEACX,4SAAC;wDACG,MAAK;wDACL,KAAK;wDACL,UAAU;wDACV,QAAO;wDACP,WAAU;;;;;;oDAGb,CAAC,yBACE,4SAAC;wDACG,SAAS;wDACT,WAAW,AAAC,mIAA6P,OAA3H,AAAC,OAAO,YAAY,IAAI,YAAa,4BAA4B;kEAE/M,cAAA,4SAAC;4DAAI,WAAU;;8EACX,4SAAC,6RAAA,CAAA,SAAM;oEAAC,MAAM;oEAAI,WAAU;;;;;;8EAC5B,4SAAC;oEAAE,WAAU;8EAAU;;;;;;8EACvB,4SAAC;oEAAE,WAAU;8EAAe;;;;;;;;;;;;;;;;6EAIpC,4SAAC;wDAAI,WAAU;;0EACX,4SAAC;gEAAI,WAAU;;oEACV,+BACG,4SAAC;wEAAI,WAAU;;;;;6FAEf,4SAAC,yRAAA,CAAA,OAAI;wEAAC,MAAM;wEAAI,WAAU;;;;;;kFAE9B,4SAAC;wEAAK,WAAU;kFACX,iBAAiB,sBAAsB;;;;;;;;;;;;0EAGhD,4SAAC;gEACG,MAAK;gEACL,SAAS;gEACT,WAAU;gEACV,cAAW;0EAEX,cAAA,4SAAC,mRAAA,CAAA,IAAC;oEAAC,MAAM;;;;;;;;;;;;;;;;;oDAKpB,CAAC,OAAO,YAAY,IAAI,SAAS,mBAC9B,4SAAC;wDAAI,WAAU;;0EACX,4SAAC,2SAAA,CAAA,cAAW;gEAAC,MAAM;gEAAI,WAAU;;;;;;0EACjC,4SAAC;0EACI,aAAa,OAAO,YAAY;;;;;;;;;;;;;;;;;;4CAQpD,gBAAgB,gCACb,4SAAC;gDAAI,WAAU;0DACX,cAAA,4SAAC;oDACG,IAAG;oDACH,MAAK;oDACL,OAAO,SAAS,iBAAiB;oDACjC,UAAU;oDACV,aAAY;oDACZ,WAAU;;;;;;;;;;;4CAMrB,gBAAgB,0BACb,4SAAC;gDAAI,WAAU;;kEACX,4SAAC;wDAAI,WAAU;;0EACX,4SAAC;gEAAG,WAAU;0EAAyB;;;;;;0EACvC,4SAAC;gEAAE,WAAU;0EAAiE,SAAS,iBAAiB;;;;;;;;;;;;kEAG5G,4SAAC;wDAAI,WAAU;;0EACX,4SAAC;gEAAG,WAAU;0EAAyB;;;;;;0EACvC,4SAAC;gEAAE,WAAU;0EAAiE,SAAS,gBAAgB;;;;;;;;;;;;kEAG3G,4SAAC;wDAAI,WAAU;;0EACX,4SAAC;gEAAG,WAAU;0EAAyB;;;;;;0EACvC,4SAAC;gEAAI,WAAU;;kFACX,4SAAC,yRAAA,CAAA,OAAI;wEAAC,MAAM;wEAAI,WAAU;;;;;;kFAC1B,4SAAC;kFAAM;;;;;;;;;;;;;;;;;;oDAId,SAAS,iBAAiB,kBACvB,4SAAC;wDAAI,WAAU;;0EACX,4SAAC;gEAAG,WAAU;0EAAyB;;;;;;0EACvC,4SAAC;gEAAE,WAAU;0EAAiE,SAAS,iBAAiB;;;;;;;;;;;;;;;;;;;;;;;;kDAQ5H,4SAAC;wCAAI,WAAU;;4CACV,gBAAgB,8BACb,4SAAC;gDACG,MAAK;gDACL,SAAS;gDACT,WAAU;;kEAEV,4SAAC,uSAAA,CAAA,YAAS;wDAAC,MAAM;wDAAI,WAAU;;;;;;oDAAS;;;;;;qEAI5C,4SAAC;;;;;0DAGL,4SAAC;gDACG,MAAK;gDACL,SAAS;gDACT,UAAU;gDACV,WAAU;0DAET,gBAAgB,gBAAgB,yBAC7B;;sEACI,4SAAC;4DAAI,WAAU;;;;;;wDAAkF;;mEAGrG,gBAAgB,yBAChB;;sEACI,4SAAC;sEAAK;;;;;;sEACN,4SAAC,2RAAA,CAAA,QAAK;4DAAC,MAAM;4DAAI,WAAU;;;;;;;iFAG/B;;sEACI,4SAAC;sEAAK;;;;;;sEACN,4SAAC,ySAAA,CAAA,aAAU;4DAAC,MAAM;4DAAI,WAAU;;;;;;;;;;;;;;;;;;;oCAM/C,SAAS,YAAY,kBAClB,4SAAC,6SAAA,CAAA,WAAQ;wCAAC,MAAM,SAAS,YAAY;wCAAE,eAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAW1F;GA3fwB;KAAA","debugId":null}},
    {"offset": {"line": 5016, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/SettingsDialog.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from 'react';\r\nimport { X, ExternalLink, Share } from 'lucide-react';\r\nimport Tooltip from './Tooltip';\r\nimport { DripConfig } from '@/types/course';\r\n\r\n\r\ninterface SettingsDialogProps {\r\n    isOpen: boolean;\r\n    onClose: () => void;\r\n    courseName: string;\r\n    dripConfig: DripConfig;\r\n    schoolId: string;\r\n    courseId: number | undefined;\r\n    cohortId: number | undefined;\r\n    onCopyCohortInviteLink?: (cohortId: number, cohortName: string) => void;\r\n}\r\n\r\nexport default function SettingsDialog({ isOpen, onClose, courseName, dripConfig, schoolId, courseId, cohortId, onCopyCohortInviteLink }: SettingsDialogProps) {\r\n    if (!isOpen) return null;\r\n\r\n    const getFrequencyText = () => {\r\n        const unit = dripConfig.frequency_unit.toLowerCase();\r\n        const plural = dripConfig.frequency_value > 1 ? 's' : '';\r\n        return `Every ${dripConfig.frequency_value} ${unit}${plural}`;\r\n    };\r\n\r\n    const formatDate = (date: Date) => {\r\n        return date.toLocaleString('en-US', {\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric',\r\n            hour: '2-digit',\r\n            minute: '2-digit',\r\n            hour12: true,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-70 backdrop-blur-sm z-50 flex items-center justify-center p-4\" onClick={onClose}>\r\n            <div\r\n                className=\"w-full max-w-md bg-[#1A1A1A] rounded-lg shadow-2xl relative\"\r\n                onClick={e => e.stopPropagation()}\r\n            >\r\n                {/* Dialog Header */}\r\n                <div className=\"flex justify-between items-center p-6 pb-2\">\r\n                    <h2 className=\"text-xl font-light text-white\">Settings</h2>\r\n                    <button\r\n                        onClick={onClose}\r\n                        className=\"text-gray-400 hover:text-white transition-colors focus:outline-none cursor-pointer\"\r\n                        aria-label=\"Close\"\r\n                    >\r\n                        <X size={24} />\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Course/Cohort Info */}\r\n                <div className=\"flex flex-col gap-2 px-6 pt-4 pb-2\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                        <span className=\"text-white text-base font-light\">{courseId ? 'Course' : 'Cohort'}</span>\r\n                        <div className=\"flex items-center gap-2 ml-auto\">\r\n                            <Tooltip content=\"Open\" position=\"top\">\r\n                                <button\r\n                                    onClick={() => window.open(`/school/admin/${schoolId}/${courseId ? 'courses' : 'cohorts'}/${courseId || cohortId}`, '_blank')}\r\n                                    className=\"text-gray-400 hover:text-white cursor-pointer flex items-center\"\r\n                                    aria-label=\"Open cohort page\"\r\n                                >\r\n                                    <ExternalLink size={16} />\r\n                                </button>\r\n                            </Tooltip>\r\n                            {cohortId && onCopyCohortInviteLink && (\r\n                                <Tooltip content=\"Copy invite link\" position=\"top\">\r\n                                    <button\r\n                                        onClick={() => onCopyCohortInviteLink(cohortId, courseName)}\r\n                                        className=\"text-gray-400 hover:text-white cursor-pointer flex items-center\"\r\n                                        aria-label=\"Copy cohort invite link\"\r\n                                    >\r\n                                        <Share size={16} />\r\n                                    </button>\r\n                                </Tooltip>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <span className=\"text-white text-sm font-light\">{courseName}</span>\r\n                </div>\r\n\r\n                {/* Release Schedule Section */}\r\n                <div className=\"px-6 pb-6 pt-2\">\r\n                    <span className=\"text-white text-base font-light block mb-1\">Course release schedule</span>\r\n                    {dripConfig.is_drip_enabled ? (\r\n                        <div className=\"space-y-1\">\r\n                            <span className=\"text-white text-sm font-light\">{getFrequencyText()} </span>\r\n                            <span className=\"text-white text-sm font-light\">{`${dripConfig.publish_at ? `starting from ${formatDate(new Date(dripConfig.publish_at))}` : `after a learner joins the cohort`}`}</span>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"space-y-1\">\r\n                            <span className=\"text-white text-sm font-light\">This course is not using a drip schedule. Learners can access all modules from the start.</span>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"names":[],"mappings":";;;;AAGA;AAAA;AAAA;AACA;AAJA;;;;AAmBe,SAAS,eAAe,KAAsH;QAAtH,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,sBAAsB,EAAuB,GAAtH;IACnC,IAAI,CAAC,QAAQ,OAAO;IAEpB,MAAM,mBAAmB;QACrB,MAAM,OAAO,WAAW,cAAc,CAAC,WAAW;QAClD,MAAM,SAAS,WAAW,eAAe,GAAG,IAAI,MAAM;QACtD,OAAO,AAAC,SAAsC,OAA9B,WAAW,eAAe,EAAC,KAAU,OAAP,MAAc,OAAP;IACzD;IAEA,MAAM,aAAa,CAAC;QAChB,OAAO,KAAK,cAAc,CAAC,SAAS;YAChC,MAAM;YACN,OAAO;YACP,KAAK;YACL,MAAM;YACN,QAAQ;YACR,QAAQ;QACZ;IACJ;IAEA,qBACI,4SAAC;QAAI,WAAU;QAAkG,SAAS;kBACtH,cAAA,4SAAC;YACG,WAAU;YACV,SAAS,CAAA,IAAK,EAAE,eAAe;;8BAG/B,4SAAC;oBAAI,WAAU;;sCACX,4SAAC;4BAAG,WAAU;sCAAgC;;;;;;sCAC9C,4SAAC;4BACG,SAAS;4BACT,WAAU;4BACV,cAAW;sCAEX,cAAA,4SAAC,mRAAA,CAAA,IAAC;gCAAC,MAAM;;;;;;;;;;;;;;;;;8BAKjB,4SAAC;oBAAI,WAAU;;sCACX,4SAAC;4BAAI,WAAU;;8CACX,4SAAC;oCAAK,WAAU;8CAAmC,WAAW,WAAW;;;;;;8CACzE,4SAAC;oCAAI,WAAU;;sDACX,4SAAC,gIAAA,CAAA,UAAO;4CAAC,SAAQ;4CAAO,UAAS;sDAC7B,cAAA,4SAAC;gDACG,SAAS,IAAM,OAAO,IAAI,CAAC,AAAC,iBAA4B,OAAZ,UAAS,KAAuC,OAApC,WAAW,YAAY,WAAU,KAAwB,OAArB,YAAY,WAAY;gDACpH,WAAU;gDACV,cAAW;0DAEX,cAAA,4SAAC,6SAAA,CAAA,eAAY;oDAAC,MAAM;;;;;;;;;;;;;;;;wCAG3B,YAAY,wCACT,4SAAC,gIAAA,CAAA,UAAO;4CAAC,SAAQ;4CAAmB,UAAS;sDACzC,cAAA,4SAAC;gDACG,SAAS,IAAM,uBAAuB,UAAU;gDAChD,WAAU;gDACV,cAAW;0DAEX,cAAA,4SAAC,2RAAA,CAAA,QAAK;oDAAC,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAMjC,4SAAC;4BAAK,WAAU;sCAAiC;;;;;;;;;;;;8BAIrD,4SAAC;oBAAI,WAAU;;sCACX,4SAAC;4BAAK,WAAU;sCAA6C;;;;;;wBAC5D,WAAW,eAAe,iBACvB,4SAAC;4BAAI,WAAU;;8CACX,4SAAC;oCAAK,WAAU;;wCAAiC;wCAAmB;;;;;;;8CACpE,4SAAC;oCAAK,WAAU;8CAAiC,AAAC,GAA8H,OAA5H,WAAW,UAAU,GAAG,AAAC,iBAA4D,OAA5C,WAAW,IAAI,KAAK,WAAW,UAAU,MAAQ;;;;;;;;;;;iDAGlJ,4SAAC;4BAAI,WAAU;sCACX,cAAA,4SAAC;gCAAK,WAAU;0CAAgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO5E;KArFwB","debugId":null}},
    {"offset": {"line": 5260, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/CreateCohortDialog.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport DripPublishingConfig, { DripPublishingConfigRef } from './DripPublishingConfig';\r\nimport { DripConfig } from '@/types/course';\r\n\r\ninterface CreateCohortDialogProps {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    onCreateCohort: (cohort: any, dripConfig?: DripConfig) => void;\r\n    schoolId?: string;\r\n    showDripPublishSettings?: boolean;\r\n}\r\n\r\nexport default function CreateCohortDialog({ open, onClose, onCreateCohort, schoolId, showDripPublishSettings }: CreateCohortDialogProps) {\r\n    const [cohortName, setCohortName] = useState('');\r\n    const [dripConfig, setDripConfig] = useState<DripConfig | undefined>(undefined);\r\n    const [error, setError] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const dripConfigRef = useRef<DripPublishingConfigRef>(null);\r\n\r\n    // Reset form state when dialog is opened\r\n    useEffect(() => {\r\n        if (open) {\r\n            setCohortName('');\r\n            setDripConfig(undefined);\r\n            setError('');\r\n            setIsLoading(false);\r\n        }\r\n    }, [open]);\r\n\r\n    const handleSubmit = async () => {\r\n        // Validate cohort name\r\n        if (!cohortName.trim()) {\r\n            setError('Cohort name is required');\r\n            return;\r\n        }\r\n\r\n        // Validate drip config if enabled and showDripPublishSettings is true\r\n        if (showDripPublishSettings && dripConfigRef.current) {\r\n            const dripError = dripConfigRef.current.validateDripConfig();\r\n            if (dripError) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        // Set loading state to true\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            // Make API call to create cohort\r\n            const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/cohorts/`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    name: cohortName,\r\n                    org_id: schoolId ? parseInt(schoolId) : null\r\n                }),\r\n            });\r\n\r\n            // Handle API errors\r\n            if (!response.ok) {\r\n                throw new Error(`Failed to create cohort: ${response.status} ${response.statusText}`);\r\n            }\r\n\r\n            // Get the new cohort data\r\n            const newCohortData = await response.json();\r\n\r\n            // Pass the created cohort back to the parent with drip config if applicable\r\n            onCreateCohort(newCohortData, showDripPublishSettings ? dripConfig : undefined);\r\n\r\n            // Reset form state\r\n            setCohortName('');\r\n            setDripConfig(undefined);\r\n            setError('');\r\n\r\n        } catch (error) {\r\n            console.error('Error creating cohort:', error);\r\n            setError('Failed to create cohort. Please try again.');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    if (!open) return null;\r\n\r\n    return (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\r\n            <div\r\n                className=\"w-full max-w-md bg-[#1A1A1A] rounded-lg shadow-2xl\"\r\n                onClick={e => e.stopPropagation()}\r\n            >\r\n                {/* Dialog Content */}\r\n                <div className=\"p-6 mt-4\">\r\n                    <div className=\"space-y-4\">\r\n                        <div>\r\n                            <p className=\"text-xs text-gray-400 mb-2 font-light\">A cohort is a group of learners who will take your course together</p>\r\n                            <input\r\n                                id=\"cohortName\"\r\n                                type=\"text\"\r\n                                value={cohortName}\r\n                                onChange={(e) => {\r\n                                    setCohortName(e.target.value);\r\n                                    if (error) setError('');\r\n                                }}\r\n                                placeholder=\"What will you name this cohort?\"\r\n                                className={`w-full px-4 py-3 bg-[#0D0D0D] text-white text-lg rounded-lg font-light placeholder-gray-500 outline-none ${error ? 'border border-red-500' : 'border-none'}`}\r\n                                disabled={isLoading}\r\n                            />\r\n                            {error && (\r\n                                <p className=\"mt-1 text-sm text-red-500\">{error}</p>\r\n                            )}\r\n                        </div>\r\n\r\n                        {/* Conditionally render DripPublishingConfig */}\r\n                        {showDripPublishSettings && (\r\n                            <div>\r\n                                <DripPublishingConfig\r\n                                    ref={dripConfigRef}\r\n                                    onConfigChange={setDripConfig}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Dialog Footer */}\r\n                <div className=\"flex justify-end gap-4 p-6\">\r\n                    <button\r\n                        onClick={onClose}\r\n                        className=\"px-4 py-2 text-gray-400 hover:text-white transition-colors focus:outline-none cursor-pointer\"\r\n                        disabled={isLoading}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        onClick={handleSubmit}\r\n                        className={`px-6 py-2 bg-white text-black text-sm font-medium rounded-full hover:opacity-90 transition-opacity focus:outline-none cursor-pointer ${isLoading ? 'opacity-70' : ''}`}\r\n                        disabled={isLoading}\r\n                    >\r\n                        {isLoading ? (\r\n                            <span className=\"flex items-center justify-center\">\r\n                                <svg className=\"animate-spin h-5 w-5 text-black\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                                </svg>\r\n                            </span>\r\n                        ) : 'Create cohort'}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5509, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/app/school/admin/%5Bid%5D/courses/%5BcourseId%5D/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useRef, useEffect, useCallback } from \"react\";\r\nimport { ChevronUp, ChevronDown, X, ChevronRight, ChevronDown as ChevronDownExpand, Plus, BookOpen, HelpCircle, Trash, Zap, Eye, Check, FileEdit, Clipboard, ArrowLeft, Pencil, Users, UsersRound, ExternalLink, Sparkles, Loader2, Share, Settings } from \"lucide-react\";\r\nimport Link from \"next/link\";\r\nimport { Header } from \"@/components/layout/header\";\r\nimport { useRouter, useParams } from \"next/navigation\";\r\nimport CourseModuleList from \"@/components/CourseModuleList\";\r\nimport ConfirmationDialog from \"@/components/ConfirmationDialog\";\r\nimport Toast from \"@/components/Toast\";\r\nimport CoursePublishSuccessBanner from \"@/components/CoursePublishSuccessBanner\";\r\nimport { Module, ModuleItem, LearningMaterial, Quiz, DripConfig } from \"@/types/course\";\r\nimport { Milestone } from \"@/types\";\r\nimport { transformMilestonesToModules } from \"@/lib/course\";\r\nimport { CourseCohortSelectionDialog } from \"@/components/CourseCohortSelectionDialog\";\r\nimport { addModule } from \"@/lib/api\";\r\nimport Tooltip from \"@/components/Tooltip\";\r\nimport GenerateWithAIDialog, { GenerateWithAIFormData } from '@/components/GenerateWithAIDialog';\r\nimport SettingsDialog from \"@/components/SettingsDialog\";\r\n\r\n// Import the QuizQuestion type\r\nimport { QuizQuestion, QuizQuestionConfig } from \"../../../../../../types/quiz\";\r\n\r\n// Import the CreateCohortDialog\r\nimport CreateCohortDialog from '@/components/CreateCohortDialog';\r\n\r\ninterface CourseDetails {\r\n    id: number;\r\n    name: string;\r\n    milestones?: Milestone[];\r\n}\r\n\r\n// Default configuration for new questions\r\nconst defaultQuestionConfig: QuizQuestionConfig = {\r\n    inputType: 'text',\r\n    responseType: 'chat',\r\n    questionType: 'objective',\r\n    knowledgeBaseBlocks: [],\r\n    linkedMaterialIds: [],\r\n};\r\n\r\n\r\nexport default function CreateCourse() {\r\n    const router = useRouter();\r\n    const params = useParams();\r\n    const schoolId = params.id as string;\r\n    const courseId = params.courseId as string;\r\n    const [schoolSlug, setSchoolSlug] = useState<string>('');\r\n\r\n    const [courseTitle, setCourseTitle] = useState(\"Loading course...\");\r\n    const [modules, setModules] = useState<Module[]>([]);\r\n    const [activeItem, setActiveItem] = useState<ModuleItem | null>(null);\r\n    const [activeModuleId, setActiveModuleId] = useState<string | null>(null);\r\n    const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n    const [isDarkMode, setIsDarkMode] = useState(false);\r\n    const [isPreviewMode, setIsPreviewMode] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const titleRef = useRef<HTMLHeadingElement>(null);\r\n    const [lastUsedColorIndex, setLastUsedColorIndex] = useState<number>(-1);\r\n    const [isCourseTitleEditing, setIsCourseTitleEditing] = useState(false);\r\n    const [isEditMode, setIsEditMode] = useState<boolean>(false);\r\n    const [showPublishConfirmation, setShowPublishConfirmation] = useState(false);\r\n    const [showPublishDialog, setShowPublishDialog] = useState(false);\r\n    const [cohorts, setCohorts] = useState<any[]>([]);\r\n    const [isLoadingCohorts, setIsLoadingCohorts] = useState(false);\r\n    const [cohortSearchQuery, setCohortSearchQuery] = useState('');\r\n    const [filteredCohorts, setFilteredCohorts] = useState<any[]>([]);\r\n    const [cohortError, setCohortError] = useState<string | null>(null);\r\n    // Add state for course cohorts\r\n    const [courseCohorts, setCourseCohorts] = useState<any[]>([]);\r\n    const [isLoadingCourseCohorts, setIsLoadingCourseCohorts] = useState(false);\r\n    // Add state to track total cohorts in the school\r\n    const [totalSchoolCohorts, setTotalSchoolCohorts] = useState<number>(0);\r\n    // Add refs for both buttons to position the dropdown\r\n    const publishButtonRef = useRef<HTMLButtonElement>(null);\r\n    const addCohortButtonRef = useRef<HTMLButtonElement>(null);\r\n    // Add state to track which button opened the dialog\r\n    const [dialogOrigin, setDialogOrigin] = useState<'publish' | 'add' | null>(null);\r\n    // Add state for toast notifications\r\n    const [toast, setToast] = useState({\r\n        show: false,\r\n        title: '',\r\n        description: '',\r\n        emoji: ''\r\n    });\r\n    // Add state for cohort removal confirmation\r\n    const [cohortToRemove, setCohortToRemove] = useState<{ id: number, name: string } | null>(null);\r\n    const [showRemoveCohortConfirmation, setShowRemoveCohortConfirmation] = useState(false);\r\n\r\n    // Add state for celebratory banner\r\n    const [showCelebratoryBanner, setShowCelebratoryBanner] = useState(false);\r\n    const [celebrationDetails, setCelebrationDetails] = useState({\r\n        cohortId: 0,\r\n        cohortName: ''\r\n    });\r\n\r\n    // Add a new state for direct create cohort dialog\r\n    const [showCreateCohortDialog, setShowCreateCohortDialog] = useState(false);\r\n\r\n    // Add state for AI generation dialog\r\n    const [showGenerateDialog, setShowGenerateDialog] = useState(false);\r\n\r\n    // Add state for course generation loading state\r\n    const [isGeneratingCourse, setIsGeneratingCourse] = useState(false);\r\n\r\n    const [isCourseStructureGenerated, setIsCourseStructureGenerated] = useState(false);\r\n\r\n    // Add state for generation progress messages\r\n    const [generationProgress, setGenerationProgress] = useState<string[]>([]);\r\n\r\n    // Add a ref to store the WebSocket connection\r\n    const wsRef = useRef<WebSocket | null>(null);\r\n    // Add a ref for the heartbeat interval\r\n    const heartbeatIntervalRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n    // Add these new state variables after the existing state declarations\r\n    const [totalTasksToGenerate, setTotalTasksToGenerate] = useState(0);\r\n    const [generatedTasksCount, setGeneratedTasksCount] = useState(0);\r\n\r\n    // Add a new state variable to track generation completion\r\n    const [isGenerationComplete, setIsGenerationComplete] = useState(false);\r\n\r\n    // Add these refs after the existing refs declaration\r\n    const isGeneratingCourseRef = useRef(false);\r\n    const totalTasksToGenerateRef = useRef(0);\r\n    const generatedTasksCountRef = useRef(0);\r\n\r\n    // Add state for selected cohort\r\n    const [selectedCohort, setSelectedCohort] = useState<any | null>(null);\r\n\r\n    const [dripConfig, setDripConfig] = useState<DripConfig | undefined>(undefined);\r\n\r\n    const [selectedCohortForSettings, setSelectedCohortForSettings] = useState<any | null>(null);\r\n\r\n    // Update the refs whenever the state changes\r\n    useEffect(() => {\r\n        isGeneratingCourseRef.current = isGeneratingCourse;\r\n    }, [isGeneratingCourse]);\r\n\r\n    useEffect(() => {\r\n        totalTasksToGenerateRef.current = totalTasksToGenerate;\r\n    }, [totalTasksToGenerate]);\r\n\r\n    useEffect(() => {\r\n        generatedTasksCountRef.current = generatedTasksCount;\r\n    }, [generatedTasksCount]);\r\n\r\n    // Extract fetchCourseDetails as a standalone function\r\n    const fetchCourseDetails = async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/courses/${courseId}?only_published=false`);\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Failed to fetch course details: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            setCourseTitle(data.name);\r\n\r\n            // Check if milestones are available in the response\r\n            if (data.milestones && Array.isArray(data.milestones)) {\r\n                // Use the shared utility function to transform the milestones to modules\r\n                const transformedModules = transformMilestonesToModules(data.milestones);\r\n\r\n                // Add isEditing property required by the admin view\r\n                const modulesWithEditing = transformedModules.map(module => ({\r\n                    ...module,\r\n                    isEditing: false\r\n                }));\r\n\r\n                // Check if any task in the course has isGenerating = true\r\n                const totalTasksToGenerate = modulesWithEditing.reduce((count, module) =>\r\n                    count + (module.items?.filter(item => item.isGenerating !== null)?.length || 0), 0\r\n                );\r\n                const generatedTasksCount = modulesWithEditing.reduce((count, module) =>\r\n                    count + (module.items?.filter(item => item.isGenerating === false)?.length || 0), 0\r\n                );\r\n\r\n                // Set up WebSocket connection if any task is being generated\r\n                if (totalTasksToGenerate && totalTasksToGenerate != generatedTasksCount) {\r\n                    const ws = setupGenerationWebSocket();\r\n\r\n                    if (!ws) {\r\n                        throw new Error('Failed to setup WebSocket connection');\r\n                    }\r\n\r\n                    wsRef.current = ws;\r\n                    console.log('WebSocket connection established for active generation task');\r\n\r\n                    setIsGeneratingCourse(true);\r\n                    setIsCourseStructureGenerated(true);\r\n                    setIsGenerationComplete(false);\r\n                    setTotalTasksToGenerate(totalTasksToGenerate);\r\n                    setGeneratedTasksCount(generatedTasksCount);\r\n                    setGenerationProgress([\"Uploaded reference material\", 'Generating course plan', 'Course plan complete', 'Generating learning materials and quizzes']);\r\n                }\r\n\r\n                // Set the modules state\r\n                setModules(modulesWithEditing);\r\n            }\r\n\r\n            setIsLoading(false);\r\n        } catch (err) {\r\n            console.error(\"Error fetching course details:\", err);\r\n            setError(\"Failed to load course details. Please try again later.\");\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // Fetch course details from the backend\r\n    useEffect(() => {\r\n        fetchCourseDetails();\r\n\r\n        // Also fetch cohorts assigned to this course\r\n        fetchCourseCohorts();\r\n\r\n        // Fetch school details to get the slug\r\n        const fetchSchoolDetails = async () => {\r\n            try {\r\n                const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/organizations/${schoolId}`);\r\n                if (response.ok) {\r\n                    const schoolData = await response.json();\r\n                    setSchoolSlug(schoolData.slug);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching school details:\", error);\r\n            }\r\n        };\r\n\r\n        fetchSchoolDetails();\r\n    }, [courseId]);\r\n\r\n    // Check for dark mode\r\n    useEffect(() => {\r\n        setIsDarkMode(true);\r\n        // setIsDarkMode(document.documentElement.classList.contains('dark'));\r\n\r\n        // Optional: Listen for changes to the dark mode\r\n        // const observer = new MutationObserver((mutations) => {\r\n        //     mutations.forEach((mutation) => {\r\n        //         if (mutation.attributeName === 'class') {\r\n        //             setIsDarkMode(document.documentElement.classList.contains('dark'));\r\n        //         }\r\n        //     });\r\n        // });\r\n\r\n        // observer.observe(document.documentElement, { attributes: true });\r\n\r\n        // return () => {\r\n        //     observer.disconnect();\r\n        // };\r\n    }, []);\r\n\r\n    // Set initial content and focus on newly added modules and items\r\n    useEffect(() => {\r\n        // Focus the newly added module\r\n        if (activeModuleId) {\r\n            const moduleElement = document.querySelector(`[data-module-id=\"${activeModuleId}\"]`) as HTMLHeadingElement;\r\n\r\n            if (moduleElement) {\r\n                moduleElement.focus();\r\n            }\r\n        }\r\n\r\n        // Focus the newly added item\r\n        if (activeItem && activeItem.id) {\r\n            const itemElement = document.querySelector(`[data-item-id=\"${activeItem.id}\"]`) as HTMLHeadingElement;\r\n\r\n            if (itemElement) {\r\n                itemElement.focus();\r\n            }\r\n        }\r\n    }, [modules, activeModuleId, activeItem]);\r\n\r\n    // Handle Escape key to close dialog\r\n    useEffect(() => {\r\n        const handleEscKey = (e: KeyboardEvent) => {\r\n            if (e.key === 'Escape' && isDialogOpen) {\r\n                closeDialog();\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleEscKey);\r\n        return () => {\r\n            window.removeEventListener('keydown', handleEscKey);\r\n        };\r\n    }, [isDialogOpen]);\r\n\r\n    // Handle clicks outside of the dropdown for the publish dialog\r\n\r\n    // Add back the handleKeyDown function for module titles\r\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLHeadingElement>) => {\r\n        // Prevent creating a new line when pressing Enter\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault();\r\n\r\n            // Remove focus\r\n            (e.currentTarget as HTMLHeadingElement).blur();\r\n        }\r\n    };\r\n\r\n    const updateModuleTitle = (id: string, title: string) => {\r\n        setModules(prevModules => prevModules.map(module =>\r\n            module.id === id ? { ...module, title } : module\r\n        ));\r\n    };\r\n\r\n    const toggleModuleEditing = (id: string, isEditing: boolean) => {\r\n        setModules(prevModules => prevModules.map(module =>\r\n            module.id === id ? { ...module, isEditing } : module\r\n        ));\r\n    };\r\n\r\n    const deleteModule = (id: string) => {\r\n        setModules(prevModules => {\r\n            const filteredModules = prevModules.filter(module => module.id !== id);\r\n            // Update positions after deletion\r\n            return filteredModules.map((module, index) => ({\r\n                ...module,\r\n                position: index\r\n            }));\r\n        });\r\n    };\r\n\r\n    const moveModuleUp = (id: string) => {\r\n        setModules(prevModules => {\r\n            const index = prevModules.findIndex(module => module.id === id);\r\n            if (index <= 0) return prevModules;\r\n\r\n            const newModules = [...prevModules];\r\n            // Swap with previous module\r\n            [newModules[index - 1], newModules[index]] = [newModules[index], newModules[index - 1]];\r\n\r\n            // Update positions\r\n            return newModules.map((module, idx) => ({\r\n                ...module,\r\n                position: idx\r\n            }));\r\n        });\r\n    };\r\n\r\n    const moveModuleDown = (id: string) => {\r\n        setModules(prevModules => {\r\n            const index = prevModules.findIndex(module => module.id === id);\r\n            if (index === -1 || index === prevModules.length - 1) return prevModules;\r\n\r\n            const newModules = [...prevModules];\r\n            // Swap with next module\r\n            [newModules[index], newModules[index + 1]] = [newModules[index + 1], newModules[index]];\r\n\r\n            // Update positions\r\n            return newModules.map((module, idx) => ({\r\n                ...module,\r\n                position: idx\r\n            }));\r\n        });\r\n    };\r\n\r\n    const toggleModule = (id: string) => {\r\n        setModules(prevModules => prevModules.map(module =>\r\n            module.id === id ? { ...module, isExpanded: !module.isExpanded } : module\r\n        ));\r\n    };\r\n\r\n    // Add these new helper functions after the toggleModule function and before the addLearningMaterial function\r\n    // Helper function to add an item to a module's items array at a specific position\r\n    const addItemToState = (moduleId: string, newItem: ModuleItem, position: number) => {\r\n        setActiveItem(newItem);\r\n        setActiveModuleId(moduleId);\r\n        setIsDialogOpen(true); // Open the dialog for the new item\r\n\r\n        setModules(prevModules => prevModules.map(module => {\r\n            if (module.id === moduleId) {\r\n                // Insert the new item at the correct position and update positions of items below\r\n                const items = [\r\n                    ...module.items.slice(0, position),\r\n                    newItem,\r\n                    ...module.items.slice(position).map(item => ({\r\n                        ...item,\r\n                        position: item.position + 1\r\n                    }))\r\n                ];\r\n                return {\r\n                    ...module,\r\n                    items: items\r\n                };\r\n            }\r\n            return module;\r\n        }));\r\n\r\n        return newItem;\r\n    };\r\n\r\n    const addLearningMaterialToState = (moduleId: string, taskData: any, position: number) => {\r\n        const newItem: LearningMaterial = {\r\n            id: taskData.id.toString(),\r\n            title: taskData.title || \"New learning material\",\r\n            position: position,\r\n            type: 'material',\r\n            content: [], // Empty content, the editor will initialize with default content\r\n            status: 'draft',\r\n            scheduled_publish_at: null\r\n        };\r\n\r\n        return addItemToState(moduleId, newItem, position);\r\n    };\r\n\r\n    const addQuizToState = (moduleId: string, taskData: any, position: number) => {\r\n        const newItem: Quiz = {\r\n            id: taskData.id.toString(),\r\n            title: taskData.title || \"New quiz\",\r\n            position: position,\r\n            type: 'quiz',\r\n            questions: taskData.questions || [],\r\n            status: 'draft',\r\n            scheduled_publish_at: null\r\n        };\r\n\r\n        return addItemToState(moduleId, newItem, position);\r\n    };\r\n\r\n    // Add handleDuplicateItem function to handle task duplication\r\n    const handleDuplicateItem = async (moduleId: string, taskData: any, position: number) => {\r\n        try {\r\n            // Find the original module for placement\r\n            const module = modules.find(m => m.id === moduleId);\r\n            if (!module) return;\r\n\r\n            // Update the UI based on the task type\r\n            if (taskData.type === \"learning_material\") {\r\n                addLearningMaterialToState(moduleId, taskData, position);\r\n            } else if (taskData.type === \"quiz\") {\r\n                addQuizToState(moduleId, taskData, position);\r\n            }\r\n\r\n            // Auto-hide toast after 3 seconds\r\n            setTimeout(() => {\r\n                setToast(prev => ({ ...prev, show: false }));\r\n            }, 3000);\r\n\r\n        } catch (error) {\r\n            console.error(\"Error handling duplicated item:\", error);\r\n\r\n            // Show error toast\r\n            setToast({\r\n                show: true,\r\n                title: 'Cloning Failed',\r\n                description: 'There was an error duplicating the task',\r\n                emoji: '❌'\r\n            });\r\n\r\n            // Auto-hide toast after 3 seconds\r\n            setTimeout(() => {\r\n                setToast(prev => ({ ...prev, show: false }));\r\n            }, 3000);\r\n        }\r\n    };\r\n\r\n    // Modify the existing addLearningMaterial function to use the new helper\r\n    const addLearningMaterial = async (moduleId: string) => {\r\n        try {\r\n            // Make API request to create a new learning material\r\n            const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/tasks/`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    course_id: parseInt(courseId),\r\n                    milestone_id: parseInt(moduleId),\r\n                    type: \"learning_material\",\r\n                    title: \"New learning material\",\r\n                    status: \"draft\",\r\n                    scheduled_publish_at: null\r\n                }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Failed to create learning material: ${response.status}`);\r\n            }\r\n\r\n            // Get the learning material ID from the response\r\n            const data = await response.json();\r\n\r\n            // Update the UI using the abstracted helper function\r\n            addLearningMaterialToState(moduleId, data, modules.find(m => m.id === moduleId)?.items.length || 0);\r\n        } catch (error) {\r\n            console.error(\"Error creating learning material:\", error);\r\n            // You might want to show an error message to the user here\r\n        }\r\n    };\r\n\r\n    // Modify the existing addQuiz function to use the new helper\r\n    const addQuiz = async (moduleId: string) => {\r\n        try {\r\n            // Make API request to create a new quiz\r\n            const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/tasks/`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    course_id: parseInt(courseId),\r\n                    milestone_id: parseInt(moduleId),\r\n                    type: \"quiz\",\r\n                    title: \"New quiz\",\r\n                    status: \"draft\"\r\n                }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Failed to create quiz: ${response.status}`);\r\n            }\r\n\r\n            // Get the quiz ID from the response\r\n            const data = await response.json();\r\n\r\n            // Update the UI using the abstracted helper function\r\n            addQuizToState(moduleId, data, modules.find(m => m.id === moduleId)?.items.length || 0);\r\n        } catch (error) {\r\n            console.error(\"Error creating quiz:\", error);\r\n            // You might want to show an error message to the user here\r\n        }\r\n    };\r\n\r\n    const deleteItem = (moduleId: string, itemId: string) => {\r\n        setModules(prevModules => prevModules.map(module => {\r\n            if (module.id === moduleId) {\r\n                const filteredItems = module.items.filter(item => item.id !== itemId);\r\n                return {\r\n                    ...module,\r\n                    items: filteredItems.map((item, index) => ({\r\n                        ...item,\r\n                        position: index\r\n                    }))\r\n                };\r\n            }\r\n            return module;\r\n        }));\r\n    };\r\n\r\n    const moveItemUp = (moduleId: string, itemId: string) => {\r\n        setModules(prevModules => prevModules.map(module => {\r\n            if (module.id === moduleId) {\r\n                const index = module.items.findIndex(item => item.id === itemId);\r\n                if (index <= 0) return module;\r\n\r\n                const newItems = [...module.items];\r\n                [newItems[index - 1], newItems[index]] = [newItems[index], newItems[index - 1]];\r\n\r\n                return {\r\n                    ...module,\r\n                    items: newItems.map((item, idx) => ({\r\n                        ...item,\r\n                        position: idx\r\n                    }))\r\n                };\r\n            }\r\n            return module;\r\n        }));\r\n    };\r\n\r\n    const moveItemDown = (moduleId: string, itemId: string) => {\r\n        setModules(prevModules => prevModules.map(module => {\r\n            if (module.id === moduleId) {\r\n                const index = module.items.findIndex(item => item.id === itemId);\r\n                if (index === -1 || index === module.items.length - 1) return module;\r\n\r\n                const newItems = [...module.items];\r\n                [newItems[index], newItems[index + 1]] = [newItems[index + 1], newItems[index]];\r\n\r\n                return {\r\n                    ...module,\r\n                    items: newItems.map((item, idx) => ({\r\n                        ...item,\r\n                        position: idx\r\n                    }))\r\n                };\r\n            }\r\n            return module;\r\n        }));\r\n    };\r\n\r\n    // Open the dialog for editing a learning material or quiz\r\n    const openItemDialog = (moduleId: string, itemId: string) => {\r\n        const module = modules.find(m => m.id === moduleId);\r\n        if (!module) return;\r\n\r\n        const item = module.items.find(i => i.id === itemId);\r\n        if (!item) return;\r\n\r\n        // Ensure quiz items have questions property initialized\r\n        if (item.type === 'quiz' && !item.questions) {\r\n            const updatedItem = {\r\n                ...item,\r\n                questions: [{ id: `question-${Date.now()}`, content: [], config: { ...defaultQuestionConfig } }]\r\n            } as Quiz;\r\n\r\n            // Update the module with the fixed item\r\n            setModules(prevModules =>\r\n                prevModules.map(m =>\r\n                    m.id === moduleId\r\n                        ? {\r\n                            ...m,\r\n                            items: m.items.map(i => i.id === itemId ? updatedItem : i)\r\n                        }\r\n                        : m\r\n                ) as Module[]\r\n            );\r\n\r\n            setActiveItem(updatedItem);\r\n            setActiveModuleId(moduleId);\r\n            setIsPreviewMode(false);\r\n            setIsDialogOpen(true);\r\n        } else if (item.type === 'material') {\r\n            // For learning materials, we don't need to fetch content here\r\n            // The LearningMaterialEditor will fetch its own data using the taskId\r\n            setActiveItem(item);\r\n            setActiveModuleId(moduleId);\r\n            setIsPreviewMode(false);\r\n            setIsDialogOpen(true);\r\n        } else {\r\n            // For other types like exams, just open the dialog\r\n            setActiveItem(item);\r\n            setActiveModuleId(moduleId);\r\n            setIsPreviewMode(false);\r\n            setIsDialogOpen(true);\r\n        }\r\n    };\r\n\r\n    // Close the dialog\r\n    const closeDialog = () => {\r\n        // Dialog confirmation is handled by CourseItemDialog component\r\n        setIsDialogOpen(false);\r\n        setActiveItem(null);\r\n        setActiveModuleId(null);\r\n        setIsEditMode(false);\r\n    };\r\n\r\n    // Cancel edit mode and revert to original state\r\n    const cancelEditMode = () => {\r\n        // For learning materials, the LearningMaterialEditor has already reverted the changes\r\n        // We need to revert the activeItem object to reflect the original state\r\n        if (activeItem && activeModuleId && activeItem.type === 'material') {\r\n            // Find the original module item from modules state\r\n            const module = modules.find(m => m.id === activeModuleId);\r\n            if (module) {\r\n                const originalItem = module.items.find(i => i.id === activeItem.id);\r\n                if (originalItem) {\r\n                    // Reset activeItem to match the original state\r\n                    setActiveItem({\r\n                        ...originalItem\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        // Exit edit mode without saving changes\r\n        setIsEditMode(false);\r\n    };\r\n\r\n    // Add a function to update quiz questions\r\n    const updateQuizQuestions = (moduleId: string, itemId: string, questions: QuizQuestion[]) => {\r\n        setModules(prevModules =>\r\n            prevModules.map(module => {\r\n                if (module.id === moduleId) {\r\n                    return {\r\n                        ...module,\r\n                        items: module.items.map(item => {\r\n                            if (item.id === itemId && item.type === 'quiz') {\r\n                                return {\r\n                                    ...item,\r\n                                    questions\r\n                                } as Quiz;\r\n                            }\r\n                            return item;\r\n                        })\r\n                    };\r\n                }\r\n                return module;\r\n            })\r\n        );\r\n    };\r\n\r\n    // Handle quiz content changes\r\n    const handleQuizContentChange = (questions: QuizQuestion[]) => {\r\n        if (activeItem && activeModuleId && activeItem.type === 'quiz') {\r\n            updateQuizQuestions(activeModuleId, activeItem.id, questions);\r\n        }\r\n    };\r\n\r\n    // Add a new function to handle the actual publishing after confirmation\r\n    const handleConfirmPublish = async () => {\r\n        if (!activeItem || !activeModuleId) {\r\n            console.error(\"Cannot publish: activeItem or activeModuleId is missing\");\r\n            setShowPublishConfirmation(false);\r\n            return;\r\n        }\r\n\r\n        // For learning materials and quizzes, the API call is now handled in their respective components\r\n        // We need to update the modules list to reflect the status change\r\n        // The title update is handled in the CourseItemDialog's onPublishSuccess callback\r\n\r\n        // Update the module item in the modules list with the updated status and title\r\n        updateModuleItemAfterPublish(activeModuleId, activeItem.id, 'published', activeItem.title, activeItem.scheduled_publish_at);\r\n\r\n        // Hide the confirmation dialog\r\n        setShowPublishConfirmation(false);\r\n    };\r\n\r\n    // Add a function to update a module item's status and title\r\n    const updateModuleItemAfterPublish = (moduleId: string, itemId: string, status: string, title: string, scheduled_publish_at: string | null) => {\r\n        setModules(prevModules =>\r\n            prevModules.map(module => {\r\n                if (module.id === moduleId) {\r\n                    return {\r\n                        ...module,\r\n                        items: module.items.map(item => {\r\n                            if (item.id === itemId) {\r\n                                // Get numQuestions from activeItem if available (for quizzes)\r\n                                const numQuestions = activeItem &&\r\n                                    activeItem.type === 'quiz' &&\r\n                                    activeItem.questions ?\r\n                                    activeItem.questions.length : undefined;\r\n\r\n                                return {\r\n                                    ...item,\r\n                                    status,\r\n                                    title,\r\n                                    scheduled_publish_at,\r\n                                    ...(numQuestions !== undefined && item.type === 'quiz' ? { numQuestions } : {})\r\n                                };\r\n                            }\r\n                            return item;\r\n                        })\r\n                    };\r\n                }\r\n                return module;\r\n            })\r\n        );\r\n    };\r\n\r\n    // Add a function to handle canceling the publish action\r\n    const handleCancelPublish = () => {\r\n        setShowPublishConfirmation(false);\r\n    };\r\n\r\n    const saveModuleTitle = async (moduleId: string) => {\r\n        // Find the heading element by data attribute\r\n        const headingElement = document.querySelector(`[data-module-id=\"${moduleId}\"]`) as HTMLHeadingElement;\r\n        if (headingElement) {\r\n            // Get the current content\r\n            const newTitle = headingElement.textContent || \"\";\r\n\r\n            try {\r\n                // Make API call to update the milestone on the server\r\n                const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/milestones/${moduleId}`, {\r\n                    method: 'PUT',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        name: newTitle\r\n                    }),\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(`Failed to update module title: ${response.status}`);\r\n                }\r\n\r\n                // If successful, update the state\r\n                updateModuleTitle(moduleId, newTitle);\r\n                console.log(\"Module title updated successfully\");\r\n\r\n                // Show toast notification\r\n                setToast({\r\n                    show: true,\r\n                    title: 'A makeover',\r\n                    description: `Module name updated successfully`,\r\n                    emoji: '✨'\r\n                });\r\n\r\n                // Auto-hide toast after 3 seconds\r\n                setTimeout(() => {\r\n                    setToast(prev => ({ ...prev, show: false }));\r\n                }, 3000);\r\n            } catch (error) {\r\n                console.error(\"Error updating module title:\", error);\r\n\r\n                // Still update the local state even if the API call fails\r\n                // This provides a better user experience while allowing for retry later\r\n                updateModuleTitle(moduleId, newTitle);\r\n\r\n                // Show error toast\r\n                setToast({\r\n                    show: true,\r\n                    title: 'Update Failed',\r\n                    description: 'Failed to update module title, but changes were saved locally',\r\n                    emoji: '⚠️'\r\n                });\r\n\r\n                // Auto-hide toast after 3 seconds\r\n                setTimeout(() => {\r\n                    setToast(prev => ({ ...prev, show: false }));\r\n                }, 3000);\r\n            }\r\n        }\r\n\r\n        // Turn off editing mode\r\n        toggleModuleEditing(moduleId, false);\r\n    };\r\n\r\n    const cancelModuleEditing = (moduleId: string) => {\r\n        // Find the heading element\r\n        const headingElement = document.querySelector(`[data-module-id=\"${moduleId}\"]`) as HTMLHeadingElement;\r\n        if (headingElement) {\r\n            // Reset the content to the original title from state\r\n            const module = modules.find(m => m.id === moduleId);\r\n            if (module) {\r\n                headingElement.textContent = module.title;\r\n            }\r\n        }\r\n        // Turn off editing mode\r\n        toggleModuleEditing(moduleId, false);\r\n    };\r\n\r\n    // Add this helper function before the return statement\r\n    const hasAnyItems = () => {\r\n        return modules.some(module =>\r\n            module.items.some(item => item.status !== 'draft')\r\n        );\r\n    };\r\n\r\n    // Add these functions for course title editing\r\n    const handleCourseTitleInput = (e: React.FormEvent<HTMLHeadingElement>) => {\r\n        // Just store the current text content, but don't update the state yet\r\n        // This prevents React from re-rendering and resetting the cursor\r\n        const newTitle = e.currentTarget.textContent || \"\";\r\n\r\n        // We'll update the state when the user finishes editing\r\n    };\r\n\r\n    const saveCourseTitle = () => {\r\n        if (titleRef.current) {\r\n            const newTitle = titleRef.current.textContent || \"\";\r\n\r\n            // Make a PUT request to update the course name\r\n            fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/courses/${courseId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    name: newTitle\r\n                })\r\n            })\r\n                .then(response => {\r\n                    if (!response.ok) {\r\n                        throw new Error(`Failed to update course: ${response.status}`);\r\n                    }\r\n                    return response.json();\r\n                })\r\n                .then(data => {\r\n                    // Update the course title in the UI\r\n                    setCourseTitle(newTitle);\r\n                })\r\n                .catch(err => {\r\n                    console.error(\"Error updating course:\", err);\r\n                    // Revert to the original title in case of error\r\n                    if (titleRef.current) {\r\n                        titleRef.current.textContent = courseTitle;\r\n                    }\r\n                });\r\n\r\n            setIsCourseTitleEditing(false);\r\n        }\r\n    };\r\n\r\n    const cancelCourseTitleEditing = () => {\r\n        if (titleRef.current) {\r\n            titleRef.current.textContent = courseTitle;\r\n        }\r\n        setIsCourseTitleEditing(false);\r\n    };\r\n\r\n    // Helper function to set cursor at the end of a contentEditable element\r\n    const setCursorToEnd = (element: HTMLElement) => {\r\n        if (!element) return;\r\n\r\n        const range = document.createRange();\r\n        const selection = window.getSelection();\r\n\r\n        // Clear any existing selection first\r\n        selection?.removeAllRanges();\r\n\r\n        // Set range to end of content\r\n        range.selectNodeContents(element);\r\n        range.collapse(false); // false means collapse to end\r\n\r\n        // Apply the selection\r\n        selection?.addRange(range);\r\n        element.focus();\r\n    };\r\n\r\n    // For course title editing\r\n    const enableCourseTitleEditing = () => {\r\n        setIsCourseTitleEditing(true);\r\n\r\n        // Need to use setTimeout to ensure the element is editable before focusing\r\n        setTimeout(() => {\r\n            if (titleRef.current) {\r\n                setCursorToEnd(titleRef.current);\r\n            }\r\n        }, 0);\r\n    };\r\n\r\n    // For module title editing\r\n    const enableModuleEditing = (moduleId: string) => {\r\n        toggleModuleEditing(moduleId, true);\r\n\r\n        // More reliable method to set cursor at end with a sufficient delay\r\n        setTimeout(() => {\r\n            const moduleElement = document.querySelector(`h2[contenteditable=\"true\"]`) as HTMLElement;\r\n            if (moduleElement && moduleElement.textContent) {\r\n                // Create a text node at the end for more reliable cursor placement\r\n                const textNode = moduleElement.firstChild;\r\n                if (textNode) {\r\n                    const selection = window.getSelection();\r\n                    const range = document.createRange();\r\n\r\n                    // Place cursor at the end of the text\r\n                    range.setStart(textNode, textNode.textContent?.length || 0);\r\n                    range.setEnd(textNode, textNode.textContent?.length || 0);\r\n\r\n                    selection?.removeAllRanges();\r\n                    selection?.addRange(range);\r\n                }\r\n                moduleElement.focus();\r\n            }\r\n        }, 100); // Increased delay for better reliability\r\n    };\r\n\r\n    // Modified function to enable edit mode\r\n    const enableEditMode = () => {\r\n        setIsEditMode(true);\r\n\r\n        // Focus the title for editing is now handled in CourseModuleList\r\n    };\r\n\r\n    // Save the current item\r\n    const saveItem = async () => {\r\n        if (!activeItem || !activeModuleId) return;\r\n\r\n        // Update the modules state to reflect any changes in the UI\r\n        setModules(prevModules =>\r\n            prevModules.map(module => {\r\n                if (module.id === activeModuleId) {\r\n                    return {\r\n                        ...module,\r\n                        items: module.items.map(item => {\r\n                            if (item.id === activeItem.id) {\r\n                                // Common properties to update for all item types\r\n                                const commonUpdates = {\r\n                                    title: activeItem.title,\r\n                                    scheduled_publish_at: activeItem.scheduled_publish_at\r\n                                };\r\n\r\n                                // Create updated items based on type with proper type assertions\r\n                                if (item.type === 'material' && activeItem.type === 'material') {\r\n                                    return {\r\n                                        ...item,\r\n                                        ...commonUpdates,\r\n                                        content: activeItem.content\r\n                                    };\r\n                                } else if (item.type === 'quiz' && activeItem.type === 'quiz') {\r\n                                    return {\r\n                                        ...item,\r\n                                        ...commonUpdates,\r\n                                        questions: activeItem.questions\r\n                                    };\r\n                                }\r\n\r\n                                // Default case - update common properties\r\n                                return {\r\n                                    ...item,\r\n                                    ...commonUpdates\r\n                                };\r\n                            }\r\n                            return item;\r\n                        })\r\n                    };\r\n                }\r\n                return module;\r\n            })\r\n        );\r\n\r\n        // Exit edit mode\r\n        setIsEditMode(false);\r\n    };\r\n\r\n    const handleCohortSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const query = e.target.value;\r\n        setCohortSearchQuery(query);\r\n\r\n        // Always filter the existing cohorts client-side\r\n        if (cohorts.length > 0) {\r\n            if (query.trim() === '') {\r\n                // Show all available cohorts\r\n                setFilteredCohorts(cohorts);\r\n            } else {\r\n                // Filter by search query\r\n                const filtered = cohorts.filter(cohort =>\r\n                    cohort.name.toLowerCase().includes(query.toLowerCase())\r\n                );\r\n                setFilteredCohorts(filtered);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Update fetchCohorts to only be called once when dialog opens\r\n    const fetchCohorts = async () => {\r\n        try {\r\n            setIsLoadingCohorts(true);\r\n            setCohortError(null);\r\n\r\n            // First, fetch cohorts that are already assigned to this course\r\n            const courseCohortResponse = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/courses/${courseId}/cohorts`);\r\n            let assignedCohortIds: number[] = [];\r\n\r\n            if (courseCohortResponse.ok) {\r\n                const courseCohortData = await courseCohortResponse.json();\r\n                assignedCohortIds = courseCohortData.map((cohort: { id: number }) => cohort.id);\r\n                setCourseCohorts(courseCohortData);\r\n            }\r\n\r\n            // Then, fetch all cohorts for the organization\r\n            const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/cohorts/?org_id=${schoolId}`);\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Failed to fetch cohorts: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            // Store the total number of cohorts in the school\r\n            setTotalSchoolCohorts(data.length);\r\n\r\n            // Filter out cohorts that are already assigned to the course\r\n            const availableCohorts = data.filter((cohort: { id: number }) =>\r\n                !assignedCohortIds.includes(cohort.id)\r\n            );\r\n\r\n            setCohorts(availableCohorts);\r\n\r\n            // Set all available cohorts as filtered cohorts initially\r\n            setFilteredCohorts(availableCohorts);\r\n\r\n            setIsLoadingCohorts(false);\r\n        } catch (error) {\r\n            console.error(\"Error fetching cohorts:\", error);\r\n            setCohortError(\"Failed to load cohorts. Please try again later.\");\r\n            setIsLoadingCohorts(false);\r\n        }\r\n    };\r\n\r\n    // Function to select a cohort\r\n    const selectCohort = (cohort: any) => {\r\n        // Set the selected cohort (replacing any previous selection)\r\n        setSelectedCohort(cohort);\r\n    };\r\n\r\n    // Update to publish to selected cohort\r\n    const publishCourseToSelectedCohort = async () => {\r\n        if (!selectedCohort) {\r\n            setShowPublishDialog(false);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setCohortError(null);\r\n\r\n            // Show loading state\r\n            setIsLoadingCohorts(true);\r\n\r\n            // Link the course to the selected cohort\r\n            await linkCourseToCohort(selectedCohort.id, selectedCohort.name, dripConfig);\r\n            setDripConfig(undefined);\r\n        } catch (error) {\r\n            console.error(\"Error publishing course:\", error);\r\n            setCohortError(\"Failed to publish course. Please try again later.\");\r\n        } finally {\r\n            setIsLoadingCohorts(false);\r\n        }\r\n    };\r\n\r\n    // Create a reusable function for linking a course to cohorts\r\n    const linkCourseToCohort = async (\r\n        cohortId: number,\r\n        cohortName: string,\r\n        dripConfig?: DripConfig\r\n    ) => {\r\n        // Make a single API call with all cohort IDs and drip config\r\n        const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/courses/${courseId}/cohorts`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                cohort_ids: [cohortId],\r\n                drip_config: dripConfig\r\n            }),\r\n        });\r\n\r\n        // Check if the request failed\r\n        if (!response.ok) {\r\n            throw new Error(`Failed to link course to cohorts: ${response.status}`);\r\n        }\r\n\r\n        // Update cohort details for the celebration - use the first cohort for single cohort display\r\n        setCelebrationDetails({\r\n            cohortId: cohortId,\r\n            cohortName: cohortName\r\n        });\r\n\r\n        if (showPublishDialog) {\r\n            setShowPublishDialog(false);\r\n        }\r\n\r\n        // Show the celebratory banner\r\n        setShowCelebratoryBanner(true);\r\n\r\n        // Reset selection\r\n        setSelectedCohort(null);\r\n\r\n        // Refresh the displayed cohorts\r\n        fetchCourseCohorts();\r\n    };\r\n\r\n    // Function to fetch cohorts assigned to this course\r\n    const fetchCourseCohorts = async () => {\r\n        try {\r\n            setIsLoadingCourseCohorts(true);\r\n            const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/courses/${courseId}/cohorts`);\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Failed to fetch course cohorts: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            setCourseCohorts(data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching course cohorts:\", error);\r\n            // Silently fail - don't show an error message to the user\r\n        } finally {\r\n            setIsLoadingCourseCohorts(false);\r\n        }\r\n    };\r\n\r\n    // Add a new function to initiate cohort removal with confirmation\r\n    const initiateCohortRemoval = (cohortId: number, cohortName: string) => {\r\n        setCohortToRemove({ id: cohortId, name: cohortName });\r\n        setShowRemoveCohortConfirmation(true);\r\n    };\r\n\r\n    // Modify the existing removeCohortFromCourse function to handle the actual removal\r\n    const removeCohortFromCourse = async (cohortId: number) => {\r\n        try {\r\n            const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/courses/${courseId}/cohorts`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    cohort_ids: [cohortId]\r\n                }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Failed to remove cohort from course: ${response.status}`);\r\n            }\r\n\r\n            // Show success toast\r\n            setToast({\r\n                show: true,\r\n                title: 'Cohort unlinked',\r\n                description: `This course has been removed from \"${cohortToRemove?.name}\"`,\r\n                emoji: '🔓'\r\n            });\r\n\r\n            // Auto-hide toast after 5 seconds\r\n            setTimeout(() => {\r\n                setToast(prev => ({ ...prev, show: false }));\r\n            }, 5000);\r\n\r\n            // Refresh the displayed cohorts\r\n            fetchCourseCohorts();\r\n\r\n            // Reset the confirmation state\r\n            setShowRemoveCohortConfirmation(false);\r\n            setCohortToRemove(null);\r\n        } catch (error) {\r\n            console.error(\"Error removing cohort from course:\", error);\r\n\r\n            // Show error toast\r\n            setToast({\r\n                show: true,\r\n                title: 'Error',\r\n                description: 'Failed to unlink cohort. Please try again.',\r\n                emoji: '❌'\r\n            });\r\n\r\n            // Auto-hide toast after 5 seconds\r\n            setTimeout(() => {\r\n                setToast(prev => ({ ...prev, show: false }));\r\n            }, 5000);\r\n\r\n            // Reset the confirmation state even on error\r\n            setShowRemoveCohortConfirmation(false);\r\n            setCohortToRemove(null);\r\n        }\r\n    };\r\n\r\n    // Add toast close handler\r\n    const handleCloseToast = () => {\r\n        setToast(prev => ({ ...prev, show: false }));\r\n    };\r\n\r\n    // Add handler for closing the celebratory banner\r\n    const closeCelebratoryBanner = () => {\r\n        setShowCelebratoryBanner(false);\r\n    };\r\n\r\n    // Update to handle dialog opening from either button\r\n    const openCohortSelectionDialog = async (origin: 'publish' | 'add') => {\r\n        // For publish action, check if we need to auto-create a cohort\r\n        if (origin === 'publish') {\r\n            try {\r\n                // First, fetch all cohorts for the organization to check if any exist\r\n                const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/cohorts/?org_id=${schoolId}`);\r\n\r\n                if (response.ok) {\r\n                    const allCohorts = await response.json();\r\n\r\n                    // If no cohorts exist at all, auto-create one and publish\r\n                    if (allCohorts.length === 0) {\r\n                        openCreateCohortDialog();\r\n                        return;\r\n                    }\r\n\r\n                    // Check cohorts already assigned to this course\r\n                    const courseCohortResponse = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/courses/${courseId}/cohorts`);\r\n                    let assignedCohortIds: number[] = [];\r\n\r\n                    if (courseCohortResponse.ok) {\r\n                        const courseCohortData = await courseCohortResponse.json();\r\n                        assignedCohortIds = courseCohortData.map((cohort: { id: number }) => cohort.id);\r\n                    }\r\n\r\n                    // Filter out cohorts that are already assigned to the course\r\n                    const availableCohorts = allCohorts.filter((cohort: { id: number }) =>\r\n                        !assignedCohortIds.includes(cohort.id)\r\n                    );\r\n\r\n                    // If all cohorts are already assigned, show the dialog (don't auto-create)\r\n                    // The dialog will handle showing the appropriate message and create button\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error checking cohorts:\", error);\r\n                // Fall back to showing the dialog if there's an error\r\n            }\r\n        }\r\n\r\n        // Toggle dialog if clicking the same button that opened it\r\n        if (showPublishDialog && dialogOrigin === origin) {\r\n            // Close the dialog if it's already open with the same origin\r\n            setShowPublishDialog(false);\r\n            setDialogOrigin(null);\r\n        } else {\r\n            // Open the dialog with the new origin\r\n            setDialogOrigin(origin);\r\n            setShowPublishDialog(true);\r\n            setSelectedCohort(null); // Reset selected cohort\r\n            fetchCohorts();\r\n        }\r\n    };\r\n\r\n    // Update to handle dialog closing\r\n    const closeCohortDialog = () => {\r\n        setShowPublishDialog(false);\r\n        setDialogOrigin(null);\r\n        setCohortSearchQuery('');\r\n        setFilteredCohorts([]);\r\n        setCohortError(null);\r\n        setDripConfig(undefined);\r\n    };\r\n\r\n    // Add handler for opening the create cohort dialog directly\r\n    const openCreateCohortDialog = () => {\r\n        // Close the cohort selection dialog first\r\n        setShowPublishDialog(false);\r\n\r\n        // Then open the create cohort dialog\r\n        setShowCreateCohortDialog(true);\r\n    };\r\n\r\n    // Add handler for closing the create cohort dialog\r\n    const closeCreateCohortDialog = () => {\r\n        setShowCreateCohortDialog(false);\r\n    };\r\n\r\n    // Add handler for cohort creation and linking\r\n    const handleCohortCreated = async (cohort: any, dripConfig?: DripConfig) => {\r\n        try {\r\n            // Close the create cohort dialog first\r\n            setShowCreateCohortDialog(false);\r\n\r\n            // Link the course to the newly created cohort using the reusable function\r\n            await linkCourseToCohort(cohort.id, cohort.name, dripConfig);\r\n\r\n\r\n        } catch (error) {\r\n            console.error(\"Error linking course to cohort:\", error);\r\n            // Show error toast\r\n            setToast({\r\n                show: true,\r\n                title: 'Error',\r\n                description: 'Failed to link course to cohort. Please try again.',\r\n                emoji: '❌'\r\n            });\r\n\r\n            // Auto-hide toast after 5 seconds\r\n            setTimeout(() => {\r\n                setToast(prev => ({ ...prev, show: false }));\r\n            }, 5000);\r\n        }\r\n    };\r\n\r\n    // Add useEffect for WebSocket cleanup\r\n    useEffect(() => {\r\n        // Cleanup function\r\n        return () => {\r\n            // Close WebSocket when component unmounts\r\n            if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\r\n                wsRef.current.close();\r\n            }\r\n\r\n            // Clear heartbeat interval\r\n            if (heartbeatIntervalRef.current) {\r\n                clearInterval(heartbeatIntervalRef.current);\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    // Add a useEffect to watch for completion of task generation\r\n    useEffect(() => {\r\n        if (isGenerationComplete) {\r\n            return;\r\n        }\r\n\r\n        // Check if all tasks have been generated\r\n        if (totalTasksToGenerate > 0 && generatedTasksCount === totalTasksToGenerate) {\r\n            // Add final completion message\r\n            setGenerationProgress([\"Course generation complete\"]);\r\n\r\n            // Set generation as complete\r\n            setIsGenerationComplete(true);\r\n\r\n            // Close WebSocket connection when all tasks are completed\r\n            if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\r\n                wsRef.current.close();\r\n                wsRef.current = null;\r\n            }\r\n        }\r\n    }, [generatedTasksCount, totalTasksToGenerate]);\r\n\r\n    // Update the handleGenerationDone function to reset the isGenerationComplete state\r\n    const handleGenerationDone = () => {\r\n        setIsGeneratingCourse(false);\r\n        setIsCourseStructureGenerated(false);\r\n        setGenerationProgress([]);\r\n        setGeneratedTasksCount(0);\r\n        setTotalTasksToGenerate(0);\r\n        setIsGenerationComplete(false);\r\n    };\r\n\r\n    const setupGenerationWebSocket = () => {\r\n        // Set up WebSocket connection for real-time updates\r\n        try {\r\n            const websocketUrl = `${process.env.NEXT_PUBLIC_BACKEND_URL?.replace(/^http/, 'ws')}/ws/course/${courseId}/generation`;\r\n\r\n            // Create new WebSocket and store in ref\r\n            wsRef.current = new WebSocket(websocketUrl);\r\n\r\n            wsRef.current.onopen = () => {\r\n                console.log('WebSocket connection established for course generation');\r\n\r\n                // Set up heartbeat to keep connection alive\r\n                // Typically sending a ping every 30 seconds prevents timeout\r\n                heartbeatIntervalRef.current = setInterval(() => {\r\n                    if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\r\n                        // Send a simple ping message to keep the connection alive\r\n                        wsRef.current.send(JSON.stringify({ type: 'ping' }));\r\n                        console.log('Sent WebSocket heartbeat ping');\r\n                    } else {\r\n                        // Clear the interval if the WebSocket is closed\r\n                        if (heartbeatIntervalRef.current) {\r\n                            clearInterval(heartbeatIntervalRef.current);\r\n                            heartbeatIntervalRef.current = null;\r\n                        }\r\n                    }\r\n                }, 30000); // 30 seconds interval\r\n            };\r\n\r\n            wsRef.current.onmessage = (event) => {\r\n                try {\r\n                    const data = JSON.parse(event.data);\r\n\r\n                    if (data.event === 'module_created') {\r\n                        // Add the new module to the list of modules\r\n                        const newModule: Module = {\r\n                            id: data.module.id.toString(),\r\n                            title: data.module.name,\r\n                            position: data.module.ordering,\r\n                            backgroundColor: data.module.color,\r\n                            isExpanded: true,\r\n                            isEditing: false,\r\n                            items: []\r\n                        };\r\n\r\n                        setModules(prevModules => [...prevModules, newModule]);\r\n                    } else if (data.event === 'course_structure_completed') {\r\n                        // Course structure generation is complete\r\n                        const jobId = data.job_id;\r\n\r\n                        setGenerationProgress(prev => [...prev, \"Course plan complete\", \"Generating learning materials and quizzes\"]);\r\n                        setIsCourseStructureGenerated(true);\r\n                        setGeneratedTasksCount(0); // Reset counter when starting task generation\r\n\r\n                        // Now we can start the task generation\r\n                        fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/ai/generate/course/${courseId}/tasks`, {\r\n                            method: 'POST',\r\n                            headers: {\r\n                                'Content-Type': 'application/json',\r\n                            },\r\n                            body: JSON.stringify({\r\n                                job_uuid: jobId\r\n                            }),\r\n                        }).then(response => {\r\n                            if (!response.ok) {\r\n                                throw new Error(`Failed to generate tasks: ${response.status}`);\r\n                            }\r\n                            return response.json();\r\n                        }).catch(error => {\r\n                            console.error('Error generating tasks:', error);\r\n                            // Handle error appropriately\r\n                            if (wsRef.current) {\r\n                                wsRef.current.close();\r\n                                wsRef.current = null;\r\n                            }\r\n                            setGenerationProgress(prev => [...prev, \"Error generating tasks. Please try again.\"]);\r\n                        });\r\n                    } else if (data.event === 'task_created') {\r\n                        // Increment the generated tasks counter\r\n                        setTotalTasksToGenerate(prev => prev + 1);\r\n\r\n                        // Add the new task to the appropriate module\r\n                        setModules(prevModules => {\r\n                            return prevModules.map(module => {\r\n                                if (module.id === data.task.module_id.toString()) {\r\n                                    // Create appropriate item based on type\r\n                                    let newItem: ModuleItem;\r\n\r\n                                    if (data.task.type === 'learning_material') {\r\n                                        newItem = {\r\n                                            id: data.task.id.toString(),\r\n                                            title: data.task.name,\r\n                                            position: data.task.ordering,\r\n                                            type: 'material',\r\n                                            content: [],\r\n                                            status: 'draft',\r\n                                            scheduled_publish_at: null,\r\n                                            isGenerating: true\r\n                                        } as LearningMaterial;\r\n                                    } else {\r\n                                        newItem = {\r\n                                            id: data.task.id.toString(),\r\n                                            title: data.task.name,\r\n                                            position: data.task.ordering,\r\n                                            type: 'quiz',\r\n                                            questions: [],\r\n                                            status: 'draft',\r\n                                            scheduled_publish_at: null,\r\n                                            isGenerating: true\r\n                                        } as Quiz;\r\n                                    }\r\n\r\n                                    return {\r\n                                        ...module,\r\n                                        items: [...module.items, newItem]\r\n                                    };\r\n                                }\r\n                                return module;\r\n                            });\r\n                        });\r\n                    } else if (data.event === 'task_completed') {\r\n                        setGeneratedTasksCount(data.total_completed);\r\n\r\n                        // Mark this specific task as no longer generating\r\n                        const taskId = data.task.id.toString();\r\n\r\n                        // Update the module item to remove the isGenerating flag\r\n                        setModules(prevModules => {\r\n                            return prevModules.map(module => {\r\n                                // Update items in this module\r\n                                const updatedItems = module.items.map(item => {\r\n                                    if (item.id === taskId) {\r\n                                        return {\r\n                                            ...item,\r\n                                            isGenerating: false\r\n                                        };\r\n                                    }\r\n                                    return item;\r\n                                });\r\n\r\n                                return {\r\n                                    ...module,\r\n                                    items: updatedItems\r\n                                };\r\n                            });\r\n                        });\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error processing WebSocket message:', error);\r\n                }\r\n            };\r\n\r\n            wsRef.current.onerror = (error) => {\r\n                console.error('WebSocket error:', error);\r\n                setGenerationProgress(prev => [...prev, \"There was an error generating your course. Please try again.\"]);\r\n            };\r\n\r\n            wsRef.current.onclose = () => {\r\n                console.log('WebSocket connection closed');\r\n\r\n                // Clear heartbeat interval\r\n                if (heartbeatIntervalRef.current) {\r\n                    clearInterval(heartbeatIntervalRef.current);\r\n                    heartbeatIntervalRef.current = null;\r\n                }\r\n\r\n                // Attempt to reconnect if generation is still in progress\r\n                if (isGeneratingCourseRef.current &&\r\n                    totalTasksToGenerateRef.current > 0 &&\r\n                    generatedTasksCountRef.current < totalTasksToGenerateRef.current) {\r\n\r\n                    console.log('Generation still in progress. Attempting to reconnect...');\r\n                    // Add a small delay before attempting to reconnect\r\n                    setTimeout(() => {\r\n                        // Try to setup a new WebSocket connection\r\n                        const ws = setupGenerationWebSocket();\r\n                        if (ws) {\r\n                            wsRef.current = ws;\r\n                            console.log('WebSocket reconnection successful');\r\n                        } else {\r\n                            console.error('WebSocket reconnection failed');\r\n                        }\r\n                    }, 500); // small delay before reconnection attempt\r\n                }\r\n            };\r\n\r\n            return wsRef.current;\r\n        } catch (wsError) {\r\n            console.error('Error setting up WebSocket:', wsError);\r\n        }\r\n    }\r\n\r\n\r\n    // Add handler for AI course generation\r\n    const handleGenerateCourse = async (data: GenerateWithAIFormData) => {\r\n        if (!data.referencePdf) {\r\n            throw new Error('Reference material is required');\r\n        }\r\n\r\n        try {\r\n            // Close the dialog first\r\n            setShowGenerateDialog(false);\r\n\r\n            // Set generating state and initialize with first progress message\r\n            setIsGeneratingCourse(true);\r\n            setIsCourseStructureGenerated(false);\r\n            setIsGenerationComplete(false); // Reset completion state\r\n\r\n            // Clear any existing WebSocket connection\r\n            if (wsRef.current) {\r\n                wsRef.current.close();\r\n                wsRef.current = null;\r\n            }\r\n\r\n            // Clear any existing heartbeat interval\r\n            if (heartbeatIntervalRef.current) {\r\n                clearInterval(heartbeatIntervalRef.current);\r\n                heartbeatIntervalRef.current = null;\r\n            }\r\n\r\n            // For now, we'll just log the data\r\n            // In a real implementation, this would be an API call to start the generation process\r\n            let presigned_url = '';\r\n            let file_key = '';\r\n\r\n            setGenerationProgress([\"Uploading reference material\"]);\r\n\r\n            try {\r\n                // First, get a presigned URL for the file\r\n                const presignedUrlResponse = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/file/presigned-url/create`, {\r\n                    method: 'PUT',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        content_type: 'application/pdf'\r\n                    })\r\n                });\r\n\r\n                if (!presignedUrlResponse.ok) {\r\n                    throw new Error('Failed to get presigned URL');\r\n                }\r\n\r\n                const presignedData = await presignedUrlResponse.json();\r\n\r\n                console.log('Presigned url generated');\r\n                presigned_url = presignedData.presigned_url;\r\n                file_key = presignedData.file_key;\r\n\r\n            } catch (error) {\r\n                console.error(\"Error getting presigned URL for file:\", error);\r\n            }\r\n\r\n            if (!presigned_url) {\r\n                // If we couldn't get a presigned URL, try direct upload to the backend\r\n                try {\r\n                    console.log(\"Attempting direct upload to backend\");\r\n\r\n                    // Create FormData for the file upload\r\n                    const formData = new FormData();\r\n                    formData.append('file', data.referencePdf, 'reference_material.pdf');\r\n                    formData.append('content_type', 'application/pdf');\r\n\r\n                    // Upload directly to the backend\r\n                    const uploadResponse = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/file/upload-local`, {\r\n                        method: 'POST',\r\n                        body: formData\r\n                    });\r\n\r\n                    if (!uploadResponse.ok) {\r\n                        throw new Error(`Failed to upload audio to backend: ${uploadResponse.status}`);\r\n                    }\r\n\r\n                    const uploadData = await uploadResponse.json();\r\n                    file_key = uploadData.file_key;\r\n\r\n                    console.log('Reference material uploaded successfully to backend');\r\n                } catch (error) {\r\n                    console.error('Error with direct upload to backend:', error);\r\n                    throw error;\r\n                }\r\n            } else {\r\n\r\n                // Upload the file to S3 using the presigned URL\r\n                try {\r\n                    // Use data.referencePdf instead of undefined 'file' variable\r\n                    const pdfFile = data.referencePdf;\r\n\r\n                    // Upload to S3 using the presigned URL\r\n                    const uploadResponse = await fetch(presigned_url, {\r\n                        method: 'PUT',\r\n                        body: pdfFile, // Use the file directly, no need to create a Blob\r\n                        headers: {\r\n                            'Content-Type': 'application/pdf'\r\n                        }\r\n                    });\r\n\r\n                    if (!uploadResponse.ok) {\r\n                        throw new Error(`Failed to upload file to S3: ${uploadResponse.status}`);\r\n                    }\r\n\r\n                    console.log('File uploaded successfully to S3');\r\n                } catch (error) {\r\n                    console.error('Error uploading file to S3:', error);\r\n                    throw error;\r\n                }\r\n            }\r\n\r\n            setGenerationProgress([\"Uploaded reference material\", 'Generating course plan']);\r\n\r\n            // Set up WebSocket connection for real-time updates\r\n            const ws = setupGenerationWebSocket()\r\n\r\n            if (!ws) {\r\n                throw new Error('Failed to setup WebSocket connection');\r\n            }\r\n\r\n            wsRef.current = ws;\r\n\r\n            let jobId = '';\r\n\r\n            // Make API request to generate course structure\r\n            try {\r\n                let response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/ai/generate/course/${courseId}/structure`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        course_description: data.courseDescription,\r\n                        intended_audience: data.intendedAudience,\r\n                        instructions: data.instructionsForAI || undefined,\r\n                        reference_material_s3_key: file_key\r\n                    }),\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    // Close WebSocket on API error\r\n                    if (wsRef.current) {\r\n                        wsRef.current.close();\r\n                        wsRef.current = null;\r\n                    }\r\n                    throw new Error(`Failed to generate course: ${response.status}`);\r\n                }\r\n\r\n                const result = await response.json();\r\n\r\n                // We'll set a listener for the course structure completion\r\n                // instead of immediately setting it as complete\r\n\r\n                // Wait for the WebSocket to notify that the course structure is complete\r\n                // Instead of immediately calling the tasks endpoint\r\n            } catch (error) {\r\n                console.error('Error making course generation API request:', error);\r\n                // Close WebSocket on API error\r\n                if (wsRef.current) {\r\n                    wsRef.current.close();\r\n                    wsRef.current = null;\r\n                }\r\n                throw error;\r\n            }\r\n        } catch (error) {\r\n            console.error('Error generating course:', error);\r\n\r\n            // Clean up WebSocket\r\n            if (wsRef.current) {\r\n                wsRef.current.close();\r\n                wsRef.current = null;\r\n            }\r\n\r\n            // Clear heartbeat interval\r\n            if (heartbeatIntervalRef.current) {\r\n                clearInterval(heartbeatIntervalRef.current);\r\n                heartbeatIntervalRef.current = null;\r\n            }\r\n\r\n            // Add error message to progress\r\n            setGenerationProgress(prev => [...prev, \"There was an error generating your course. Please try again.\"]);\r\n\r\n            // Reset generating state after delay\r\n            setTimeout(() => {\r\n                setIsGeneratingCourse(false);\r\n                setIsCourseStructureGenerated(false);\r\n                setGenerationProgress([]);\r\n            }, 3000);\r\n\r\n            return Promise.reject(error);\r\n        }\r\n    };\r\n\r\n    // Add handler for copying cohort invite link\r\n    const handleCopyCohortInviteLink = async (cohortId: number, cohortName: string) => {\r\n        try {\r\n            const inviteLink = `${window.location.origin}/school/${schoolSlug}/join?cohortId=${cohortId}`;\r\n            await navigator.clipboard.writeText(inviteLink);\r\n\r\n            // Show success toast\r\n            setToast({\r\n                show: true,\r\n                title: 'Link copied',\r\n                description: `Share this link with your learners to let them join this cohort`,\r\n                emoji: '📋'\r\n            });\r\n\r\n            // Auto-hide toast after 3 seconds\r\n            setTimeout(() => {\r\n                setToast(prev => ({ ...prev, show: false }));\r\n            }, 3000);\r\n        } catch (error) {\r\n            console.error('Failed to copy to clipboard:', error);\r\n\r\n            // Show error toast\r\n            setToast({\r\n                show: true,\r\n                title: 'Copy failed',\r\n                description: 'Unable to copy invite link to clipboard',\r\n                emoji: '❌'\r\n            });\r\n\r\n            // Auto-hide toast after 3 seconds\r\n            setTimeout(() => {\r\n                setToast(prev => ({ ...prev, show: false }));\r\n            }, 3000);\r\n        }\r\n    };\r\n\r\n    // Function to handle opening settings dialog\r\n    const handleOpenSettingsDialog = (cohort: any) => {\r\n        setSelectedCohortForSettings(cohort);\r\n    };\r\n\r\n    // Function to close settings dialog\r\n    const handleCloseSettingsDialog = () => {\r\n        setSelectedCohortForSettings(null);\r\n    };\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-black\">\r\n            {/* Use the reusable Header component with showCreateCourseButton set to false */}\r\n            <Header showCreateCourseButton={false} />\r\n\r\n            {/* Add overlay when course is being generated */}\r\n            {isGeneratingCourse && !isCourseStructureGenerated && (\r\n                <div className=\"fixed inset-0 bg-black/70 backdrop-blur-[1px] z-40 flex items-center justify-center pointer-events-auto\">\r\n\r\n                </div>\r\n            )}\r\n\r\n            {/* Show spinner when loading */}\r\n            {isLoading ? (\r\n                <div className=\"flex justify-center items-center h-[calc(100vh-80px)]\">\r\n                    <div className=\"w-16 h-16 border-t-2 border-b-2 border-white rounded-full animate-spin\"></div>\r\n                </div>\r\n            ) : (\r\n                /* Main content area - only shown after loading */\r\n                <div className=\"py-12 grid grid-cols-5 gap-6\">\r\n                    <div className=\"max-w-5xl ml-24 col-span-4 relative\">\r\n                        {/* Back to Courses button */}\r\n                        <Link\r\n                            href={`/school/admin/${schoolId}#courses`}\r\n                            className=\"inline-flex items-center text-gray-400 hover:text-white transition-colors mb-4\"\r\n                        >\r\n                            <ArrowLeft size={16} className=\"mr-2 text-sm\" />\r\n                            Back to courses\r\n                        </Link>\r\n\r\n                        <div className=\"flex items-center justify-between mb-8\">\r\n                            {error ? (\r\n                                <h1 className=\"text-4xl font-light text-red-400 w-3/4 mr-8\">\r\n                                    {error}\r\n                                </h1>\r\n                            ) : (\r\n                                <div className=\"flex items-center w-3/4 mr-8\">\r\n                                    <h1\r\n                                        ref={titleRef}\r\n                                        contentEditable={isCourseTitleEditing}\r\n                                        suppressContentEditableWarning\r\n                                        onInput={handleCourseTitleInput}\r\n                                        onKeyDown={handleKeyDown}\r\n                                        className={`text-4xl font-light text-white outline-none ${isCourseTitleEditing ? 'border-b border-gray-700 pb-1' : ''}`}\r\n                                        autoFocus={isCourseTitleEditing}\r\n                                    >\r\n                                        {courseTitle}\r\n                                    </h1>\r\n\r\n                                    {/* Add published pill when course is in at least one cohort */}\r\n                                    {!isCourseTitleEditing && courseCohorts.length > 0 && (\r\n                                        <div className=\"ml-4 px-3 py-1 bg-green-800/70 text-white text-xs rounded-full\">\r\n                                            Published\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n\r\n                            <div className=\"flex items-center space-x-3 ml-auto\">\r\n                                {isCourseTitleEditing ? (\r\n                                    <>\r\n                                        <button\r\n                                            className=\"flex items-center px-6 py-2 text-sm font-medium text-white bg-transparent border-2 !border-[#4F46E5] hover:bg-[#222222] outline-none rounded-full transition-all cursor-pointer shadow-md\"\r\n                                            onClick={saveCourseTitle}\r\n                                        >\r\n                                            <span className=\"mr-2 text-base\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                                                    <path d=\"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z\"></path>\r\n                                                    <polyline points=\"17 21 17 13 7 13 7 21\"></polyline>\r\n                                                    <polyline points=\"7 3 7 8 15 8\"></polyline>\r\n                                                </svg>\r\n                                            </span>\r\n                                            <span className=\"drop-shadow-[0_1px_1px_rgba(0,0,0,0.5)]\">Save</span>\r\n                                        </button>\r\n                                        <button\r\n                                            className=\"flex items-center px-6 py-2 text-sm font-medium text-white bg-transparent border-2 !border-[#6B7280] hover:bg-[#222222] outline-none rounded-full transition-all cursor-pointer shadow-md\"\r\n                                            onClick={cancelCourseTitleEditing}\r\n                                        >\r\n                                            <span className=\"mr-2 text-base\">\r\n                                                <X size={16} />\r\n                                            </span>\r\n                                            <span className=\"drop-shadow-[0_1px_1px_rgba(0,0,0,0.5)]\">Cancel</span>\r\n                                        </button>\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <button\r\n                                            className=\"flex items-center px-6 py-2 text-sm font-medium text-white bg-transparent border-2 !border-[#4F46E5] hover:bg-[#222222] outline-none rounded-full transition-all cursor-pointer shadow-md\"\r\n                                            onClick={enableCourseTitleEditing}\r\n                                        >\r\n                                            <span className=\"mr-2 text-base\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                                                    <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path>\r\n                                                    <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>\r\n                                                </svg>\r\n                                            </span>\r\n                                            <span className=\"drop-shadow-[0_1px_1px_rgba(0,0,0,0.5)]\">Edit</span>\r\n                                        </button>\r\n                                        <button\r\n                                            className=\"flex items-center px-6 py-2 text-sm font-medium text-white bg-transparent border-2 !border-[#EF4444] hover:bg-[#222222] outline-none rounded-full transition-all cursor-pointer shadow-md\"\r\n                                            onClick={() => {\r\n                                                // Open preview in a new tab\r\n                                                window.open(`/school/admin/${schoolId}/courses/${courseId}/preview`, '_blank');\r\n                                            }}\r\n                                        >\r\n                                            <span className=\"mr-2 text-base\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                                                    <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path>\r\n                                                    <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\r\n                                                </svg>\r\n                                            </span>\r\n                                            <span className=\"drop-shadow-[0_1px_1px_rgba(0,0,0,0.5)]\">Preview</span>\r\n                                        </button>\r\n\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button\r\n                            onClick={() => addModule(courseId, schoolId, modules, setModules, setActiveModuleId, lastUsedColorIndex, setLastUsedColorIndex)}\r\n                            className=\"mb-6 px-6 py-2 bg-white text-black text-sm font-medium rounded-full hover:opacity-90 transition-opacity focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-100 cursor-pointer\"\r\n                        >\r\n                            Add module\r\n                        </button>\r\n\r\n                        <CourseModuleList\r\n                            data-testid=\"course-module-list\"\r\n                            modules={modules}\r\n                            mode=\"edit\"\r\n                            onToggleModule={toggleModule}\r\n                            onOpenItem={openItemDialog}\r\n                            onMoveItemUp={moveItemUp}\r\n                            onMoveItemDown={moveItemDown}\r\n                            onDeleteItem={deleteItem}\r\n                            onAddLearningMaterial={addLearningMaterial}\r\n                            onAddQuiz={addQuiz}\r\n                            onMoveModuleUp={moveModuleUp}\r\n                            onMoveModuleDown={moveModuleDown}\r\n                            onDeleteModule={deleteModule}\r\n                            onEditModuleTitle={enableModuleEditing}\r\n                            saveModuleTitle={saveModuleTitle}\r\n                            cancelModuleEditing={cancelModuleEditing}\r\n                            isDialogOpen={isDialogOpen}\r\n                            activeItem={activeItem}\r\n                            activeModuleId={activeModuleId}\r\n                            isEditMode={isEditMode}\r\n                            isPreviewMode={isPreviewMode}\r\n                            showPublishConfirmation={showPublishConfirmation}\r\n                            handleConfirmPublish={handleConfirmPublish}\r\n                            handleCancelPublish={handleCancelPublish}\r\n                            closeDialog={closeDialog}\r\n                            saveItem={saveItem}\r\n                            cancelEditMode={cancelEditMode}\r\n                            enableEditMode={enableEditMode}\r\n                            handleQuizContentChange={handleQuizContentChange}\r\n                            setShowPublishConfirmation={setShowPublishConfirmation}\r\n                            schoolId={schoolId}\r\n                            courseId={courseId}\r\n                            onDuplicateItem={handleDuplicateItem}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* Display cohorts assigned to this course */}\r\n                    {hasAnyItems() && (\r\n                        <div className=\"mt-10\">\r\n                            <div className=\"relative\">\r\n                                <button\r\n                                    ref={publishButtonRef}\r\n                                    data-dropdown-toggle=\"true\"\r\n                                    className=\"flex items-center px-6 py-2 text-sm font-medium text-white bg-[#016037] border-0 hover:bg-[#017045] outline-none rounded-full transition-all cursor-pointer shadow-md\"\r\n                                    onClick={() => openCohortSelectionDialog('publish')}\r\n                                >\r\n                                    <span className=\"mr-2 text-base\">🚀</span>\r\n                                    <span className=\"drop-shadow-[0_1px_1px_rgba(0,0,0,0.5)]\">Share with learners</span>\r\n                                </button>\r\n                            </div>\r\n\r\n                            {!isLoadingCourseCohorts && courseCohorts.length > 0 && (\r\n                                <div className=\"mt-10\">\r\n                                    <h2 className=\"text-sm font-light text-gray-400 mb-1\">Cohorts</h2>\r\n                                    <p className=\"text-xs text-gray-500 mb-3 mr-4\">\r\n                                        View the course settings for each cohort and add learners to it using an invite link from the settings\r\n                                    </p>\r\n                                    <div className=\"flex flex-wrap gap-3\">\r\n                                        {courseCohorts.map((cohort: { id: number; name: string }) => (\r\n                                            <div\r\n                                                key={cohort.id}\r\n                                                className=\"flex items-center bg-[#222] px-4 py-2 rounded-full group hover:bg-[#333] transition-colors\"\r\n                                            >\r\n                                                <Tooltip content=\"Settings\" position=\"top\">\r\n                                                    <button\r\n                                                        onClick={() => handleOpenSettingsDialog(cohort)}\r\n                                                        className=\"text-gray-400 hover:text-white cursor-pointer flex items-center mr-2\"\r\n                                                        aria-label=\"View settings\"\r\n                                                    >\r\n                                                        <Settings size={16} />\r\n                                                    </button>\r\n                                                </Tooltip>\r\n                                                <span className=\"text-white text-sm font-light\">{cohort.name}</span>\r\n                                                <Tooltip content=\"Remove\" position=\"top\">\r\n                                                    <button\r\n                                                        onClick={() => initiateCohortRemoval(cohort.id, cohort.name)}\r\n                                                        className=\"text-gray-400 hover:text-white cursor-pointer flex items-center ml-2\"\r\n                                                        aria-label=\"Remove cohort from course\"\r\n                                                    >\r\n                                                        <X size={16} />\r\n                                                    </button>\r\n                                                </Tooltip>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n\r\n            {/* Generation Progress Window */}\r\n            {isGeneratingCourse && (\r\n                <div className=\"fixed bottom-4 right-4 z-50 w-72 bg-black border border-gray-800 rounded-xl shadow-lg overflow-hidden\">\r\n                    <div className=\"px-5 py-3 bg-[#111111] border-b border-gray-800 flex justify-between items-center\">\r\n                        <div className=\"flex items-center\">\r\n                            <Sparkles size={16} className=\"text-white mr-2\" />\r\n                            <h3 className=\"text-white text-sm font-light\">AI Course Generation</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"p-5 max-h-60 overflow-y-auto space-y-4\">\r\n                        {generationProgress.map((message, index) => {\r\n                            const isLatest = index === generationProgress.length - 1;\r\n\r\n                            // Show spinner only for latest message when generation is not complete\r\n                            const showSpinner = isLatest && !isGenerationComplete;\r\n\r\n                            return (\r\n                                <div key={index} className=\"flex items-center text-sm\">\r\n                                    <div className=\"flex-shrink-0 mr-3\">\r\n                                        {showSpinner ? (\r\n                                            <div className=\"h-5 w-5 flex items-center justify-center\">\r\n                                                <Loader2 className=\"h-4 w-4 animate-spin text-white\" />\r\n                                            </div>\r\n                                        ) : (\r\n                                            <div className=\"h-5 w-5 flex items-center justify-center\">\r\n                                                <Check className=\"h-3 w-3 text-white\" />\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className={`text-${isLatest ? 'white' : 'gray-400'} font-light`}>\r\n                                        {message}\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n\r\n                        {/* Task generation progress bar - only shown after course structure is generated */}\r\n                        {isCourseStructureGenerated && totalTasksToGenerate > 0 && !isGenerationComplete && (\r\n                            <div className=\"mt-2\">\r\n                                <div className=\"flex justify-between text-xs text-gray-400 mb-1\">\r\n                                    <span>{generatedTasksCount} / {totalTasksToGenerate}</span>\r\n                                </div>\r\n                                <div className=\"w-full bg-gray-800 rounded-full h-2.5\">\r\n                                    <div\r\n                                        className=\"bg-green-600 h-2.5 rounded-full transition-all duration-300 ease-in-out\"\r\n                                        style={{ width: `${Math.min(100, (generatedTasksCount / totalTasksToGenerate) * 100)}%` }}\r\n                                    ></div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n\r\n                    </div>\r\n                    {/* Done button - only shown when generation is complete */}\r\n                    {isGenerationComplete && (\r\n                        <div className=\"mb-4 flex justify-center\">\r\n                            <button\r\n                                onClick={handleGenerationDone}\r\n                                className=\"px-6 py-2 bg-white text-black text-sm font-medium rounded-full hover:opacity-90 transition-opacity focus:outline-none cursor-pointer\"\r\n                            >\r\n                                Done\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n\r\n            {/* Floating Action Button - Generate with AI - only shown when not generating */}\r\n            <div className=\"fixed bottom-10 right-10 z-50\">\r\n                {!isGeneratingCourse && !toast.show && !isDialogOpen && (\r\n                    <button\r\n                        className=\"flex items-center px-6 py-3 bg-white text-black text-sm font-medium rounded-full hover:opacity-90 transition-opacity shadow-lg cursor-pointer\"\r\n                        onClick={() => setShowGenerateDialog(true)}\r\n                        disabled={isGeneratingCourse}\r\n                    >\r\n                        <span className=\"mr-2\">\r\n                            <Sparkles size={18} />\r\n                        </span>\r\n                        <span>Generate with AI</span>\r\n                    </button>\r\n                )}\r\n            </div>\r\n\r\n            {/* Render the CourseCohortSelectionDialog */}\r\n            <CourseCohortSelectionDialog\r\n                data-testid=\"cohort-selection-dialog\"\r\n                isOpen={showPublishDialog}\r\n                onClose={closeCohortDialog}\r\n                originButtonRef={dialogOrigin === 'publish' ? publishButtonRef : addCohortButtonRef}\r\n                isPublishing={dialogOrigin === 'publish'}\r\n                onConfirm={publishCourseToSelectedCohort}\r\n                showLoading={isLoadingCohorts}\r\n                hasError={!!cohortError}\r\n                errorMessage={cohortError || ''}\r\n                onRetry={fetchCohorts}\r\n                cohorts={cohorts}\r\n                selectedCohort={selectedCohort}\r\n                onSelectCohort={selectCohort}\r\n                onSearchChange={handleCohortSearch}\r\n                searchQuery={cohortSearchQuery}\r\n                filteredCohorts={filteredCohorts}\r\n                totalSchoolCohorts={totalSchoolCohorts}\r\n                schoolId={schoolId}\r\n                courseId={courseId}\r\n                onCohortCreated={handleCohortCreated}\r\n                onOpenCreateCohortDialog={openCreateCohortDialog}\r\n                onAutoCreateAndPublish={openCreateCohortDialog}\r\n                onDripConfigChange={setDripConfig}\r\n            />\r\n\r\n            {/* Confirmation Dialog for Cohort Removal */}\r\n            <ConfirmationDialog\r\n                data-testid=\"confirmation-dialog\"\r\n                open={showRemoveCohortConfirmation}\r\n                title=\"Remove course from cohort\"\r\n                message={`Are you sure you want to remove this course from \"${cohortToRemove?.name}\"? Learners in that cohort will no longer have access to this course`}\r\n                onConfirm={() => cohortToRemove && removeCohortFromCourse(cohortToRemove.id)}\r\n                onCancel={() => {\r\n                    setShowRemoveCohortConfirmation(false);\r\n                    setCohortToRemove(null);\r\n                }}\r\n                confirmButtonText=\"Remove\"\r\n                type=\"delete\"\r\n            />\r\n\r\n            {/* Toast notification */}\r\n            <Toast\r\n                data-testid=\"toast\"\r\n                show={toast.show}\r\n                title={toast.title}\r\n                description={toast.description}\r\n                emoji={toast.emoji}\r\n                onClose={handleCloseToast}\r\n            />\r\n\r\n            {/* Celebratory Banner for course publication */}\r\n            <CoursePublishSuccessBanner\r\n                data-testid=\"success-banner\"\r\n                isOpen={showCelebratoryBanner}\r\n                onClose={closeCelebratoryBanner}\r\n                cohortId={celebrationDetails.cohortId}\r\n                cohortName={celebrationDetails.cohortName}\r\n                schoolSlug={schoolSlug}\r\n                schoolId={params.id as string}\r\n            />\r\n\r\n            {/* Add the standalone CreateCohortDialog */}\r\n            <CreateCohortDialog\r\n                data-testid=\"create-cohort-dialog\"\r\n                open={showCreateCohortDialog}\r\n                onClose={closeCreateCohortDialog}\r\n                onCreateCohort={handleCohortCreated}\r\n                schoolId={schoolId}\r\n                showDripPublishSettings={true}\r\n            />\r\n\r\n            {/* Generate with AI Dialog */}\r\n            <GenerateWithAIDialog\r\n                data-testid=\"generate-ai-dialog\"\r\n                open={showGenerateDialog}\r\n                onClose={() => setShowGenerateDialog(false)}\r\n                onSubmit={handleGenerateCourse}\r\n            />\r\n\r\n            {/* Add SettingsDialog component */}\r\n            <SettingsDialog\r\n                data-testid=\"settings-dialog\"\r\n                isOpen={!!selectedCohortForSettings}\r\n                onClose={handleCloseSettingsDialog}\r\n                courseName={selectedCohortForSettings?.name}\r\n                dripConfig={{\r\n                    is_drip_enabled: selectedCohortForSettings?.drip_config?.is_drip_enabled,\r\n                    frequency_value: selectedCohortForSettings?.drip_config?.frequency_value,\r\n                    frequency_unit: selectedCohortForSettings?.drip_config?.frequency_unit,\r\n                    publish_at: selectedCohortForSettings?.drip_config?.publish_at\r\n                }}\r\n                schoolId={schoolId}\r\n                courseId={undefined}\r\n                cohortId={selectedCohortForSettings?.id}\r\n                onCopyCohortInviteLink={handleCopyCohortInviteLink}\r\n            />\r\n        </div>\r\n    );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}