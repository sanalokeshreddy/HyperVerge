{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/lib/auth.ts"],"sourcesContent":["\"use client\";\r\n\r\nimport { useSession } from \"next-auth/react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n// Global auth state outside React's lifecycle\r\n// This ensures authentication is managed once per browser session\r\nconst globalAuthState = {\r\n  hasLoggedAuthentication: false,\r\n  knownUserIds: new Set<string>()\r\n};\r\n\r\n// Type declarations are now in /src/types/next-auth.d.ts\r\n\r\nexport const useAuth = () => {\r\n  const { data: session, status } = useSession();\r\n  const [authState, setAuthState] = useState({\r\n    isAuthenticated: false,\r\n    isLoading: true,\r\n    user: null as any\r\n  });\r\n  \r\n  // Process session changes in an effect to control when it happens\r\n  useEffect(() => {\r\n    const isAuthenticated = status === \"authenticated\";\r\n    const isLoading = status === \"loading\";\r\n    \r\n    // Only process authenticated sessions\r\n    if (isAuthenticated && session?.user) {\r\n      const userId = session.user.id;\r\n      \r\n      // Log authentication exactly once per unique user ID\r\n      if (userId && !globalAuthState.knownUserIds.has(userId)) {\r\n        globalAuthState.knownUserIds.add(userId);\r\n      } else if (!userId && !globalAuthState.hasLoggedAuthentication) {\r\n        globalAuthState.hasLoggedAuthentication = true;\r\n      }\r\n    }\r\n    \r\n    // Update the state once\r\n    setAuthState({\r\n      isAuthenticated,\r\n      isLoading,\r\n      user: session?.user\r\n    });\r\n  }, [session, status]);\r\n\r\n  return authState;\r\n};\r\n\r\ninterface GoogleUser {\r\n  email: string;\r\n  name?: string;\r\n  given_name?: string;\r\n  family_name?: string;\r\n  image?: string;\r\n  id?: string;\r\n}\r\n\r\ninterface AuthCredentials {\r\n  user: GoogleUser;\r\n  account: {\r\n    access_token?: string;\r\n    id_token?: string;\r\n    provider?: string;\r\n  };\r\n}\r\n\r\n"],"names":[],"mappings":";;;AAEA;AACA;AAHA;;;AAKA,8CAA8C;AAC9C,kEAAkE;AAClE,MAAM,kBAAkB;IACtB,yBAAyB;IACzB,cAAc,IAAI;AACpB;AAIO,MAAM,UAAU;IACrB,MAAM,EAAE,MAAM,OAAO,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,0PAAA,CAAA,aAAU,AAAD;IAC3C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAE;QACzC,iBAAiB;QACjB,WAAW;QACX,MAAM;IACR;IAEA,kEAAkE;IAClE,CAAA,GAAA,oTAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,kBAAkB,WAAW;QACnC,MAAM,YAAY,WAAW;QAE7B,sCAAsC;QACtC,IAAI,mBAAmB,SAAS,MAAM;YACpC,MAAM,SAAS,QAAQ,IAAI,CAAC,EAAE;YAE9B,qDAAqD;YACrD,IAAI,UAAU,CAAC,gBAAgB,YAAY,CAAC,GAAG,CAAC,SAAS;gBACvD,gBAAgB,YAAY,CAAC,GAAG,CAAC;YACnC,OAAO,IAAI,CAAC,UAAU,CAAC,gBAAgB,uBAAuB,EAAE;gBAC9D,gBAAgB,uBAAuB,GAAG;YAC5C;QACF;QAEA,wBAAwB;QACxB,aAAa;YACX;YACA;YACA,MAAM,SAAS;QACjB;IACF,GAAG;QAAC;QAAS;KAAO;IAEpB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/lib/course.ts"],"sourcesContent":["import { Task, Milestone } from \"@/types\";\r\nimport { Module, ModuleItem } from \"@/types/course\";\r\n\r\n/**\r\n * Transforms course milestones to module format for consistent UI rendering\r\n * \r\n * @param milestones - Array of course milestones with tasks\r\n * @returns Array of modules with their items\r\n */\r\nexport function transformMilestonesToModules(milestones: Milestone[] | undefined): Module[] {\r\n  if (!milestones || !Array.isArray(milestones)) {\r\n    return [];\r\n  }\r\n\r\n  const transformedModules = milestones.map((milestone: Milestone) => {\r\n    // Map tasks to module items if they exist\r\n    const moduleItems: ModuleItem[] = [];\r\n\r\n    if (milestone.tasks && Array.isArray(milestone.tasks)) {\r\n      milestone.tasks.forEach((task: Task) => {\r\n        if (task.type === 'learning_material') {\r\n          moduleItems.push({\r\n            id: task.id.toString(),\r\n            title: task.title,\r\n            position: task.ordering,\r\n            type: 'material',\r\n            content: task.content || [], // Use content if available or empty array\r\n            status: task.status,\r\n            scheduled_publish_at: task.scheduled_publish_at,\r\n            isGenerating: task.is_generating\r\n          });\r\n        } else if (task.type === 'quiz') {\r\n          moduleItems.push({\r\n            id: task.id.toString(),\r\n            title: task.title,\r\n            position: task.ordering,\r\n            type: 'quiz',\r\n            questions: task.questions || [], // Use questions if available or empty array\r\n            status: task.status,\r\n            numQuestions: task.num_questions,\r\n            scheduled_publish_at: task.scheduled_publish_at,\r\n            isGenerating: task.is_generating\r\n          });\r\n        }\r\n      });\r\n\r\n      // Sort items by position/ordering\r\n      moduleItems.sort((a, b) => a.position - b.position);\r\n    }\r\n\r\n    return {\r\n      id: milestone.id.toString(),\r\n      title: milestone.name,\r\n      position: milestone.ordering,\r\n      items: moduleItems,\r\n      isExpanded: false,\r\n      backgroundColor: `${milestone.color}80`, // Add 50% opacity for UI display\r\n      unlockAt: milestone.unlock_at\r\n    };\r\n  });\r\n\r\n  // Sort modules by position/ordering\r\n  const sortedModules = transformedModules.sort((a, b) => a.position - b.position);\r\n  \r\n  // Set the first module to be expanded by default if modules exist\r\n  if (sortedModules.length > 0) {\r\n    sortedModules[0].isExpanded = true;\r\n  }\r\n  \r\n  return sortedModules;\r\n}\r\n\r\n/**\r\n * Transforms a course object with milestones to modules format\r\n * \r\n * @param course - Course object with milestones array\r\n * @returns Array of modules\r\n */\r\n\r\nexport function transformCourseToModules(course: { milestones?: Milestone[] } | null | undefined): Module[] {\r\n  if (!course) {\r\n    return [];\r\n  }\r\n\r\n  return transformMilestonesToModules(course.milestones);\r\n}"],"names":[],"mappings":";;;;AASO,SAAS,6BAA6B,UAAmC;IAC9E,IAAI,CAAC,cAAc,CAAC,MAAM,OAAO,CAAC,aAAa;QAC7C,OAAO,EAAE;IACX;IAEA,MAAM,qBAAqB,WAAW,GAAG,CAAC,CAAC;QACzC,0CAA0C;QAC1C,MAAM,cAA4B,EAAE;QAEpC,IAAI,UAAU,KAAK,IAAI,MAAM,OAAO,CAAC,UAAU,KAAK,GAAG;YACrD,UAAU,KAAK,CAAC,OAAO,CAAC,CAAC;gBACvB,IAAI,KAAK,IAAI,KAAK,qBAAqB;oBACrC,YAAY,IAAI,CAAC;wBACf,IAAI,KAAK,EAAE,CAAC,QAAQ;wBACpB,OAAO,KAAK,KAAK;wBACjB,UAAU,KAAK,QAAQ;wBACvB,MAAM;wBACN,SAAS,KAAK,OAAO,IAAI,EAAE;wBAC3B,QAAQ,KAAK,MAAM;wBACnB,sBAAsB,KAAK,oBAAoB;wBAC/C,cAAc,KAAK,aAAa;oBAClC;gBACF,OAAO,IAAI,KAAK,IAAI,KAAK,QAAQ;oBAC/B,YAAY,IAAI,CAAC;wBACf,IAAI,KAAK,EAAE,CAAC,QAAQ;wBACpB,OAAO,KAAK,KAAK;wBACjB,UAAU,KAAK,QAAQ;wBACvB,MAAM;wBACN,WAAW,KAAK,SAAS,IAAI,EAAE;wBAC/B,QAAQ,KAAK,MAAM;wBACnB,cAAc,KAAK,aAAa;wBAChC,sBAAsB,KAAK,oBAAoB;wBAC/C,cAAc,KAAK,aAAa;oBAClC;gBACF;YACF;YAEA,kCAAkC;YAClC,YAAY,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,QAAQ,GAAG,EAAE,QAAQ;QACpD;QAEA,OAAO;YACL,IAAI,UAAU,EAAE,CAAC,QAAQ;YACzB,OAAO,UAAU,IAAI;YACrB,UAAU,UAAU,QAAQ;YAC5B,OAAO;YACP,YAAY;YACZ,iBAAiB,GAAG,UAAU,KAAK,CAAC,EAAE,CAAC;YACvC,UAAU,UAAU,SAAS;QAC/B;IACF;IAEA,oCAAoC;IACpC,MAAM,gBAAgB,mBAAmB,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,QAAQ,GAAG,EAAE,QAAQ;IAE/E,kEAAkE;IAClE,IAAI,cAAc,MAAM,GAAG,GAAG;QAC5B,aAAa,CAAC,EAAE,CAAC,UAAU,GAAG;IAChC;IAEA,OAAO;AACT;AASO,SAAS,yBAAyB,MAAuD;IAC9F,IAAI,CAAC,QAAQ;QACX,OAAO,EAAE;IACX;IAEA,OAAO,6BAA6B,OAAO,UAAU;AACvD","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/lib/api.ts"],"sourcesContent":["\"use client\";\r\n\r\nimport { useAuth } from \"./auth\";\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Task, Milestone } from \"@/types\";\r\nimport { Module } from \"@/types/course\";\r\nimport { transformMilestonesToModules } from \"./course\";\r\n\r\n// Define course interface based on your backend response\r\nexport interface Course {\r\n  id: string;\r\n  title: string;\r\n  description?: string;\r\n  coverImage?: string;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n  moduleCount?: number;\r\n  role?: string;\r\n  org?: {\r\n    id: number;\r\n    name: string;\r\n    slug: string;\r\n  };\r\n  org_id?: number;\r\n  // Add other fields as needed\r\n}\r\n\r\n// School interface (mapped from organization in the API)\r\nexport interface School {\r\n  id: string;\r\n  name: string;\r\n  description?: string;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n  url?: string;\r\n  role?: string;\r\n  slug?: string;\r\n  // Add other fields as needed\r\n}\r\n\r\n/**\r\n * Hook to fetch courses for the current user\r\n */\r\nexport function useCourses() {\r\n  const { user, isAuthenticated, isLoading: authLoading } = useAuth();\r\n  const [courses, setCourses] = useState<Course[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<Error | null>(null);\r\n  \r\n  // Fetch courses immediately when user ID is available\r\n  useEffect(() => {\r\n    if (!isAuthenticated || !user?.id || authLoading) {\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    \r\n    // Simple fetch without caching\r\n    fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/users/${user.id}/courses`)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(`Request failed: ${response.status}`);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        // Transform the API response to match the expected format\r\n        const formattedCourses: Course[] = data.map((course: any) => ({\r\n          id: course.id,\r\n          title: course.name,\r\n          role: course.role,\r\n          cohort_id: course.cohort_id,\r\n          org: course.org,\r\n          org_id: course.org?.id,\r\n          coverImage: course.coverImage,\r\n          createdAt: course.createdAt,\r\n          updatedAt: course.updatedAt\r\n        }));\r\n        \r\n        setCourses(formattedCourses);\r\n      })\r\n      .catch(err => {\r\n        console.error('Error fetching courses:', err);\r\n        setError(err);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, [user?.id, isAuthenticated, authLoading]);\r\n  \r\n  return {\r\n    courses,\r\n    isLoading,\r\n    error\r\n  };\r\n}\r\n\r\n/**\r\n * Hook to fetch schools for the current user\r\n */\r\nexport function useSchools() {\r\n  const { user, isAuthenticated, isLoading: authLoading } = useAuth();\r\n  const [schools, setSchools] = useState<School[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<Error | null>(null);\r\n  \r\n  // Fetch schools immediately when user ID is available\r\n  useEffect(() => {\r\n    if (!isAuthenticated || !user?.id || authLoading) {\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    \r\n    // Simple fetch without caching\r\n    fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/users/${user.id}/orgs`)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(`Request failed: ${response.status}`);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        // Transform the API response to match the expected format\r\n        const formattedSchools: School[] = data.map((org: any) => ({\r\n          id: org.id,\r\n          name: org.name,\r\n          description: org.description,\r\n          url: org.url,\r\n          role: org.role,\r\n          createdAt: org.createdAt,\r\n          updatedAt: org.updatedAt\r\n        }));\r\n        \r\n        setSchools(formattedSchools);\r\n      })\r\n      .catch(err => {\r\n        console.error('Error fetching schools:', err);\r\n        setError(err);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, [user?.id, isAuthenticated, authLoading]);\r\n  \r\n  return {\r\n    schools,\r\n    isLoading,\r\n    error\r\n  };\r\n} \r\n\r\n/**\r\n * Fetches and processes completion data for a user in a cohort\r\n * @param cohortId - The ID of the cohort\r\n * @param userId - The ID of the user\r\n * @returns Object containing task and question completion data\r\n */\r\nexport const getCompletionData = async (cohortId: number, userId: string): Promise<{\r\n  taskCompletions: Record<string, boolean>,\r\n  questionCompletions: Record<string, Record<string, boolean>>\r\n}> => {\r\n  const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/cohorts/${cohortId}/completion?user_id=${userId}`);\r\n\r\n  if (!response.ok) {\r\n      throw new Error(`Failed to fetch completion data: ${response.status}`);\r\n  }\r\n\r\n  const completionData = await response.json();\r\n\r\n  // Process completion data for tasks\r\n  const taskCompletions: Record<string, boolean> = {};\r\n  // Process completion data for questions\r\n  const questionCompletions: Record<string, Record<string, boolean>> = {};\r\n\r\n  // Iterate through each task in the completion data\r\n  Object.entries(completionData).forEach(([taskId, taskData]: [string, any]) => {\r\n      // Store task completion status\r\n      taskCompletions[taskId] = taskData.is_complete;\r\n\r\n      // Store question completion status if questions exist\r\n      if (taskData.questions && taskData.questions.length > 0) {\r\n          const questionsMap: Record<string, boolean> = {};\r\n\r\n          taskData.questions.forEach((question: any) => {\r\n              questionsMap[question.question_id.toString()] = question.is_complete;\r\n          });\r\n\r\n          questionCompletions[taskId] = questionsMap;\r\n      }\r\n  });\r\n\r\n  return { taskCompletions, questionCompletions };\r\n}; \r\n\r\n/**\r\n * Fetches course data and transforms it into modules\r\n * @param courseId - The ID of the course\r\n * @param baseUrl - The base URL for the API request (defaults to NEXT_PUBLIC_BACKEND_URL)\r\n * @returns Object containing the course data and transformed modules\r\n * \r\n * NOTE: This is a client-side function. For server components, use the version in server-api.ts\r\n */\r\nexport const getCourseModules = async (courseId: string, baseUrl?: string): Promise<{\r\n  courseData: any,\r\n  modules: any[]\r\n}> => {\r\n  // Determine which URL to use (server-side vs client-side)\r\n  const apiUrl = baseUrl || process.env.NEXT_PUBLIC_BACKEND_URL;\r\n  \r\n  const response = await fetch(`${apiUrl}/courses/${courseId}`, {\r\n    cache: 'no-store'\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`Failed to fetch course data: ${response.status}`);\r\n  }\r\n\r\n  const courseData = await response.json();\r\n  \r\n  // Use the shared utility function to transform the milestones to modules\r\n  const modules = transformMilestonesToModules(courseData.milestones);\r\n\r\n  return { courseData, modules };\r\n}; \r\n\r\n\r\nexport const addModule = async (courseId: string, schoolId: string, modules: Module[], setModules: (modules: Module[]) => void, setActiveModuleId: (moduleId: string) => void, lastUsedColorIndex: number, setLastUsedColorIndex: (colorIndex: number) => void) => {\r\n  // Generate a diverse set of theme-compatible colors for dark mode\r\n  const getRandomPastelColor = () => {\r\n      // Predefined set of diverse dark mode friendly colors in hex format\r\n      const themeColors = [\r\n          '#2d3748',    // Slate blue\r\n          '#433c4c',    // Deep purple\r\n          '#4a5568',    // Cool gray\r\n          '#312e51',    // Indigo\r\n          '#364135',    // Forest green\r\n          '#4c393a',    // Burgundy\r\n          '#334155',    // Navy blue\r\n          '#553c2d',    // Rust brown\r\n          '#37303f',    // Plum\r\n          '#3c4b64',    // Steel blue\r\n          '#463c46',    // Mauve\r\n          '#3c322d',    // Coffee\r\n      ];\r\n\r\n      // Ensure we don't pick a color similar to the last one\r\n      let newColorIndex;\r\n      do {\r\n          newColorIndex = Math.floor(Math.random() * themeColors.length);\r\n          // If we have more than 6 colors, make sure the new color is at least 3 positions away\r\n          // from the last one to ensure greater visual distinction\r\n      } while (\r\n          lastUsedColorIndex !== -1 &&\r\n          (Math.abs(newColorIndex - lastUsedColorIndex) < 3 ||\r\n              newColorIndex === lastUsedColorIndex)\r\n      );\r\n\r\n      // Update the last used color index\r\n      setLastUsedColorIndex(newColorIndex);\r\n\r\n      return themeColors[newColorIndex];\r\n  };\r\n\r\n  // Select a random color for the module\r\n  const backgroundColor = getRandomPastelColor();\r\n\r\n  try {\r\n      // Make POST request to create a new milestone (module)\r\n      const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/courses/${courseId}/milestones`, {\r\n          method: 'POST',\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n              name: \"New Module\",\r\n              color: backgroundColor, // Now sending color as hex with # symbol\r\n          }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n          throw new Error(`Failed to create module: ${response.status}`);\r\n      }\r\n\r\n      // Get the module ID from the response\r\n      const data = await response.json();\r\n\r\n      // Create the new module with the ID from the API\r\n      const newModule: Module = {\r\n          id: data.id.toString(), // Convert to string to match our Module interface\r\n          title: \"New Module\",\r\n          position: modules.length,\r\n          items: [],\r\n          isExpanded: true,\r\n          backgroundColor: `${backgroundColor}80`, // Add 50% opacity for UI display\r\n          isEditing: false\r\n      };\r\n\r\n      setModules([...modules, newModule]);\r\n      setActiveModuleId(newModule.id);\r\n  } catch (error) {\r\n      console.error(\"Error creating module:\", error);\r\n\r\n      // Fallback to client-side ID generation if the API call fails\r\n      const newModule: Module = {\r\n          id: `module-${Date.now()}`,\r\n          title: \"New Module\",\r\n          position: modules.length,\r\n          items: [],\r\n          isExpanded: true,\r\n          backgroundColor: `${backgroundColor}80`, // Add 50% opacity for UI display\r\n          isEditing: false\r\n      };\r\n\r\n      setModules([...modules, newModule]);\r\n      setActiveModuleId(newModule.id);\r\n  }\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 388, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/UnauthorizedError.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { EyeOff } from 'lucide-react';\r\n\r\nexport default function UnauthorizedError() {\r\n    const router = useRouter();\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-black text-white flex flex-col items-center justify-center px-4\">\r\n            <div className=\"flex flex-col items-center justify-center max-w-md text-center\">\r\n                <div data-testid=\"error-icon\" className=\"flex items-center justify-center w-16 h-16 bg-purple-600/20 rounded-full mb-6\">\r\n                    <EyeOff size={32} className=\"text-purple-400\" />\r\n                </div>\r\n                <h1 className=\"text-3xl font-light mb-4\">Peeking where you should not</h1>\r\n                <p className=\"text-gray-400 mb-8\">\r\n                    Looks like you've stumbled into the secret clubhouse reserved only for school admins\r\n                </p>\r\n                <button\r\n                    onClick={() => router.push('/')}\r\n                    className=\"px-6 py-3 bg-white text-black text-sm font-medium rounded-full hover:opacity-90 transition-opacity inline-block cursor-pointer\"\r\n                >\r\n                    Back to Safety\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n} "],"names":[],"mappings":";;;;AAGA;AACA;AAJA;;;;AAMe,SAAS;IACpB,MAAM,SAAS,CAAA,GAAA,iPAAA,CAAA,YAAS,AAAD;IAEvB,qBACI,6VAAC;QAAI,WAAU;kBACX,cAAA,6VAAC;YAAI,WAAU;;8BACX,6VAAC;oBAAI,eAAY;oBAAa,WAAU;8BACpC,cAAA,6VAAC,8RAAA,CAAA,SAAM;wBAAC,MAAM;wBAAI,WAAU;;;;;;;;;;;8BAEhC,6VAAC;oBAAG,WAAU;8BAA2B;;;;;;8BACzC,6VAAC;oBAAE,WAAU;8BAAqB;;;;;;8BAGlC,6VAAC;oBACG,SAAS,IAAM,OAAO,IAAI,CAAC;oBAC3B,WAAU;8BACb;;;;;;;;;;;;;;;;;AAMjB","debugId":null}},
    {"offset": {"line": 462, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/CreateCourseDialog.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { X } from 'lucide-react';\r\n\r\ninterface CreateCourseDialogProps {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    onSuccess?: (courseData: { id: string; name: string }) => void;\r\n    schoolId?: string | number;\r\n}\r\n\r\nexport default function CreateCourseDialog({\r\n    open,\r\n    onClose,\r\n    onSuccess,\r\n    schoolId\r\n}: CreateCourseDialogProps) {\r\n    const [courseName, setCourseName] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    // Reset form state when dialog is opened\r\n    useEffect(() => {\r\n        if (open) {\r\n            setCourseName('');\r\n            setError('');\r\n            setIsLoading(false);\r\n        }\r\n    }, [open]);\r\n\r\n    const handleSubmit = async () => {\r\n        // Validate course name\r\n        if (!courseName.trim()) {\r\n            setError('Course name is required');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setIsLoading(true);\r\n\r\n            // Make API request to create course\r\n            const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/courses/`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    name: courseName,\r\n                    org_id: Number(schoolId)\r\n                }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to create course');\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            // Reset form\r\n            setCourseName('');\r\n            setError('');\r\n\r\n            // Call the success callback with the created course data\r\n            if (onSuccess) {\r\n                onSuccess({\r\n                    id: data.id,\r\n                    name: courseName\r\n                });\r\n            }\r\n\r\n        } catch (err) {\r\n            console.error(\"Error creating course:\", err);\r\n            setError('Failed to create course. Please try again.');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    if (!open) return null;\r\n\r\n    return (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\r\n            <div\r\n                className=\"w-full max-w-md bg-[#1A1A1A] rounded-lg shadow-2xl\"\r\n                onClick={e => e.stopPropagation()}\r\n            >\r\n                {/* Dialog Content */}\r\n                <div className=\"p-6 mt-4\">\r\n                    <div className=\"space-y-4\">\r\n                        <div>\r\n                            <input\r\n                                id=\"courseName\"\r\n                                type=\"text\"\r\n                                value={courseName}\r\n                                onChange={(e) => {\r\n                                    setCourseName(e.target.value);\r\n                                    if (error) setError('');\r\n                                }}\r\n                                placeholder=\"What will you name your course?\"\r\n                                className={`w-full px-4 py-3 bg-[#0D0D0D] text-white text-lg rounded-lg font-light placeholder-gray-500 outline-none ${error ? 'border border-red-500' : 'border-none'}`}\r\n                                disabled={isLoading}\r\n                            />\r\n                            {error && (\r\n                                <p className=\"mt-1 text-sm text-red-500\">{error}</p>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Dialog Footer */}\r\n                <div className=\"flex justify-end gap-4 p-6\">\r\n                    <button\r\n                        onClick={onClose}\r\n                        className=\"px-4 py-2 text-gray-400 hover:text-white transition-colors focus:outline-none cursor-pointer\"\r\n                        disabled={isLoading}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        onClick={handleSubmit}\r\n                        className={`px-6 py-2 bg-white text-black text-sm font-medium rounded-full hover:opacity-90 transition-opacity focus:outline-none cursor-pointer ${isLoading ? 'opacity-70' : ''}`}\r\n                        disabled={isLoading}\r\n                    >\r\n                        {isLoading ? (\r\n                            <span className=\"flex items-center justify-center\">\r\n                                <svg className=\"animate-spin h-5 w-5 text-black\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                                </svg>\r\n                            </span>\r\n                        ) : 'Create course'}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n} "],"names":[],"mappings":";;;;AAEA;AAFA;;;AAYe,SAAS,mBAAmB,EACvC,IAAI,EACJ,OAAO,EACP,SAAS,EACT,QAAQ,EACc;IACtB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,yCAAyC;IACzC,CAAA,GAAA,oTAAA,CAAA,YAAS,AAAD,EAAE;QACN,IAAI,MAAM;YACN,cAAc;YACd,SAAS;YACT,aAAa;QACjB;IACJ,GAAG;QAAC;KAAK;IAET,MAAM,eAAe;QACjB,uBAAuB;QACvB,IAAI,CAAC,WAAW,IAAI,IAAI;YACpB,SAAS;YACT;QACJ;QAEA,IAAI;YACA,aAAa;YAEb,oCAAoC;YACpC,MAAM,WAAW,MAAM,MAAM,6DAAuC,SAAS,CAAC,EAAE;gBAC5E,QAAQ;gBACR,SAAS;oBACL,gBAAgB;gBACpB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACjB,MAAM;oBACN,QAAQ,OAAO;gBACnB;YACJ;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBACd,MAAM,IAAI,MAAM;YACpB;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,aAAa;YACb,cAAc;YACd,SAAS;YAET,yDAAyD;YACzD,IAAI,WAAW;gBACX,UAAU;oBACN,IAAI,KAAK,EAAE;oBACX,MAAM;gBACV;YACJ;QAEJ,EAAE,OAAO,KAAK;YACV,QAAQ,KAAK,CAAC,0BAA0B;YACxC,SAAS;QACb,SAAU;YACN,aAAa;QACjB;IACJ;IAEA,IAAI,CAAC,MAAM,OAAO;IAElB,qBACI,6VAAC;QAAI,WAAU;kBACX,cAAA,6VAAC;YACG,WAAU;YACV,SAAS,CAAA,IAAK,EAAE,eAAe;;8BAG/B,6VAAC;oBAAI,WAAU;8BACX,cAAA,6VAAC;wBAAI,WAAU;kCACX,cAAA,6VAAC;;8CACG,6VAAC;oCACG,IAAG;oCACH,MAAK;oCACL,OAAO;oCACP,UAAU,CAAC;wCACP,cAAc,EAAE,MAAM,CAAC,KAAK;wCAC5B,IAAI,OAAO,SAAS;oCACxB;oCACA,aAAY;oCACZ,WAAW,CAAC,yGAAyG,EAAE,QAAQ,0BAA0B,eAAe;oCACxK,UAAU;;;;;;gCAEb,uBACG,6VAAC;oCAAE,WAAU;8CAA6B;;;;;;;;;;;;;;;;;;;;;;8BAO1D,6VAAC;oBAAI,WAAU;;sCACX,6VAAC;4BACG,SAAS;4BACT,WAAU;4BACV,UAAU;sCACb;;;;;;sCAGD,6VAAC;4BACG,SAAS;4BACT,WAAW,CAAC,qIAAqI,EAAE,YAAY,eAAe,IAAI;4BAClL,UAAU;sCAET,0BACG,6VAAC;gCAAK,WAAU;0CACZ,cAAA,6VAAC;oCAAI,WAAU;oCAAkC,OAAM;oCAA6B,MAAK;oCAAO,SAAQ;;sDACpG,6VAAC;4CAAO,WAAU;4CAAa,IAAG;4CAAK,IAAG;4CAAK,GAAE;4CAAK,QAAO;4CAAe,aAAY;;;;;;sDACxF,6VAAC;4CAAK,WAAU;4CAAa,MAAK;4CAAe,GAAE;;;;;;;;;;;;;;;;uCAG3D;;;;;;;;;;;;;;;;;;;;;;;AAM5B","debugId":null}},
    {"offset": {"line": 661, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/SchoolPickerDialog.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from 'react';\r\nimport { X } from 'lucide-react';\r\n\r\ninterface School {\r\n    id: string;\r\n    name: string;\r\n    role?: string;\r\n    description?: string;\r\n    createdAt?: string;\r\n    updatedAt?: string;\r\n    url?: string;\r\n    slug?: string;\r\n}\r\n\r\ninterface SchoolPickerDialogProps {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    schools: School[];\r\n    onSelectSchool: (schoolId: string) => void;\r\n    onCreateSchool: () => void;\r\n}\r\n\r\nexport default function SchoolPickerDialog({\r\n    open,\r\n    onClose,\r\n    schools,\r\n    onSelectSchool,\r\n    onCreateSchool\r\n}: SchoolPickerDialogProps) {\r\n    if (!open) return null;\r\n\r\n    // Check if user owns any schools\r\n    const hasOwnedSchool = schools.some(school =>\r\n        school.role === 'owner'\r\n    );\r\n\r\n    return (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\r\n            <div\r\n                className=\"w-full max-w-md bg-[#1A1A1A] rounded-lg shadow-2xl\"\r\n                onClick={e => e.stopPropagation()}\r\n            >\r\n                {/* Dialog Header */}\r\n                <div className=\"flex justify-between items-center p-6\">\r\n                    <h2 className=\"text-xl font-light text-white\">Select a School</h2>\r\n                    <button\r\n                        onClick={onClose}\r\n                        className=\"text-gray-400 hover:text-white transition-colors focus:outline-none cursor-pointer\"\r\n                    >\r\n                        <X size={24} />\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Dialog Content */}\r\n                <div className=\"p-6\">\r\n                    <div className=\"space-y-4\">\r\n                        {schools.map(school => (\r\n                            <button\r\n                                key={school.id}\r\n                                onClick={() => onSelectSchool(school.id)}\r\n                                className=\"w-full px-4 py-3 bg-[#0D0D0D] text-white text-left rounded-lg hover:bg-gray-800 transition-colors focus:outline-none cursor-pointer flex justify-between items-center\"\r\n                            >\r\n                                <span>{school.name}</span>\r\n                                {(school.role === 'owner' || school.role === 'admin') && (\r\n                                    <span className={`text-xs px-2 py-1 rounded-full text-white ${school.role === 'owner' ? 'bg-purple-700' : 'bg-blue-600'\r\n                                        }`}>\r\n                                        {school.role === 'owner' ? 'Owner' : 'Admin'}\r\n                                    </span>\r\n                                )}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Dialog Footer */}\r\n                {!hasOwnedSchool && (<div className=\"flex justify-end gap-4 p-6\">\r\n                    <button\r\n                        onClick={onCreateSchool}\r\n                        className=\"px-6 py-2 bg-white text-black text-sm font-medium rounded-full hover:opacity-90 transition-opacity focus:outline-none cursor-pointer\"\r\n                    >\r\n                        Create a School\r\n                    </button>\r\n\r\n                </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n} "],"names":[],"mappings":";;;;AAGA;AAHA;;;AAwBe,SAAS,mBAAmB,EACvC,IAAI,EACJ,OAAO,EACP,OAAO,EACP,cAAc,EACd,cAAc,EACQ;IACtB,IAAI,CAAC,MAAM,OAAO;IAElB,iCAAiC;IACjC,MAAM,iBAAiB,QAAQ,IAAI,CAAC,CAAA,SAChC,OAAO,IAAI,KAAK;IAGpB,qBACI,6VAAC;QAAI,WAAU;kBACX,cAAA,6VAAC;YACG,WAAU;YACV,SAAS,CAAA,IAAK,EAAE,eAAe;;8BAG/B,6VAAC;oBAAI,WAAU;;sCACX,6VAAC;4BAAG,WAAU;sCAAgC;;;;;;sCAC9C,6VAAC;4BACG,SAAS;4BACT,WAAU;sCAEV,cAAA,6VAAC,gRAAA,CAAA,IAAC;gCAAC,MAAM;;;;;;;;;;;;;;;;;8BAKjB,6VAAC;oBAAI,WAAU;8BACX,cAAA,6VAAC;wBAAI,WAAU;kCACV,QAAQ,GAAG,CAAC,CAAA,uBACT,6VAAC;gCAEG,SAAS,IAAM,eAAe,OAAO,EAAE;gCACvC,WAAU;;kDAEV,6VAAC;kDAAM,OAAO,IAAI;;;;;;oCACjB,CAAC,OAAO,IAAI,KAAK,WAAW,OAAO,IAAI,KAAK,OAAO,mBAChD,6VAAC;wCAAK,WAAW,CAAC,0CAA0C,EAAE,OAAO,IAAI,KAAK,UAAU,kBAAkB,eACpG;kDACD,OAAO,IAAI,KAAK,UAAU,UAAU;;;;;;;+BARxC,OAAO,EAAE;;;;;;;;;;;;;;;gBAiB7B,CAAC,gCAAmB,6VAAC;oBAAI,WAAU;8BAChC,cAAA,6VAAC;wBACG,SAAS;wBACT,WAAU;kCACb;;;;;;;;;;;;;;;;;;;;;;AASrB","debugId":null}},
    {"offset": {"line": 782, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/layout/header.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { signOut, useSession } from \"next-auth/react\";\r\nimport { useSchools } from \"@/lib/api\";\r\nimport CreateCourseDialog from \"@/components/CreateCourseDialog\";\r\nimport SchoolPickerDialog from \"@/components/SchoolPickerDialog\";\r\nimport { ChevronDown, Plus, X, Book, School } from \"lucide-react\";\r\nimport { Cohort } from \"@/types\";\r\n\r\ninterface HeaderProps {\r\n    showCreateCourseButton?: boolean;\r\n    cohorts?: Cohort[];\r\n    activeCohort?: Cohort | null;\r\n    onCohortSelect?: (cohort: Cohort) => void;\r\n    showTryDemoButton?: boolean;\r\n}\r\n\r\nexport function Header({\r\n    showCreateCourseButton = true,\r\n    cohorts = [],\r\n    activeCohort = null,\r\n    onCohortSelect,\r\n    showTryDemoButton = false\r\n}: HeaderProps) {\r\n    const router = useRouter();\r\n    const { data: session } = useSession();\r\n    const [profileMenuOpen, setProfileMenuOpen] = useState(false);\r\n    const [cohortDropdownOpen, setCohortDropdownOpen] = useState(false);\r\n    const [isCreateCourseDialogOpen, setIsCreateCourseDialogOpen] = useState(false);\r\n    const [isSchoolPickerOpen, setIsSchoolPickerOpen] = useState(false);\r\n    const [mobileActionsOpen, setMobileActionsOpen] = useState(false);\r\n    const profileMenuRef = useRef<HTMLDivElement>(null);\r\n    const cohortDropdownRef = useRef<HTMLDivElement>(null);\r\n    const mobileActionsRef = useRef<HTMLDivElement>(null);\r\n    const { schools, isLoading } = useSchools();\r\n\r\n    // Check if user has a school they own (role admin)\r\n    const hasOwnedSchool = Boolean(schools && schools.length > 0 &&\r\n        schools.some(school => school.role === 'owner' || school.role === 'admin'));\r\n\r\n    // Use the first owned/admin school or just first school as fallback\r\n    const ownedSchool = schools?.find(school => school.role === 'owner' || school.role === 'admin');\r\n    const schoolId = ownedSchool?.id || (schools && schools.length > 0 ? schools[0].id : null);\r\n\r\n    // Close the profile menu and mobile actions when clicking outside\r\n    useEffect(() => {\r\n        function handleClickOutside(event: MouseEvent) {\r\n            if (profileMenuRef.current && !profileMenuRef.current.contains(event.target as Node)) {\r\n                setProfileMenuOpen(false);\r\n            }\r\n            if (cohortDropdownRef.current && !cohortDropdownRef.current.contains(event.target as Node)) {\r\n                setCohortDropdownOpen(false);\r\n            }\r\n            if (mobileActionsRef.current && !mobileActionsRef.current.contains(event.target as Node)) {\r\n                setMobileActionsOpen(false);\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [profileMenuRef, cohortDropdownRef, mobileActionsRef]);\r\n\r\n    // Handle logout\r\n    const handleLogout = () => {\r\n        signOut({ callbackUrl: \"/login\" });\r\n        setProfileMenuOpen(false);\r\n    };\r\n\r\n    // Toggle profile menu\r\n    const toggleProfileMenu = () => {\r\n        setProfileMenuOpen(!profileMenuOpen);\r\n    };\r\n\r\n    // Toggle cohort dropdown\r\n    const toggleCohortDropdown = () => {\r\n        if (cohorts.length > 1) {\r\n            setCohortDropdownOpen(!cohortDropdownOpen);\r\n        }\r\n    };\r\n\r\n    // Toggle mobile actions menu\r\n    const toggleMobileActions = () => {\r\n        setMobileActionsOpen(!mobileActionsOpen);\r\n    };\r\n\r\n    // Handle cohort selection\r\n    const handleCohortSelect = (cohort: Cohort) => {\r\n        if (onCohortSelect) {\r\n            onCohortSelect(cohort);\r\n        }\r\n        setCohortDropdownOpen(false);\r\n    };\r\n\r\n    // Handle button click based on school ownership\r\n    const handleButtonClick = (e: React.MouseEvent) => {\r\n        // If no schools, redirect to school creation\r\n        if (!schools || schools.length === 0) {\r\n            router.push(\"/school/admin/create\");\r\n            return;\r\n        }\r\n\r\n        // If exactly one school and user is owner, go directly to that school\r\n        if (schools.length === 1 && (schools[0].role === 'owner')) {\r\n            router.push(`/school/admin/${schools[0].id}`);\r\n            return;\r\n        }\r\n\r\n        // Otherwise show the school picker dialog\r\n        setIsSchoolPickerOpen(true);\r\n    };\r\n\r\n    // Handle selecting a school from the picker\r\n    const handleSelectSchool = (selectedSchoolId: string) => {\r\n        router.push(`/school/admin/${selectedSchoolId}`);\r\n        setIsSchoolPickerOpen(false);\r\n    };\r\n\r\n    // Handle creating a new school\r\n    const handleCreateSchool = () => {\r\n        router.push(\"/school/admin/create\");\r\n    };\r\n\r\n    // Handle creating a new course button click\r\n    const handleCreateCourseButtonClick = () => {\r\n        setIsCreateCourseDialogOpen(true);\r\n        setMobileActionsOpen(false);\r\n    };\r\n\r\n    // Handle success callback from CreateCourseDialog\r\n    const handleCourseCreationSuccess = (courseData: { id: string; name: string }) => {\r\n        if (hasOwnedSchool && schoolId) {\r\n            // Redirect to the new course page - dialog will be unmounted during navigation\r\n            router.push(`/school/admin/${schoolId}/courses/${courseData.id}`);\r\n        } else {\r\n            router.push(\"/school/admin/create\");\r\n        }\r\n    };\r\n\r\n    // Handle go to school button click\r\n    const handleGoToSchoolClick = () => {\r\n        handleButtonClick({} as React.MouseEvent);\r\n        setMobileActionsOpen(false);\r\n    };\r\n\r\n    // Add handler for \"Try a demo\" button click\r\n    const handleTryDemoClick = () => {\r\n        window.open(\"https://sensai.hyperverge.org/school/first-principles/join?cohortId=89\", \"_blank\");\r\n        setMobileActionsOpen(false);\r\n    };\r\n\r\n    // Get user initials for avatar\r\n    const getInitials = () => {\r\n        if (session?.user?.name) {\r\n            return session.user.name.charAt(0).toUpperCase();\r\n        }\r\n        return \"U\";\r\n    };\r\n\r\n    // Get appropriate button text based on conditions\r\n    const getButtonText = () => {\r\n        if (hasOwnedSchool) {\r\n            return \"Open school\";\r\n        } else {\r\n            return \"Create a course\";\r\n        }\r\n    };\r\n\r\n    return (\r\n        <header className=\"w-full px-3 py-4 bg-black text-white\">\r\n            <div className=\"max-w-full mx-auto flex justify-between items-center\">\r\n                {/* Logo */}\r\n                <Link href=\"/\">\r\n                    <div className=\"cursor-pointer\">\r\n                        <Image\r\n                            src=\"/images/sensai-logo.svg\"\r\n                            alt=\"SensAI Logo\"\r\n                            width={120}\r\n                            height={40}\r\n                            className=\"w-[100px] h-auto sm:w-[120px]\"\r\n                            style={{\r\n                                maxWidth: '100%',\r\n                                height: 'auto'\r\n                            }}\r\n                            priority\r\n                        />\r\n                    </div>\r\n                </Link>\r\n\r\n                {/* Center - Cohort Selector or Active Cohort Name */}\r\n                {cohorts.length > 0 && activeCohort && (\r\n                    <div className=\"hidden sm:flex flex-1 justify-center mx-1 sm:mx-2\">\r\n                        {cohorts.length > 1 ? (\r\n                            <div className=\"relative\" ref={cohortDropdownRef}>\r\n                                <button\r\n                                    className=\"flex items-center text-xl font-light bg-transparent hover:bg-[#0f0f0f] rounded-full px-4 py-2 cursor-pointer truncate max-w-none\"\r\n                                    onClick={toggleCohortDropdown}\r\n                                >\r\n                                    <span className=\"truncate\">{activeCohort.name}</span>\r\n                                    <ChevronDown className=\"ml-1 sm:ml-2 h-5 w-5 flex-shrink-0\" />\r\n                                </button>\r\n\r\n                                {cohortDropdownOpen && (\r\n                                    <div className=\"absolute left-1/2 transform -translate-x-1/2 z-10 mt-1 w-full min-w-[200px] bg-[#0f0f0f] rounded-lg shadow-lg\">\r\n                                        <ul className=\"py-2\">\r\n                                            {cohorts.map(cohort => (\r\n                                                <li\r\n                                                    key={cohort.id}\r\n                                                    className={`px-4 py-3 hover:bg-gray-900 cursor-pointer truncate ${activeCohort.id === cohort.id ? 'text-white font-light' : 'text-gray-300'\r\n                                                        }`}\r\n                                                    onClick={() => handleCohortSelect(cohort)}\r\n                                                >\r\n                                                    {cohort.name}\r\n                                                </li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        ) : (\r\n                            <h2 className=\"text-xl font-light truncate max-w-none\">{activeCohort.name}</h2>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {/* Right side actions */}\r\n                <div className=\"flex items-center space-x-4 pr-1\">\r\n\r\n                    <>\r\n                        {showTryDemoButton && (\r\n                            <button\r\n                                onClick={handleTryDemoClick}\r\n                                className=\"hidden md:block px-6 py-3 bg-white/20 text-white text-sm font-medium rounded-full hover:bg-white/30 cursor-pointer\"\r\n                            >\r\n                                Try a demo\r\n                            </button>\r\n                        )}\r\n                        {showCreateCourseButton && (\r\n                            <button\r\n                                onClick={handleButtonClick}\r\n                                className=\"hidden md:block px-6 py-3 bg-white text-black text-sm font-medium rounded-full hover:opacity-90 transition-opacity focus:outline-none focus:ring-0 focus:border-0 cursor-pointer\"\r\n                            >\r\n                                {getButtonText()}\r\n                            </button>\r\n                        )}\r\n                    </>\r\n\r\n\r\n                    {/* Profile dropdown */}\r\n                    <div className=\"relative\" ref={profileMenuRef}>\r\n                        <button\r\n                            className=\"w-10 h-10 rounded-full bg-purple-700 flex items-center justify-center hover:bg-purple-600 transition-colors focus:outline-none focus:ring-0 focus:border-0 cursor-pointer\"\r\n                            onClick={toggleProfileMenu}\r\n                        >\r\n                            <span className=\"text-white font-medium\">{getInitials()}</span>\r\n                        </button>\r\n\r\n                        {/* Profile dropdown menu */}\r\n                        {profileMenuOpen && (\r\n                            <div className=\"absolute right-0 mt-2 w-64 bg-[#111111] rounded-md shadow-lg py-1 z-10\">\r\n                                <div className=\"px-4 py-3 border-b border-gray-800\">\r\n                                    <div className=\"flex items-center\">\r\n                                        <div className=\"w-10 h-10 rounded-full bg-purple-700 flex items-center justify-center mr-3\">\r\n                                            <span className=\"text-white font-medium\">{getInitials()}</span>\r\n                                        </div>\r\n                                        <div>\r\n                                            <div className=\"text-sm font-medium\">{session?.user?.name || \"User\"}</div>\r\n                                            <div className=\"text-xs text-gray-400\">{session?.user?.email || \"user@example.com\"}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"border-t border-gray-800 py-1\">\r\n                                    <button\r\n                                        onClick={handleLogout}\r\n                                        className=\"flex w-full items-center text-left px-4 py-2 text-sm text-gray-300 hover:bg-gray-800 cursor-pointer\"\r\n                                    >\r\n                                        <svg className=\"w-5 h-5 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\r\n                                        </svg>\r\n                                        Logout\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Mobile Floating Action Button and Menu */}\r\n            {showCreateCourseButton && (\r\n                <div className=\"md:hidden\">\r\n                    {/* Semi-transparent overlay */}\r\n                    {mobileActionsOpen && (\r\n                        <div\r\n                            className=\"fixed inset-0 z-10\"\r\n                            style={{ backgroundColor: 'rgba(0, 0, 0, 0.8)' }}\r\n                            aria-hidden=\"true\"\r\n                            onClick={() => setMobileActionsOpen(false)}\r\n                        />\r\n                    )}\r\n\r\n                    {/* Main FAB button and menu contents */}\r\n                    <div ref={mobileActionsRef}>\r\n                        {/* Main FAB button */}\r\n                        <button\r\n                            onClick={toggleMobileActions}\r\n                            className=\"fixed bottom-6 right-6 w-14 h-14 rounded-full bg-white text-black flex items-center justify-center shadow-lg z-20 cursor-pointer transition-transform duration-300 focus:outline-none\"\r\n                            aria-label=\"Actions menu\"\r\n                        >\r\n                            {mobileActionsOpen ?\r\n                                <X className=\"h-6 w-6\" /> :\r\n                                hasOwnedSchool ? (\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"h-6 w-6\">\r\n                                        <rect width=\"7\" height=\"9\" x=\"3\" y=\"3\" rx=\"1\"></rect>\r\n                                        <rect width=\"7\" height=\"5\" x=\"14\" y=\"3\" rx=\"1\"></rect>\r\n                                        <rect width=\"7\" height=\"9\" x=\"14\" y=\"12\" rx=\"1\"></rect>\r\n                                        <rect width=\"7\" height=\"5\" x=\"3\" y=\"16\" rx=\"1\"></rect>\r\n                                    </svg>\r\n                                ) : (\r\n                                    <Plus className=\"h-6 w-6\" />\r\n                                )\r\n                            }\r\n                        </button>\r\n\r\n                        {/* Action buttons that appear when FAB is clicked */}\r\n                        {mobileActionsOpen && (\r\n                            <div className=\"fixed bottom-24 right-6 flex flex-col gap-4 items-end z-20\">\r\n                                {/* Try a demo Button - only shown if not already a learner */}\r\n                                {showTryDemoButton && (\r\n                                    <div className=\"flex items-center gap-3\">\r\n                                        <span className=\"bg-black text-white py-2 px-4 rounded-full text-sm shadow-md\">\r\n                                            Try a demo\r\n                                        </span>\r\n                                        <button\r\n                                            onClick={handleTryDemoClick}\r\n                                            className=\"w-14 h-14 rounded-full bg-white text-black flex items-center justify-center shadow-md cursor-pointer\"\r\n                                            aria-label=\"Try as a learner\"\r\n                                        >\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"h-6 w-6\">\r\n                                                <path d=\"M12 9a4 4 0 1 0 0 8 4 4 0 0 0 0-8Z\"></path>\r\n                                                <path d=\"M12 3v2\"></path>\r\n                                                <path d=\"M12 19v2\"></path>\r\n                                                <path d=\"m19 12 2 1\"></path>\r\n                                                <path d=\"M3 13 5 12\"></path>\r\n                                                <path d=\"m17 7 1.4-1.4\"></path>\r\n                                                <path d=\"m5.6 18.4 1.4-1.4\"></path>\r\n                                                <path d=\"m16.7 18.4 1.4 1.4\"></path>\r\n                                                <path d=\"m5.6 5.6 1.4 1.4\"></path>\r\n                                            </svg>\r\n                                        </button>\r\n                                    </div>\r\n                                )}\r\n\r\n\r\n                                {/* Go To School Button - only shown if hasOwnedSchool is true */}\r\n                                {hasOwnedSchool ? (\r\n                                    <div className=\"flex items-center gap-3\">\r\n                                        <span className=\"bg-black text-white py-2 px-4 rounded-full text-sm shadow-md\">\r\n                                            Open school\r\n                                        </span>\r\n                                        <button\r\n                                            onClick={handleGoToSchoolClick}\r\n                                            className=\"w-14 h-14 rounded-full bg-white text-black flex items-center justify-center shadow-md cursor-pointer\"\r\n                                            aria-label=\"Go to school\"\r\n                                        >\r\n                                            <School className=\"h-6 w-6\" />\r\n                                        </button>\r\n                                    </div>\r\n                                ) : /* Create Course Button */ <div className=\"flex items-center gap-3\">\r\n                                    <span className=\"bg-black text-white py-2 px-4 rounded-full text-sm shadow-md\">\r\n                                        Create a course\r\n                                    </span>\r\n                                    <button\r\n                                        onClick={handleCreateCourseButtonClick}\r\n                                        className=\"w-14 h-14 rounded-full bg-white text-black flex items-center justify-center shadow-md cursor-pointer\"\r\n                                        aria-label=\"Create a course\"\r\n                                    >\r\n                                        <Book className=\"h-6 w-6\" />\r\n                                    </button>\r\n                                </div>}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Create Course Dialog */}\r\n            <CreateCourseDialog\r\n                open={isCreateCourseDialogOpen}\r\n                onClose={() => setIsCreateCourseDialogOpen(false)}\r\n                onSuccess={handleCourseCreationSuccess}\r\n                schoolId={schoolId || undefined}\r\n            />\r\n\r\n            {/* School Picker Dialog */}\r\n            {schools && (\r\n                <SchoolPickerDialog\r\n                    open={isSchoolPickerOpen}\r\n                    onClose={() => setIsSchoolPickerOpen(false)}\r\n                    schools={schools}\r\n                    onSelectSchool={handleSelectSchool}\r\n                    onCreateSchool={handleCreateSchool}\r\n                />\r\n            )}\r\n        </header>\r\n    );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1540, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/app/school/admin/layout.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { usePathname } from 'next/navigation';\r\nimport { useAuth } from '@/lib/auth';\r\nimport { useSchools } from '@/lib/api';\r\nimport UnauthorizedError from '@/components/UnauthorizedError';\r\nimport { Header } from '@/components/layout/header';\r\n\r\nexport default function AdminLayout({ children }: { children: React.ReactNode }) {\r\n    const { user, isAuthenticated, isLoading: authLoading } = useAuth();\r\n    const { schools, isLoading: schoolsLoading } = useSchools();\r\n    const [isAuthorized, setIsAuthorized] = useState<boolean | null>(null);\r\n    const pathname = usePathname();\r\n\r\n    // Extract school ID from the URL if we are in a specific school admin view\r\n    const schoolIdMatch = pathname.match(/\\/school\\/admin\\/([^\\/]+)/);\r\n    const currentSchoolId = schoolIdMatch ? schoolIdMatch[1] : null;\r\n\r\n    // Determine if the user has access to this school admin area\r\n    useEffect(() => {\r\n        if (authLoading || schoolsLoading || !isAuthenticated) {\r\n            return;\r\n        }\r\n\r\n        // If we're on create page or similar, always allow\r\n        if (!currentSchoolId || currentSchoolId === 'create') {\r\n            setIsAuthorized(true);\r\n            return;\r\n        }\r\n\r\n        // Check if user has admin or owner access to this school\r\n        if (schools && schools.length > 0) {\r\n            const hasAccess = schools.some(\r\n                school =>\r\n                    parseInt(school.id) === parseInt(currentSchoolId) &&\r\n                    (school.role === 'admin' || school.role === 'owner')\r\n            );\r\n            setIsAuthorized(hasAccess);\r\n        } else {\r\n            setIsAuthorized(false);\r\n        }\r\n    }, [isAuthenticated, authLoading, schoolsLoading, schools, currentSchoolId]);\r\n\r\n    // Show loading state\r\n    if (authLoading || schoolsLoading || isAuthorized === null) {\r\n        return (\r\n            <div className=\"min-h-screen bg-black text-white\">\r\n                <Header showCreateCourseButton={false} />\r\n                <div className=\"flex justify-center items-center py-12\">\r\n                    <div className=\"w-12 h-12 border-t-2 border-b-2 border-white rounded-full animate-spin\"></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // If not authorized, show error page\r\n    if (!isAuthorized) {\r\n        return <UnauthorizedError />;\r\n    }\r\n\r\n    // User is authorized, render children\r\n    return children;\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAPA;;;;;;;;AASe,SAAS,YAAY,EAAE,QAAQ,EAAiC;IAC3E,MAAM,EAAE,IAAI,EAAE,eAAe,EAAE,WAAW,WAAW,EAAE,GAAG,CAAA,GAAA,kHAAA,CAAA,UAAO,AAAD;IAChE,MAAM,EAAE,OAAO,EAAE,WAAW,cAAc,EAAE,GAAG,CAAA,GAAA,iHAAA,CAAA,aAAU,AAAD;IACxD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAkB;IACjE,MAAM,WAAW,CAAA,GAAA,iPAAA,CAAA,cAAW,AAAD;IAE3B,2EAA2E;IAC3E,MAAM,gBAAgB,SAAS,KAAK,CAAC;IACrC,MAAM,kBAAkB,gBAAgB,aAAa,CAAC,EAAE,GAAG;IAE3D,6DAA6D;IAC7D,CAAA,GAAA,oTAAA,CAAA,YAAS,AAAD,EAAE;QACN,IAAI,eAAe,kBAAkB,CAAC,iBAAiB;YACnD;QACJ;QAEA,mDAAmD;QACnD,IAAI,CAAC,mBAAmB,oBAAoB,UAAU;YAClD,gBAAgB;YAChB;QACJ;QAEA,yDAAyD;QACzD,IAAI,WAAW,QAAQ,MAAM,GAAG,GAAG;YAC/B,MAAM,YAAY,QAAQ,IAAI,CAC1B,CAAA,SACI,SAAS,OAAO,EAAE,MAAM,SAAS,oBACjC,CAAC,OAAO,IAAI,KAAK,WAAW,OAAO,IAAI,KAAK,OAAO;YAE3D,gBAAgB;QACpB,OAAO;YACH,gBAAgB;QACpB;IACJ,GAAG;QAAC;QAAiB;QAAa;QAAgB;QAAS;KAAgB;IAE3E,qBAAqB;IACrB,IAAI,eAAe,kBAAkB,iBAAiB,MAAM;QACxD,qBACI,6VAAC;YAAI,WAAU;;8BACX,6VAAC,sIAAA,CAAA,SAAM;oBAAC,wBAAwB;;;;;;8BAChC,6VAAC;oBAAI,WAAU;8BACX,cAAA,6VAAC;wBAAI,WAAU;;;;;;;;;;;;;;;;;IAI/B;IAEA,qCAAqC;IACrC,IAAI,CAAC,cAAc;QACf,qBAAO,6VAAC,uIAAA,CAAA,UAAiB;;;;;IAC7B;IAEA,sCAAsC;IACtC,OAAO;AACX","debugId":null}}]
}