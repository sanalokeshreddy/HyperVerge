{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/ConfirmationDialog.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from 'react';\r\nimport { X, Trash2 } from 'lucide-react';\r\n\r\ninterface ConfirmationDialogProps {\r\n    // Core props (required)\r\n    onConfirm: () => void;\r\n    onCancel: () => void;\r\n    onClickOutside?: () => void;\r\n    // Visibility prop (with two possible names for backward compatibility)\r\n    open?: boolean;\r\n    show?: boolean;\r\n\r\n    // Content props\r\n    title?: string;\r\n    message?: string;\r\n\r\n    // Button text props\r\n    confirmButtonText?: string;\r\n    cancelButtonText?: string;\r\n\r\n    // State props\r\n    isLoading?: boolean;\r\n    errorMessage?: string | null;\r\n\r\n    // Type props for styling\r\n    type?: 'publish' | 'delete' | 'custom' | 'save';\r\n\r\n    // Custom content to be rendered between message and buttons\r\n    children?: React.ReactNode;\r\n\r\n    // Close button props\r\n    showCloseButton?: boolean;\r\n    onClose?: () => void;\r\n}\r\n\r\nexport default function ConfirmationDialog({\r\n    // Use either open or show prop for visibility\r\n    open,\r\n    show,\r\n\r\n    // Content props with defaults\r\n    title,\r\n    message,\r\n\r\n    // Action handlers\r\n    onConfirm,\r\n    onCancel,\r\n    onClickOutside,\r\n    // Button text with defaults\r\n    confirmButtonText,\r\n    cancelButtonText = \"Cancel\",\r\n\r\n    // State props\r\n    isLoading = false,\r\n    errorMessage = null,\r\n\r\n    // Type with default\r\n    type = 'delete',\r\n\r\n    // Custom content\r\n    children,\r\n\r\n    // Close button props\r\n    showCloseButton = false,\r\n    onClose\r\n}: ConfirmationDialogProps) {\r\n    // Handle both 'open' and 'show' props for backward compatibility\r\n    const isVisible = open !== undefined ? open : (show !== undefined ? show : false);\r\n\r\n    if (!isVisible) return null;\r\n\r\n    // Default values based on type\r\n    const defaultTitle = type === 'publish' ? \"Ready to publish?\"\r\n        : type === 'save' ? \"Save changes?\"\r\n            : \"Confirm deletion\";\r\n    const defaultMessage = type === 'publish'\r\n        ? \"Make sure your content is complete and reviewed for errors before publishing\"\r\n        : type === 'save'\r\n            ? \"Do you want to save your changes?\"\r\n            : \"Are you sure you want to delete? This action cannot be undone.\";\r\n    const defaultButtonText = type === 'publish' ? \"Publish Now\"\r\n        : type === 'save' ? \"Save\"\r\n            : \"Delete\";\r\n\r\n    // Use provided values or defaults\r\n    const displayTitle = title || defaultTitle;\r\n    const displayMessage = message || defaultMessage;\r\n    const buttonText = confirmButtonText || defaultButtonText;\r\n\r\n    // Button styles based on type\r\n    const buttonBgColor =\r\n        type === 'publish' ? 'bg-green-800 hover:bg-green-900' :\r\n            type === 'delete' ? 'bg-red-800 hover:bg-red-900' :\r\n                type === 'save' ? 'bg-yellow-500 hover:bg-yellow-600' :\r\n                    'bg-blue-600 hover:bg-blue-700'; // Default for custom type\r\n\r\n    // Handle close button click\r\n    const handleClose = () => {\r\n        if (onClose) {\r\n            onClose();\r\n        } else {\r\n            onCancel();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"fixed inset-0 bg-black bg-opacity-70 backdrop-blur-sm z-[100] flex items-center justify-center p-4\"\r\n            onClick={(e) => {\r\n                e.stopPropagation();\r\n                onClickOutside ? onClickOutside() : onCancel();\r\n            }}\r\n        >\r\n            <div\r\n                className=\"w-full max-w-md bg-[#1A1A1A] rounded-lg shadow-2xl relative\"\r\n                onClick={(e) => e.stopPropagation()}\r\n            >\r\n                {showCloseButton && (\r\n                    <button\r\n                        className=\"absolute top-4 right-4 text-gray-400 hover:text-white transition-colors focus:outline-none cursor-pointer\"\r\n                        onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleClose();\r\n                        }}\r\n                    >\r\n                        <X size={18} />\r\n                    </button>\r\n                )}\r\n                <div className=\"p-6\">\r\n                    <h2 className=\"text-xl font-light text-white mb-4\">{displayTitle}</h2>\r\n                    <p className=\"text-gray-300\">{displayMessage}</p>\r\n                    {errorMessage && (\r\n                        <p className=\"mt-4 text-red-400 text-sm\">{errorMessage}</p>\r\n                    )}\r\n\r\n                    {/* Render custom content if provided */}\r\n                    {children && (\r\n                        <div className=\"mt-6\">\r\n                            {children}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"flex justify-end gap-4 p-6\">\r\n                    <button\r\n                        onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            onCancel();\r\n                        }}\r\n                        className=\"px-4 py-2 text-gray-400 hover:text-white transition-colors focus:outline-none cursor-pointer\"\r\n                        disabled={isLoading}\r\n                    >\r\n                        {cancelButtonText}\r\n                    </button>\r\n                    <button\r\n                        onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            onConfirm();\r\n                        }}\r\n                        className={`px-6 py-2 ${buttonBgColor} ${type === 'save' ? 'text-black' : 'text-white'} text-sm font-medium rounded-full transition-colors focus:outline-none cursor-pointer ${isLoading ? 'opacity-70' : ''}`}\r\n                        disabled={isLoading}\r\n                    >\r\n                        {isLoading ? (\r\n                            <div className=\"flex items-center justify-center\">\r\n                                <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"></div>\r\n                                <span>{buttonText}</span>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"flex items-center\">\r\n                                {type === 'delete' && <Trash2 size={16} className=\"mr-2\" />}\r\n                                {buttonText}\r\n                            </div>\r\n                        )}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n} "],"names":[],"mappings":";;;;AAGA;AAAA;AAHA;;;AAqCe,SAAS,mBAAmB,EACvC,8CAA8C;AAC9C,IAAI,EACJ,IAAI,EAEJ,8BAA8B;AAC9B,KAAK,EACL,OAAO,EAEP,kBAAkB;AAClB,SAAS,EACT,QAAQ,EACR,cAAc,EACd,4BAA4B;AAC5B,iBAAiB,EACjB,mBAAmB,QAAQ,EAE3B,cAAc;AACd,YAAY,KAAK,EACjB,eAAe,IAAI,EAEnB,oBAAoB;AACpB,OAAO,QAAQ,EAEf,iBAAiB;AACjB,QAAQ,EAER,qBAAqB;AACrB,kBAAkB,KAAK,EACvB,OAAO,EACe;IACtB,iEAAiE;IACjE,MAAM,YAAY,SAAS,YAAY,OAAQ,SAAS,YAAY,OAAO;IAE3E,IAAI,CAAC,WAAW,OAAO;IAEvB,+BAA+B;IAC/B,MAAM,eAAe,SAAS,YAAY,sBACpC,SAAS,SAAS,kBACd;IACV,MAAM,iBAAiB,SAAS,YAC1B,iFACA,SAAS,SACL,sCACA;IACV,MAAM,oBAAoB,SAAS,YAAY,gBACzC,SAAS,SAAS,SACd;IAEV,kCAAkC;IAClC,MAAM,eAAe,SAAS;IAC9B,MAAM,iBAAiB,WAAW;IAClC,MAAM,aAAa,qBAAqB;IAExC,8BAA8B;IAC9B,MAAM,gBACF,SAAS,YAAY,oCACjB,SAAS,WAAW,gCAChB,SAAS,SAAS,sCACd,iCAAiC,0BAA0B;IAE3E,4BAA4B;IAC5B,MAAM,cAAc;QAChB,IAAI,SAAS;YACT;QACJ,OAAO;YACH;QACJ;IACJ;IAEA,qBACI,6VAAC;QACG,WAAU;QACV,SAAS,CAAC;YACN,EAAE,eAAe;YACjB,iBAAiB,mBAAmB;QACxC;kBAEA,cAAA,6VAAC;YACG,WAAU;YACV,SAAS,CAAC,IAAM,EAAE,eAAe;;gBAEhC,iCACG,6VAAC;oBACG,WAAU;oBACV,SAAS,CAAC;wBACN,EAAE,eAAe;wBACjB;oBACJ;8BAEA,cAAA,6VAAC,gRAAA,CAAA,IAAC;wBAAC,MAAM;;;;;;;;;;;8BAGjB,6VAAC;oBAAI,WAAU;;sCACX,6VAAC;4BAAG,WAAU;sCAAsC;;;;;;sCACpD,6VAAC;4BAAE,WAAU;sCAAiB;;;;;;wBAC7B,8BACG,6VAAC;4BAAE,WAAU;sCAA6B;;;;;;wBAI7C,0BACG,6VAAC;4BAAI,WAAU;sCACV;;;;;;;;;;;;8BAIb,6VAAC;oBAAI,WAAU;;sCACX,6VAAC;4BACG,SAAS,CAAC;gCACN,EAAE,eAAe;gCACjB;4BACJ;4BACA,WAAU;4BACV,UAAU;sCAET;;;;;;sCAEL,6VAAC;4BACG,SAAS,CAAC;gCACN,EAAE,eAAe;gCACjB;4BACJ;4BACA,WAAW,CAAC,UAAU,EAAE,cAAc,CAAC,EAAE,SAAS,SAAS,eAAe,aAAa,sFAAsF,EAAE,YAAY,eAAe,IAAI;4BAC9M,UAAU;sCAET,0BACG,6VAAC;gCAAI,WAAU;;kDACX,6VAAC;wCAAI,WAAU;;;;;;kDACf,6VAAC;kDAAM;;;;;;;;;;;qDAGX,6VAAC;gCAAI,WAAU;;oCACV,SAAS,0BAAY,6VAAC,8RAAA,CAAA,SAAM;wCAAC,MAAM;wCAAI,WAAU;;;;;;oCACjD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQjC","debugId":null}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/CourseCard.tsx"],"sourcesContent":["import Link from \"next/link\";\r\nimport { useParams } from \"next/navigation\";\r\nimport { Trash2 } from \"lucide-react\";\r\nimport { useState } from \"react\";\r\nimport ConfirmationDialog from \"./ConfirmationDialog\";\r\n\r\ninterface CourseCardProps {\r\n    course: {\r\n        id: string | number;\r\n        title: string;\r\n        role?: string;\r\n        org_id?: number;\r\n        cohort_id?: number;\r\n        org?: {\r\n            slug: string;\r\n        };\r\n    };\r\n    onDelete?: (courseId: string | number) => void;\r\n}\r\n\r\nexport default function CourseCard({ course, onDelete }: CourseCardProps) {\r\n    const params = useParams();\r\n    const schoolId = params?.id;\r\n    const [isDeleteConfirmOpen, setIsDeleteConfirmOpen] = useState(false);\r\n    const [isDeleting, setIsDeleting] = useState(false);\r\n    const [deleteError, setDeleteError] = useState<string | null>(null);\r\n\r\n    // Generate a unique border color based on the course id\r\n    const getBorderColor = () => {\r\n        const colors = [\r\n            'border-purple-500',\r\n            'border-green-500',\r\n            'border-pink-500',\r\n            'border-yellow-500',\r\n            'border-blue-500',\r\n            'border-red-500',\r\n            'border-indigo-500',\r\n            'border-orange-500'\r\n        ];\r\n\r\n        // Handle string IDs by converting to a number\r\n        let idNumber: number;\r\n        if (typeof course.id === 'string') {\r\n            // Use string hash code\r\n            idNumber = Array.from(course.id).reduce(\r\n                (hash, char) => ((hash << 5) - hash) + char.charCodeAt(0), 0\r\n            );\r\n            // Ensure positive number\r\n            idNumber = Math.abs(idNumber);\r\n        } else {\r\n            idNumber = course.id;\r\n        }\r\n\r\n        return colors[idNumber % colors.length];\r\n    };\r\n\r\n    // Determine the correct link path\r\n    const getLinkPath = () => {\r\n        // If this is being viewed by a learner, use the school slug path\r\n        if (course.role && course.role !== 'admin' && course.org?.slug) {\r\n            // Include course_id and cohort_id as query parameters to help with selection on the school page\r\n            return `/school/${course.org.slug}?course_id=${course.id}&cohort_id=${course.cohort_id}`;\r\n        }\r\n        // If we have an org_id from the API, use that for the school-specific course path\r\n        else if (course.org_id) {\r\n            return `/school/admin/${course.org_id}/courses/${course.id}`;\r\n        }\r\n        // If we're in a school context, use the school-specific course path\r\n        else if (schoolId) {\r\n            return `/school/admin/${schoolId}/courses/${course.id}`;\r\n        }\r\n        // Otherwise use the general course path\r\n        return `/courses/${course.id}`;\r\n    };\r\n\r\n    // Check if this is an admin view\r\n    const isAdminView = schoolId;\r\n\r\n    const handleDeleteClick = (e: React.MouseEvent) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setIsDeleteConfirmOpen(true);\r\n    };\r\n\r\n    const handleDeleteConfirm = async () => {\r\n        setIsDeleting(true);\r\n        setDeleteError(null);\r\n\r\n        try {\r\n            const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/courses/${course.id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to delete course');\r\n            }\r\n\r\n            // Close the dialog after successful deletion\r\n            setIsDeleteConfirmOpen(false);\r\n\r\n            // Call the onDelete callback if provided\r\n            if (onDelete) {\r\n                onDelete(course.id);\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Error deleting course:', error);\r\n            setDeleteError('An error occurred while deleting the course. Please try again.');\r\n        } finally {\r\n            setIsDeleting(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"group relative\">\r\n            <Link href={getLinkPath()} className=\"block h-full\">\r\n                <div className={`bg-[#1A1A1A] text-gray-300 rounded-lg p-6 h-full transition-all hover:opacity-90 cursor-pointer border-b-2 ${getBorderColor()} border-opacity-70`}>\r\n                    <h2 className=\"text-xl font-light mb-2\">{course.title}</h2>\r\n                </div>\r\n            </Link>\r\n            {isAdminView && (\r\n                <button\r\n                    className=\"absolute top-3 right-3 p-2 text-gray-400 hover:text-red-500 opacity-0 group-hover:opacity-100 transition-opacity focus:outline-none cursor-pointer rounded-full hover:bg-gray-800\"\r\n                    aria-label=\"Delete course\"\r\n                    onClick={handleDeleteClick}\r\n                >\r\n                    <Trash2 size={18} />\r\n                </button>\r\n            )}\r\n\r\n            {/* Confirmation Dialog */}\r\n            <ConfirmationDialog\r\n                show={isDeleteConfirmOpen}\r\n                title=\"Delete course\"\r\n                message={`Are you sure you want to delete this course? All the modules and tasks will be permanently deleted, any learner with access will lose all their progress and this action is irreversible`}\r\n                confirmButtonText=\"Delete\"\r\n                onConfirm={handleDeleteConfirm}\r\n                onCancel={() => setIsDeleteConfirmOpen(false)}\r\n                type=\"delete\"\r\n                isLoading={isDeleting}\r\n                errorMessage={deleteError}\r\n            />\r\n        </div>\r\n    );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 363, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/CohortCard.tsx"],"sourcesContent":["import Link from \"next/link\";\r\nimport { Trash2 } from \"lucide-react\";\r\nimport { useState } from \"react\";\r\nimport ConfirmationDialog from \"./ConfirmationDialog\";\r\n\r\ninterface CohortCardProps {\r\n    cohort: {\r\n        id: number;\r\n        name: string;\r\n    };\r\n    schoolId?: number | string;\r\n    onDelete?: (cohortId: number) => void;\r\n}\r\n\r\nexport default function CohortCard({ cohort, schoolId, onDelete }: CohortCardProps) {\r\n    const [isDeleteConfirmOpen, setIsDeleteConfirmOpen] = useState(false);\r\n    const [isDeleting, setIsDeleting] = useState(false);\r\n    const [deleteError, setDeleteError] = useState<string | null>(null);\r\n\r\n    // Generate a unique border color based on the cohort id\r\n    const getBorderColor = () => {\r\n        const colors = [\r\n            'border-purple-500',\r\n            'border-green-500',\r\n            'border-pink-500',\r\n            'border-yellow-500',\r\n            'border-blue-500',\r\n            'border-red-500',\r\n            'border-indigo-500',\r\n            'border-orange-500'\r\n        ];\r\n        return colors[cohort.id % colors.length];\r\n    };\r\n\r\n    const handleDeleteClick = (e: React.MouseEvent) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setIsDeleteConfirmOpen(true);\r\n    };\r\n\r\n    const handleDeleteConfirm = async () => {\r\n        setIsDeleting(true);\r\n        setDeleteError(null);\r\n\r\n        try {\r\n            const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/cohorts/${cohort.id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to delete cohort');\r\n            }\r\n\r\n            // Close the dialog after successful deletion\r\n            setIsDeleteConfirmOpen(false);\r\n\r\n            // Call the onDelete callback if provided\r\n            if (onDelete) {\r\n                onDelete(cohort.id);\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Error deleting cohort:', error);\r\n            setDeleteError('An error occurred while deleting the cohort. Please try again.');\r\n        } finally {\r\n            setIsDeleting(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"group relative\">\r\n            <Link href={`/school/admin/${schoolId}/cohorts/${cohort.id}`} className=\"block h-full\">\r\n                <div className={`bg-[#1A1A1A] text-gray-300 rounded-lg p-6 h-full transition-all hover:opacity-90 cursor-pointer border-b-2 ${getBorderColor()} border-opacity-70`}>\r\n                    <h2 className=\"text-xl font-light mb-2\">{cohort.name}</h2>\r\n                </div>\r\n            </Link>\r\n            <button\r\n                className=\"absolute top-3 right-3 p-2 text-gray-400 hover:text-red-500 opacity-0 group-hover:opacity-100 transition-opacity focus:outline-none cursor-pointer rounded-full hover:bg-gray-800\"\r\n                aria-label=\"Delete cohort\"\r\n                onClick={handleDeleteClick}\r\n            >\r\n                <Trash2 size={18} />\r\n            </button>\r\n\r\n            {/* Confirmation Dialog */}\r\n            <ConfirmationDialog\r\n                show={isDeleteConfirmOpen}\r\n                title=\"Delete cohort\"\r\n                message={`Are you sure you want to delete this cohort? All learners will instantly lose access to any course assigned to this cohort, they will lose any progress they made and this action is irreversible`}\r\n                confirmButtonText=\"Delete\"\r\n                onConfirm={handleDeleteConfirm}\r\n                onCancel={() => setIsDeleteConfirmOpen(false)}\r\n                type=\"delete\"\r\n                isLoading={isDeleting}\r\n                errorMessage={deleteError}\r\n            />\r\n        </div>\r\n    );\r\n} "],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAWe,SAAS,WAAW,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAmB;IAC9E,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAE;IAC/D,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAiB;IAE9D,wDAAwD;IACxD,MAAM,iBAAiB;QACnB,MAAM,SAAS;YACX;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACH;QACD,OAAO,MAAM,CAAC,OAAO,EAAE,GAAG,OAAO,MAAM,CAAC;IAC5C;IAEA,MAAM,oBAAoB,CAAC;QACvB,EAAE,cAAc;QAChB,EAAE,eAAe;QACjB,uBAAuB;IAC3B;IAEA,MAAM,sBAAsB;QACxB,cAAc;QACd,eAAe;QAEf,IAAI;YACA,MAAM,WAAW,MAAM,MAAM,6DAAuC,SAAS,EAAE,OAAO,EAAE,EAAE,EAAE;gBACxF,QAAQ;gBACR,SAAS;oBACL,gBAAgB;gBACpB;YACJ;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBACd,MAAM,IAAI,MAAM;YACpB;YAEA,6CAA6C;YAC7C,uBAAuB;YAEvB,yCAAyC;YACzC,IAAI,UAAU;gBACV,SAAS,OAAO,EAAE;YACtB;QAEJ,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,0BAA0B;YACxC,eAAe;QACnB,SAAU;YACN,cAAc;QAClB;IACJ;IAEA,qBACI,6VAAC;QAAI,WAAU;;0BACX,6VAAC,2QAAA,CAAA,UAAI;gBAAC,MAAM,CAAC,cAAc,EAAE,SAAS,SAAS,EAAE,OAAO,EAAE,EAAE;gBAAE,WAAU;0BACpE,cAAA,6VAAC;oBAAI,WAAW,CAAC,2GAA2G,EAAE,iBAAiB,kBAAkB,CAAC;8BAC9J,cAAA,6VAAC;wBAAG,WAAU;kCAA2B,OAAO,IAAI;;;;;;;;;;;;;;;;0BAG5D,6VAAC;gBACG,WAAU;gBACV,cAAW;gBACX,SAAS;0BAET,cAAA,6VAAC,8RAAA,CAAA,SAAM;oBAAC,MAAM;;;;;;;;;;;0BAIlB,6VAAC,wIAAA,CAAA,UAAkB;gBACf,MAAM;gBACN,OAAM;gBACN,SAAS,CAAC,iMAAiM,CAAC;gBAC5M,mBAAkB;gBAClB,WAAW;gBACX,UAAU,IAAM,uBAAuB;gBACvC,MAAK;gBACL,WAAW;gBACX,cAAc;;;;;;;;;;;;AAI9B","debugId":null}},
    {"offset": {"line": 493, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/InviteMembersDialog.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { X, Plus, Trash2, Mail } from 'lucide-react';\r\n\r\ninterface InviteMembersDialogProps {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    onInvite: (emails: string[]) => void;\r\n}\r\n\r\nexport default function InviteMembersDialog({ open, onClose, onInvite }: InviteMembersDialogProps) {\r\n    const [emailRows, setEmailRows] = useState<string[]>(['']);\r\n    const [errors, setErrors] = useState<string[]>(['']);\r\n    const [showErrors, setShowErrors] = useState(false);\r\n    const [focusedInputIndex, setFocusedInputIndex] = useState<number | null>(null);\r\n    const scrollContainerRef = useRef<HTMLDivElement>(null);\r\n    const inputRefs = useRef<(HTMLInputElement | null)[]>([]);\r\n\r\n    // Reset state when dialog is opened\r\n    useEffect(() => {\r\n        if (open) {\r\n            setEmailRows(['']);\r\n            setErrors(['']);\r\n            setShowErrors(false);\r\n            setFocusedInputIndex(null);\r\n            inputRefs.current = [null];\r\n        }\r\n    }, [open]);\r\n\r\n    // Update input refs array when number of rows changes\r\n    useEffect(() => {\r\n        inputRefs.current = inputRefs.current.slice(0, emailRows.length);\r\n    }, [emailRows.length]);\r\n\r\n    // Scroll to bottom and focus new input when new email is added\r\n    useEffect(() => {\r\n        if (scrollContainerRef.current) {\r\n            scrollContainerRef.current.scrollTop = scrollContainerRef.current.scrollHeight;\r\n        }\r\n        // Focus the last input if it exists\r\n        const lastInput = inputRefs.current[inputRefs.current.length - 1];\r\n        if (lastInput && focusedInputIndex === emailRows.length - 1) {\r\n            lastInput.focus();\r\n        }\r\n    }, [emailRows.length, focusedInputIndex]);\r\n\r\n    // Email validation regex\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n    const validateEmail = (email: string): boolean => {\r\n        return emailRegex.test(email);\r\n    };\r\n\r\n    const validateAllEmails = () => {\r\n        return emailRows.map(email => {\r\n            if (!email.trim()) return 'Email is required';\r\n            if (!validateEmail(email)) return 'Please enter a valid email';\r\n            return '';\r\n        });\r\n    };\r\n\r\n    const handleEmailChange = (index: number, value: string) => {\r\n        const newEmails = [...emailRows];\r\n        newEmails[index] = value;\r\n        setEmailRows(newEmails);\r\n\r\n        // Update error for this specific email\r\n        const newErrors = [...errors];\r\n        if (!value.trim()) {\r\n            newErrors[index] = 'Email is required';\r\n        } else if (!validateEmail(value)) {\r\n            newErrors[index] = 'Please enter a valid email';\r\n        } else {\r\n            newErrors[index] = '';\r\n        }\r\n        setErrors(newErrors);\r\n    };\r\n\r\n    const addEmailRow = () => {\r\n        setEmailRows([...emailRows, '']);\r\n        setErrors([...errors, '']);\r\n        setFocusedInputIndex(emailRows.length);\r\n        inputRefs.current = [...inputRefs.current, null];\r\n    };\r\n\r\n    const removeEmailRow = (index: number) => {\r\n        const newEmails = emailRows.filter((_, i) => i !== index);\r\n        const newErrors = errors.filter((_, i) => i !== index);\r\n        setEmailRows(newEmails);\r\n        setErrors(newErrors);\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        // Validate all emails\r\n        const newErrors = validateAllEmails();\r\n        setErrors(newErrors);\r\n        setShowErrors(true);\r\n\r\n        // If there are any errors, don't proceed\r\n        if (newErrors.some(error => error)) {\r\n            return;\r\n        }\r\n\r\n        // Filter out any empty emails and submit\r\n        const validEmails = emailRows.filter(email => email.trim() && validateEmail(email));\r\n        onInvite(validEmails);\r\n        onClose();\r\n    };\r\n\r\n    if (!open) return null;\r\n\r\n    return (\r\n        <div\r\n            className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4\"\r\n            onClick={onClose}\r\n        >\r\n            <div\r\n                className=\"w-full max-w-lg bg-[#1A1A1A] rounded-lg shadow-2xl\"\r\n                onClick={e => e.stopPropagation()}\r\n            >\r\n                {/* Dialog Content */}\r\n                <div className=\"p-6 mt-4\">\r\n                    <div\r\n                        ref={scrollContainerRef}\r\n                        className=\"max-h-[300px] overflow-y-auto pr-2 space-y-2 scrollbar-thin scrollbar-thumb-gray-800 scrollbar-track-transparent\"\r\n                    >\r\n                        {emailRows.map((email, index) => (\r\n                            <div key={index} className=\"flex items-center gap-2\">\r\n                                <div className=\"flex-1\">\r\n                                    <div className=\"relative\">\r\n                                        <div className=\"absolute inset-y-0 left-3 flex items-center pointer-events-none\">\r\n                                            <Mail\r\n                                                size={18}\r\n                                                className={`transition-colors ${focusedInputIndex === index ? 'text-white' : 'text-gray-500'}`}\r\n                                            />\r\n                                        </div>\r\n                                        <input\r\n                                            ref={el => {\r\n                                                inputRefs.current[index] = el;\r\n                                            }}\r\n                                            type=\"email\"\r\n                                            value={email}\r\n                                            onChange={(e) => handleEmailChange(index, e.target.value)}\r\n                                            onFocus={() => setFocusedInputIndex(index)}\r\n                                            onBlur={() => setFocusedInputIndex(null)}\r\n                                            placeholder=\"Enter email address\"\r\n                                            className={`w-full bg-[#0A0A0A] pl-10 pr-4 py-3 rounded-lg text-white placeholder-gray-500 focus:outline-none ${errors[index] && focusedInputIndex !== index\r\n                                                ? 'border-2 border-red-500'\r\n                                                : focusedInputIndex === index\r\n                                                    ? 'border border-white'\r\n                                                    : 'border-0'\r\n                                                } focus:border focus:!border-white focus:ring-0 transition-all duration-0`}\r\n                                        />\r\n                                    </div>\r\n                                    {errors[index] && showErrors && focusedInputIndex !== index && (\r\n                                        <p className=\"text-red-500 text-sm mt-1\">{errors[index]}</p>\r\n                                    )}\r\n                                </div>\r\n                                {emailRows.length > 1 && (\r\n                                    <button\r\n                                        onClick={() => removeEmailRow(index)}\r\n                                        className=\"text-gray-400 hover:text-white transition-colors p-2 cursor-pointer focus:outline-none self-start mt-1.5\"\r\n                                    >\r\n                                        <Trash2 size={20} />\r\n                                    </button>\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <button\r\n                        onClick={addEmailRow}\r\n                        className=\"flex items-center gap-2 text-gray-400 hover:text-white w-full py-3 px-4 rounded-lg transition-colors mt-2 cursor-pointer focus:outline-none hover:bg-[#111]\"\r\n                    >\r\n                        <Plus size={20} />\r\n                        <span>Add another email</span>\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Dialog Footer */}\r\n                <div className=\"flex justify-end gap-4 px-6 py-4\">\r\n                    <button\r\n                        onClick={onClose}\r\n                        className=\"px-4 py-2 text-gray-400 hover:text-white transition-colors focus:outline-none cursor-pointer\"\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        onClick={handleSubmit}\r\n                        className=\"px-6 py-2 bg-white text-black text-sm font-medium rounded-full hover:opacity-90 transition-opacity focus:outline-none cursor-pointer\"\r\n                    >\r\n                        Invite\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 793, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/Toast.tsx"],"sourcesContent":["import React from 'react';\r\nimport { X } from 'lucide-react';\r\n\r\ninterface ToastProps {\r\n    show: boolean;\r\n    title: string;\r\n    description: string;\r\n    emoji: string;\r\n    onClose: () => void;\r\n    isMobileView?: boolean;\r\n}\r\n\r\nconst Toast: React.FC<ToastProps> = ({\r\n    show,\r\n    title,\r\n    description,\r\n    emoji,\r\n    onClose,\r\n    isMobileView = false\r\n}) => {\r\n    if (!show) return null;\r\n\r\n    return (\r\n        <div className={`fixed ${isMobileView ? 'top-0 left-0 right-0 w-full rounded-none' : 'bottom-4 right-4 rounded-lg max-w-md'} bg-white text-black px-6 py-4 shadow-lg z-100 flex items-center gap-4`}>\r\n            <div className=\"flex items-center justify-center w-10 h-10 bg-amber-50 rounded-full\">\r\n                <span className=\"text-xl\">{emoji}</span>\r\n            </div>\r\n            <div className=\"flex-1\">\r\n                <h3 className=\"font-medium text-base\">{title}</h3>\r\n                <p className=\"text-sm text-gray-600 mt-0.5 leading-tight\">{description}</p>\r\n            </div>\r\n            <button\r\n                onClick={onClose}\r\n                className=\"text-gray-400 hover:text-gray-600 cursor-pointer\"\r\n            >\r\n                <X size={16} />\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Toast; "],"names":[],"mappings":";;;;AACA;;;AAWA,MAAM,QAA8B,CAAC,EACjC,IAAI,EACJ,KAAK,EACL,WAAW,EACX,KAAK,EACL,OAAO,EACP,eAAe,KAAK,EACvB;IACG,IAAI,CAAC,MAAM,OAAO;IAElB,qBACI,6VAAC;QAAI,WAAW,CAAC,MAAM,EAAE,eAAe,6CAA6C,uCAAuC,sEAAsE,CAAC;;0BAC/L,6VAAC;gBAAI,WAAU;0BACX,cAAA,6VAAC;oBAAK,WAAU;8BAAW;;;;;;;;;;;0BAE/B,6VAAC;gBAAI,WAAU;;kCACX,6VAAC;wBAAG,WAAU;kCAAyB;;;;;;kCACvC,6VAAC;wBAAE,WAAU;kCAA8C;;;;;;;;;;;;0BAE/D,6VAAC;gBACG,SAAS;gBACT,WAAU;0BAEV,cAAA,6VAAC,gRAAA,CAAA,IAAC;oBAAC,MAAM;;;;;;;;;;;;;;;;;AAIzB;uCAEe","debugId":null}},
    {"offset": {"line": 872, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/DripPublishingConfig.tsx"],"sourcesContent":["import { useState, useEffect, forwardRef, useImperativeHandle } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { DripConfig } from \"@/types/course\";\r\nimport Toast from './Toast';\r\n\r\ninterface DripPublishingConfigProps {\r\n    onConfigChange?: (config: DripConfig | undefined) => void;\r\n}\r\n\r\nexport interface DripPublishingConfigRef {\r\n    validateDripConfig: () => string | null;\r\n}\r\n\r\n// Time units for frequency selection\r\nconst TIME_UNITS = [\r\n    'minute',\r\n    'hour', \r\n    'day',\r\n    'week',\r\n    'month',\r\n    'year'\r\n];\r\n\r\nconst DripPublishingConfig = forwardRef<DripPublishingConfigRef, DripPublishingConfigProps>(({\r\n    onConfigChange,\r\n}, ref) => {\r\n    const [isDripEnabled, setIsDripEnabled] = useState(false);\r\n    const [frequencyValue, setFrequencyValue] = useState(1);\r\n    const [frequencyUnit, setFrequencyUnit] = useState('day');\r\n    const [isReleaseDateEnabled, setIsReleaseDateEnabled] = useState(false);\r\n    const [publishDate, setPublishDate] = useState<Date | null>(null);\r\n    const [toast, setToast] = useState({\r\n        show: false,\r\n        title: '',\r\n        description: '',\r\n        emoji: ''\r\n    });\r\n\r\n    // Notify parent of config changes without validation\r\n    useEffect(() => {\r\n        if (onConfigChange) {\r\n            const config = isDripEnabled ? {\r\n                is_drip_enabled: true,\r\n                frequency_value: frequencyValue,\r\n                frequency_unit: frequencyUnit,\r\n                publish_at: isReleaseDateEnabled && publishDate ? publishDate : null\r\n            } : undefined;\r\n\r\n            onConfigChange(config);\r\n        }\r\n    }, [isDripEnabled, frequencyValue, frequencyUnit, isReleaseDateEnabled, publishDate]);\r\n\r\n    const handleValidationError = (error: string) => {\r\n        setToast({\r\n            show: true,\r\n            title: 'Invalid publish settings',\r\n            description: error,\r\n            emoji: '❌'\r\n        });\r\n\r\n        setTimeout(() => {\r\n            setToast(prev => ({ ...prev, show: false }));\r\n        }, 4000);\r\n    };\r\n\r\n    const handleCloseToast = () => {\r\n        setToast(prev => ({ ...prev, show: false }));\r\n    };\r\n\r\n    // Expose validation function to parent\r\n    useImperativeHandle(ref, () => ({\r\n        validateDripConfig: () => {\r\n            if (isDripEnabled) {\r\n                if (!frequencyValue || frequencyValue < 1) {\r\n                    const error = 'Please enter a valid value for the release schedule';\r\n                    handleValidationError(error);\r\n                    return error;\r\n                }\r\n                if (!frequencyUnit) {\r\n                    const error = 'Please enter a valid unit for the release schedule';\r\n                    handleValidationError(error);\r\n                    return error;\r\n                }\r\n                if (isReleaseDateEnabled && !publishDate) {\r\n                    const error = 'Please select a release date and time';\r\n                    handleValidationError(error);\r\n                    return error;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <div className=\"p-4 border-t border-gray-800 bg-[#23282d] rounded-lg\">\r\n                {/* Pill Toggle for Drip Publishing */}\r\n                <div className={`flex items-center ${isDripEnabled ? 'mb-4' : ''}`}>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        id=\"drip-enabled\"\r\n                        checked={isDripEnabled}\r\n                        onChange={(e) => setIsDripEnabled(e.target.checked)}\r\n                        className=\"mr-3 h-4 w-4 cursor-pointer bg-[#181818] border-gray-600 rounded focus:ring-2 focus:ring-[#016037] focus:ring-offset-0 checked:bg-[#016037] checked:border-[#016037] transition-colors\"\r\n                    />\r\n                    <label htmlFor=\"drip-enabled\" className=\"text-white text-sm font-light cursor-pointer select-none\">\r\n                        Release modules gradually using a drip schedule\r\n                    </label>\r\n                </div>\r\n\r\n                {isDripEnabled && (\r\n                    <div className=\"space-y-4\">\r\n                        {/* Frequency Row: Every [number] [unit] */}\r\n                        <div className=\"flex items-center space-x-2\">\r\n                            <span className=\"text-white text-sm font-light select-none\">Every</span>\r\n                            <input\r\n                                type=\"number\"\r\n                                min=\"1\"\r\n                                value={frequencyValue || ''}\r\n                                onChange={e => setFrequencyValue(Number(e.target.value))}\r\n                                placeholder=\"1\"\r\n                                className=\"w-20 p-2 bg-[#181818] text-white text-sm font-light px-3 rounded-md border-0 focus:ring-2 focus:ring-[#016037] transition-all outline-none appearance-none text-center\"\r\n                            />\r\n                            <select\r\n                                value={frequencyUnit || 'day'}\r\n                                onChange={e => setFrequencyUnit(e.target.value)}\r\n                                className=\"w-32 p-2 bg-[#181818] text-white text-sm font-light px-4 rounded-md border-0 focus:ring-2 focus:ring-[#016037] transition-all outline-none appearance-none\"\r\n                            >\r\n                                <option value=\"\" disabled>Select unit</option>\r\n                                {TIME_UNITS.map(unit => (\r\n                                    <option key={unit} value={unit}>{unit}{frequencyValue <= 1 ? '' : 's'}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className={`flex items-center ${isReleaseDateEnabled ? 'mb-4' : ''}`}>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                id=\"release-date-enabled\"\r\n                                checked={isReleaseDateEnabled}\r\n                                onChange={(e) => setIsReleaseDateEnabled(e.target.checked)}\r\n                                className=\"mr-3 h-4 w-4 cursor-pointer bg-[#181818] border-gray-600 rounded focus:ring-2 focus:ring-[#016037] focus:ring-offset-0 checked:bg-[#016037] checked:border-[#016037] transition-colors\"\r\n                            />\r\n                            <label htmlFor=\"release-date-enabled\" className=\"text-white text-sm font-light cursor-pointer select-none\">\r\n                                Set a specific start date and time\r\n                            </label>\r\n                        </div>\r\n\r\n                        {/* Combined Date and Time Picker */}\r\n                        {isReleaseDateEnabled && (\r\n                            <div>\r\n                                <label className=\"block text-sm text-gray-300 font-light mb-1\">Release date & time</label>\r\n                                <DatePicker\r\n                                    selected={publishDate}\r\n                                    onChange={(date) => setPublishDate(date)}\r\n                                    showTimeSelect\r\n                                    timeFormat=\"HH:mm\"\r\n                                    timeIntervals={15}\r\n                                    dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                                    timeCaption=\"Time\"\r\n                                    minDate={new Date()}\r\n                                    placeholderText=\"Select release date and time\"\r\n                                    className=\"bg-[#181818] rounded-md p-2 px-4 w-full text-sm text-white cursor-pointer\"\r\n                                    wrapperClassName=\"w-full\"\r\n                                    calendarClassName=\"bg-[#242424] text-white border border-gray-700 rounded-lg shadow-lg cursor-pointer\"\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Toast notification */}\r\n            <Toast\r\n                show={toast.show}\r\n                title={toast.title}\r\n                description={toast.description}\r\n                emoji={toast.emoji}\r\n                onClose={handleCloseToast}\r\n            />\r\n        </>\r\n    );\r\n});\r\n\r\nDripPublishingConfig.displayName = 'DripPublishingConfig';\r\n\r\nexport default DripPublishingConfig; "],"names":[],"mappings":";;;;AAAA;AACA;AAGA;;;;;;AAUA,qCAAqC;AACrC,MAAM,aAAa;IACf;IACA;IACA;IACA;IACA;IACA;CACH;AAED,MAAM,qCAAuB,CAAA,GAAA,oTAAA,CAAA,aAAU,AAAD,EAAsD,CAAC,EACzF,cAAc,EACjB,EAAE;IACC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAE;IACjE,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAe;IAC5D,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAE;QAC/B,MAAM;QACN,OAAO;QACP,aAAa;QACb,OAAO;IACX;IAEA,qDAAqD;IACrD,CAAA,GAAA,oTAAA,CAAA,YAAS,AAAD,EAAE;QACN,IAAI,gBAAgB;YAChB,MAAM,SAAS,gBAAgB;gBAC3B,iBAAiB;gBACjB,iBAAiB;gBACjB,gBAAgB;gBAChB,YAAY,wBAAwB,cAAc,cAAc;YACpE,IAAI;YAEJ,eAAe;QACnB;IACJ,GAAG;QAAC;QAAe;QAAgB;QAAe;QAAsB;KAAY;IAEpF,MAAM,wBAAwB,CAAC;QAC3B,SAAS;YACL,MAAM;YACN,OAAO;YACP,aAAa;YACb,OAAO;QACX;QAEA,WAAW;YACP,SAAS,CAAA,OAAQ,CAAC;oBAAE,GAAG,IAAI;oBAAE,MAAM;gBAAM,CAAC;QAC9C,GAAG;IACP;IAEA,MAAM,mBAAmB;QACrB,SAAS,CAAA,OAAQ,CAAC;gBAAE,GAAG,IAAI;gBAAE,MAAM;YAAM,CAAC;IAC9C;IAEA,uCAAuC;IACvC,CAAA,GAAA,oTAAA,CAAA,sBAAmB,AAAD,EAAE,KAAK,IAAM,CAAC;YAC5B,oBAAoB;gBAChB,IAAI,eAAe;oBACf,IAAI,CAAC,kBAAkB,iBAAiB,GAAG;wBACvC,MAAM,QAAQ;wBACd,sBAAsB;wBACtB,OAAO;oBACX;oBACA,IAAI,CAAC,eAAe;wBAChB,MAAM,QAAQ;wBACd,sBAAsB;wBACtB,OAAO;oBACX;oBACA,IAAI,wBAAwB,CAAC,aAAa;wBACtC,MAAM,QAAQ;wBACd,sBAAsB;wBACtB,OAAO;oBACX;gBACJ;gBACA,OAAO;YACX;QACJ,CAAC;IAED,qBACI;;0BACI,6VAAC;gBAAI,WAAU;;kCAEX,6VAAC;wBAAI,WAAW,CAAC,kBAAkB,EAAE,gBAAgB,SAAS,IAAI;;0CAC9D,6VAAC;gCACG,MAAK;gCACL,IAAG;gCACH,SAAS;gCACT,UAAU,CAAC,IAAM,iBAAiB,EAAE,MAAM,CAAC,OAAO;gCAClD,WAAU;;;;;;0CAEd,6VAAC;gCAAM,SAAQ;gCAAe,WAAU;0CAA2D;;;;;;;;;;;;oBAKtG,+BACG,6VAAC;wBAAI,WAAU;;0CAEX,6VAAC;gCAAI,WAAU;;kDACX,6VAAC;wCAAK,WAAU;kDAA4C;;;;;;kDAC5D,6VAAC;wCACG,MAAK;wCACL,KAAI;wCACJ,OAAO,kBAAkB;wCACzB,UAAU,CAAA,IAAK,kBAAkB,OAAO,EAAE,MAAM,CAAC,KAAK;wCACtD,aAAY;wCACZ,WAAU;;;;;;kDAEd,6VAAC;wCACG,OAAO,iBAAiB;wCACxB,UAAU,CAAA,IAAK,iBAAiB,EAAE,MAAM,CAAC,KAAK;wCAC9C,WAAU;;0DAEV,6VAAC;gDAAO,OAAM;gDAAG,QAAQ;0DAAC;;;;;;4CACzB,WAAW,GAAG,CAAC,CAAA,qBACZ,6VAAC;oDAAkB,OAAO;;wDAAO;wDAAM,kBAAkB,IAAI,KAAK;;mDAArD;;;;;;;;;;;;;;;;;0CAKzB,6VAAC;gCAAI,WAAW,CAAC,kBAAkB,EAAE,uBAAuB,SAAS,IAAI;;kDACrE,6VAAC;wCACG,MAAK;wCACL,IAAG;wCACH,SAAS;wCACT,UAAU,CAAC,IAAM,wBAAwB,EAAE,MAAM,CAAC,OAAO;wCACzD,WAAU;;;;;;kDAEd,6VAAC;wCAAM,SAAQ;wCAAuB,WAAU;kDAA2D;;;;;;;;;;;;4BAM9G,sCACG,6VAAC;;kDACG,6VAAC;wCAAM,WAAU;kDAA8C;;;;;;kDAC/D,6VAAC,gQAAA,CAAA,UAAU;wCACP,UAAU;wCACV,UAAU,CAAC,OAAS,eAAe;wCACnC,cAAc;wCACd,YAAW;wCACX,eAAe;wCACf,YAAW;wCACX,aAAY;wCACZ,SAAS,IAAI;wCACb,iBAAgB;wCAChB,WAAU;wCACV,kBAAiB;wCACjB,mBAAkB;;;;;;;;;;;;;;;;;;;;;;;;0BAS1C,6VAAC,2HAAA,CAAA,UAAK;gBACF,MAAM,MAAM,IAAI;gBAChB,OAAO,MAAM,KAAK;gBAClB,aAAa,MAAM,WAAW;gBAC9B,OAAO,MAAM,KAAK;gBAClB,SAAS;;;;;;;;AAIzB;AAEA,qBAAqB,WAAW,GAAG;uCAEpB","debugId":null}},
    {"offset": {"line": 1158, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/components/CreateCohortDialog.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport DripPublishingConfig, { DripPublishingConfigRef } from './DripPublishingConfig';\r\nimport { DripConfig } from '@/types/course';\r\n\r\ninterface CreateCohortDialogProps {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    onCreateCohort: (cohort: any, dripConfig?: DripConfig) => void;\r\n    schoolId?: string;\r\n    showDripPublishSettings?: boolean;\r\n}\r\n\r\nexport default function CreateCohortDialog({ open, onClose, onCreateCohort, schoolId, showDripPublishSettings }: CreateCohortDialogProps) {\r\n    const [cohortName, setCohortName] = useState('');\r\n    const [dripConfig, setDripConfig] = useState<DripConfig | undefined>(undefined);\r\n    const [error, setError] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const dripConfigRef = useRef<DripPublishingConfigRef>(null);\r\n\r\n    // Reset form state when dialog is opened\r\n    useEffect(() => {\r\n        if (open) {\r\n            setCohortName('');\r\n            setDripConfig(undefined);\r\n            setError('');\r\n            setIsLoading(false);\r\n        }\r\n    }, [open]);\r\n\r\n    const handleSubmit = async () => {\r\n        // Validate cohort name\r\n        if (!cohortName.trim()) {\r\n            setError('Cohort name is required');\r\n            return;\r\n        }\r\n\r\n        // Validate drip config if enabled and showDripPublishSettings is true\r\n        if (showDripPublishSettings && dripConfigRef.current) {\r\n            const dripError = dripConfigRef.current.validateDripConfig();\r\n            if (dripError) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        // Set loading state to true\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            // Make API call to create cohort\r\n            const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/cohorts/`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    name: cohortName,\r\n                    org_id: schoolId ? parseInt(schoolId) : null\r\n                }),\r\n            });\r\n\r\n            // Handle API errors\r\n            if (!response.ok) {\r\n                throw new Error(`Failed to create cohort: ${response.status} ${response.statusText}`);\r\n            }\r\n\r\n            // Get the new cohort data\r\n            const newCohortData = await response.json();\r\n\r\n            // Pass the created cohort back to the parent with drip config if applicable\r\n            onCreateCohort(newCohortData, showDripPublishSettings ? dripConfig : undefined);\r\n\r\n            // Reset form state\r\n            setCohortName('');\r\n            setDripConfig(undefined);\r\n            setError('');\r\n\r\n        } catch (error) {\r\n            console.error('Error creating cohort:', error);\r\n            setError('Failed to create cohort. Please try again.');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    if (!open) return null;\r\n\r\n    return (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\r\n            <div\r\n                className=\"w-full max-w-md bg-[#1A1A1A] rounded-lg shadow-2xl\"\r\n                onClick={e => e.stopPropagation()}\r\n            >\r\n                {/* Dialog Content */}\r\n                <div className=\"p-6 mt-4\">\r\n                    <div className=\"space-y-4\">\r\n                        <div>\r\n                            <p className=\"text-xs text-gray-400 mb-2 font-light\">A cohort is a group of learners who will take your course together</p>\r\n                            <input\r\n                                id=\"cohortName\"\r\n                                type=\"text\"\r\n                                value={cohortName}\r\n                                onChange={(e) => {\r\n                                    setCohortName(e.target.value);\r\n                                    if (error) setError('');\r\n                                }}\r\n                                placeholder=\"What will you name this cohort?\"\r\n                                className={`w-full px-4 py-3 bg-[#0D0D0D] text-white text-lg rounded-lg font-light placeholder-gray-500 outline-none ${error ? 'border border-red-500' : 'border-none'}`}\r\n                                disabled={isLoading}\r\n                            />\r\n                            {error && (\r\n                                <p className=\"mt-1 text-sm text-red-500\">{error}</p>\r\n                            )}\r\n                        </div>\r\n\r\n                        {/* Conditionally render DripPublishingConfig */}\r\n                        {showDripPublishSettings && (\r\n                            <div>\r\n                                <DripPublishingConfig\r\n                                    ref={dripConfigRef}\r\n                                    onConfigChange={setDripConfig}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Dialog Footer */}\r\n                <div className=\"flex justify-end gap-4 p-6\">\r\n                    <button\r\n                        onClick={onClose}\r\n                        className=\"px-4 py-2 text-gray-400 hover:text-white transition-colors focus:outline-none cursor-pointer\"\r\n                        disabled={isLoading}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        onClick={handleSubmit}\r\n                        className={`px-6 py-2 bg-white text-black text-sm font-medium rounded-full hover:opacity-90 transition-opacity focus:outline-none cursor-pointer ${isLoading ? 'opacity-70' : ''}`}\r\n                        disabled={isLoading}\r\n                    >\r\n                        {isLoading ? (\r\n                            <span className=\"flex items-center justify-center\">\r\n                                <svg className=\"animate-spin h-5 w-5 text-black\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                                </svg>\r\n                            </span>\r\n                        ) : 'Create cohort'}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1392, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/app/school/admin/%5Bid%5D/ClientSchoolAdminView.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { Header } from \"@/components/layout/header\";\r\nimport { Edit, Save, Users, BookOpen, Layers, Building, ChevronDown, Trash2, ExternalLink } from \"lucide-react\";\r\nimport Link from \"next/link\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { useSession } from \"next-auth/react\";\r\nimport CourseCard from \"@/components/CourseCard\";\r\nimport CohortCard from \"@/components/CohortCard\";\r\nimport InviteMembersDialog from \"@/components/InviteMembersDialog\";\r\nimport CreateCohortDialog from \"@/components/CreateCohortDialog\";\r\nimport CreateCourseDialog from '@/components/CreateCourseDialog';\r\nimport Toast from \"@/components/Toast\";\r\nimport ConfirmationDialog from \"@/components/ConfirmationDialog\";\r\nimport { Cohort, TeamMember, Course } from \"@/types\";\r\n\r\ninterface School {\r\n    id: number;\r\n    name: string;\r\n    url: string;\r\n    courses: Course[];\r\n    cohorts: Cohort[];\r\n    members: TeamMember[];\r\n}\r\n\r\ntype TabType = 'courses' | 'cohorts' | 'members';\r\n\r\nexport default function ClientSchoolAdminView({ id }: { id: string }) {\r\n    const router = useRouter();\r\n    const { data: session } = useSession();\r\n    const [school, setSchool] = useState<School | null>(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [activeTab, setActiveTab] = useState<TabType>('courses');\r\n    const [isEditingName, setIsEditingName] = useState(false);\r\n    const [isInviteDialogOpen, setIsInviteDialogOpen] = useState(false);\r\n    const [isDeleteConfirmOpen, setIsDeleteConfirmOpen] = useState(false);\r\n    const [isCreateCohortDialogOpen, setIsCreateCohortDialogOpen] = useState(false);\r\n    const [isCreateCourseDialogOpen, setIsCreateCourseDialogOpen] = useState(false);\r\n    const [memberToDelete, setMemberToDelete] = useState<TeamMember | null>(null);\r\n    const schoolNameRef = useRef<HTMLHeadingElement>(null);\r\n    // Add state for selected members\r\n    const [selectedMembers, setSelectedMembers] = useState<TeamMember[]>([]);\r\n    // Add state for toast notifications\r\n    const [showToast, setShowToast] = useState(false);\r\n    const [toastMessage, setToastMessage] = useState({\r\n        title: '',\r\n        description: '',\r\n        emoji: ''\r\n    });\r\n\r\n    // Add useEffect to automatically hide toast after 5 seconds\r\n    useEffect(() => {\r\n        if (showToast) {\r\n            const timer = setTimeout(() => {\r\n                setShowToast(false);\r\n            }, 5000);\r\n\r\n            // Cleanup the timer when component unmounts or showToast changes\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [showToast]);\r\n\r\n    // Initialize tab from URL hash\r\n    useEffect(() => {\r\n        // Check if there's a hash in the URL\r\n        const hash = window.location.hash.replace('#', '');\r\n        if (hash === 'cohorts' || hash === 'members') {\r\n            setActiveTab(hash as TabType);\r\n        }\r\n    }, []);\r\n\r\n    // Fetch school data\r\n    useEffect(() => {\r\n        const fetchSchool = async () => {\r\n            setLoading(true);\r\n            try {\r\n                // Fetch basic school info\r\n                const schoolResponse = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/organizations/${id}`);\r\n                if (!schoolResponse.ok) {\r\n                    throw new Error(`API error: ${schoolResponse.status}`);\r\n                }\r\n                const schoolData = await schoolResponse.json();\r\n\r\n                // Fetch members separately\r\n                const membersResponse = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/organizations/${id}/members`);\r\n                if (!membersResponse.ok) {\r\n                    throw new Error(`API error: ${membersResponse.status}`);\r\n                }\r\n                const membersData = await membersResponse.json();\r\n\r\n                // Fetch cohorts separately\r\n                const cohortsResponse = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/cohorts/?org_id=${id}`);\r\n                if (!cohortsResponse.ok) {\r\n                    throw new Error(`API error: ${cohortsResponse.status}`);\r\n                }\r\n                const cohortsData = await cohortsResponse.json();\r\n\r\n                // Fetch courses separately\r\n                const coursesResponse = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/courses/?org_id=${id}`);\r\n                if (!coursesResponse.ok) {\r\n                    throw new Error(`API error: ${coursesResponse.status}`);\r\n                }\r\n                const coursesData = await coursesResponse.json();\r\n\r\n                // Transform the API response to match the School interface\r\n                const transformedSchool: School = {\r\n                    id: parseInt(schoolData.id),\r\n                    name: schoolData.name,\r\n                    url: `${process.env.NEXT_PUBLIC_APP_URL}/school/${schoolData.slug}`,\r\n                    courses: coursesData.map((course: any) => ({\r\n                        id: course.id,\r\n                        name: course.name,\r\n                        moduleCount: 0, // Default value since API doesn't provide this\r\n                        description: '' // Default value since API doesn't provide this\r\n                    })),\r\n                    cohorts: cohortsData.map((cohort: any) => ({\r\n                        id: cohort.id,\r\n                        name: cohort.name,\r\n                    })),\r\n                    members: membersData || []  // Use the members from the separate endpoint\r\n                };\r\n\r\n                setSchool(transformedSchool);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error(\"Error fetching school:\", error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchSchool();\r\n    }, [id, router]);\r\n\r\n    // Handle clicking outside the name edit field\r\n    useEffect(() => {\r\n        function handleClickOutside(event: MouseEvent) {\r\n            if (isEditingName && schoolNameRef.current && !schoolNameRef.current.contains(event.target as Node)) {\r\n                setIsEditingName(false);\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [isEditingName, schoolNameRef]);\r\n\r\n    // Toggle name editing\r\n    const toggleNameEdit = () => {\r\n        setIsEditingName(!isEditingName);\r\n        // Focus the name field when editing is enabled\r\n        if (!isEditingName) {\r\n            setTimeout(() => {\r\n                if (schoolNameRef.current) {\r\n                    schoolNameRef.current.focus();\r\n                    // Place cursor at the end of the text\r\n                    const range = document.createRange();\r\n                    const selection = window.getSelection();\r\n                    range.selectNodeContents(schoolNameRef.current);\r\n                    range.collapse(false);\r\n                    selection?.removeAllRanges();\r\n                    selection?.addRange(range);\r\n                }\r\n            }, 0);\r\n        }\r\n    };\r\n\r\n    // Handle name blur\r\n    const handleNameBlur = () => {\r\n        setIsEditingName(false);\r\n    };\r\n\r\n    // Handle keyboard events for name editing\r\n    const handleNameKeyDown = (e: React.KeyboardEvent<HTMLHeadingElement>) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            setIsEditingName(false);\r\n        }\r\n    };\r\n\r\n    const handleInviteMembers = async (emails: string[]) => {\r\n        try {\r\n            // Make API call to invite members\r\n            const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/organizations/${id}/members`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ emails }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to invite members');\r\n            }\r\n\r\n            // Refresh school data to get updated members list\r\n            const membersResponse = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/organizations/${id}/members`);\r\n            if (!membersResponse.ok) {\r\n                throw new Error('Failed to fetch updated members');\r\n            }\r\n            const membersData = await membersResponse.json();\r\n\r\n            // Update school state with new members\r\n            setSchool(prev => prev ? {\r\n                ...prev,\r\n                members: membersData\r\n            } : null);\r\n\r\n            // Close the invite dialog\r\n            setIsInviteDialogOpen(false);\r\n\r\n            // Show toast notification\r\n            setToastMessage({\r\n                title: 'Growing the tribe',\r\n                description: `${emails.length} ${emails.length === 1 ? 'member' : 'members'} has been invited to your team`,\r\n                emoji: '🎉'\r\n            });\r\n            setShowToast(true);\r\n\r\n        } catch (error) {\r\n            console.error('Error inviting members:', error);\r\n            // Here you would typically show an error message to the user\r\n        }\r\n    };\r\n\r\n    // Check if a member is the current user\r\n    const isCurrentUser = (member: TeamMember) => {\r\n        return session?.user?.id === member.id.toString();\r\n    };\r\n\r\n    const handleDeleteMember = (member: TeamMember) => {\r\n        // Don't allow deleting yourself\r\n        if (isCurrentUser(member)) return;\r\n\r\n        setMemberToDelete(member);\r\n        setSelectedMembers([]);\r\n        setIsDeleteConfirmOpen(true);\r\n    };\r\n\r\n    // Handle multiple members deletion\r\n    const handleDeleteSelectedMembers = () => {\r\n        setMemberToDelete(null);\r\n        setIsDeleteConfirmOpen(true);\r\n    };\r\n\r\n    // Updated to handle both single and multiple member deletion\r\n    const confirmDeleteMember = async () => {\r\n        const membersToDelete = memberToDelete ? [memberToDelete] : selectedMembers;\r\n        if (membersToDelete.length === 0) return;\r\n\r\n        try {\r\n            // Make API call to delete member(s)\r\n            const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/organizations/${id}/members`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    user_ids: membersToDelete.map(member => member.id)\r\n                }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to delete member(s)');\r\n            }\r\n\r\n            // Refresh school data to get updated members list\r\n            const membersResponse = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/organizations/${id}/members`);\r\n            if (!membersResponse.ok) {\r\n                throw new Error('Failed to fetch updated members');\r\n            }\r\n            const membersData = await membersResponse.json();\r\n\r\n            // Update school state with new members\r\n            setSchool(prev => prev ? {\r\n                ...prev,\r\n                members: membersData\r\n            } : null);\r\n\r\n            // Show toast notification for successful deletion\r\n            setToastMessage({\r\n                title: 'The tribe has shrunk!',\r\n                description: membersToDelete.length === 1\r\n                    ? `${membersToDelete[0].email} has been removed from your team`\r\n                    : `${membersToDelete.length} members have been removed from your team`,\r\n                emoji: '😢'\r\n            });\r\n            setShowToast(true);\r\n\r\n        } catch (error) {\r\n            console.error('Error deleting member(s):', error);\r\n            // Here you would typically show an error message to the user\r\n        } finally {\r\n            setIsDeleteConfirmOpen(false);\r\n            setMemberToDelete(null);\r\n            setSelectedMembers([]);\r\n        }\r\n    };\r\n\r\n    // Handle member selection toggle\r\n    const handleMemberSelection = (member: TeamMember) => {\r\n        // Don't allow selecting yourself\r\n        if (isCurrentUser(member)) return;\r\n\r\n        setSelectedMembers(prevSelected => {\r\n            // Check if this member is already selected\r\n            const isSelected = prevSelected.some(m => m.id === member.id);\r\n\r\n            // If selected, remove it; if not, add it\r\n            return isSelected\r\n                ? prevSelected.filter(m => m.id !== member.id)\r\n                : [...prevSelected, member];\r\n        });\r\n    };\r\n\r\n    // Handle \"select all\" functionality\r\n    const handleSelectAllMembers = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.checked) {\r\n            // Filter out owner members and current user since they can't be deleted\r\n            const selectableMembers = school?.members.filter(member =>\r\n                member.role !== 'owner' && !isCurrentUser(member)\r\n            ) || [];\r\n            setSelectedMembers(selectableMembers);\r\n        } else {\r\n            setSelectedMembers([]);\r\n        }\r\n    };\r\n\r\n    // Check if all selectable members are selected\r\n    const areAllMembersSelected = () => {\r\n        if (!school) return false;\r\n        const selectableMembers = school.members.filter(member =>\r\n            member.role !== 'owner' && !isCurrentUser(member)\r\n        );\r\n        return selectableMembers.length > 0 && selectedMembers.length === selectableMembers.length;\r\n    };\r\n\r\n    // Check if there are any members that can be selected/deleted\r\n    const hasSelectableMembers = () => {\r\n        if (!school) return false;\r\n        return school.members.some(member =>\r\n            member.role !== 'owner' && !isCurrentUser(member)\r\n        );\r\n    };\r\n\r\n    const handleCreateCohort = async (cohort: any) => {\r\n        try {\r\n            // Important: Navigate before closing the dialog to prevent flash of school page\r\n            // This navigation will unmount the current component, which implicitly closes the dialog\r\n            if (cohort && cohort.id) {\r\n                router.push(`/school/admin/${id}/cohorts/${cohort.id}`);\r\n            } else {\r\n                console.error(\"Cohort ID is missing in the response:\", cohort);\r\n                // Fallback to schools page if ID is missing and close dialog\r\n                setIsCreateCohortDialogOpen(false);\r\n                router.push(`/school/admin/${id}#cohorts`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error handling cohort creation:', error);\r\n            setIsCreateCohortDialogOpen(false);\r\n        }\r\n    };\r\n\r\n    // Handle course creation success\r\n    const handleCourseCreationSuccess = (courseData: { id: string; name: string }) => {\r\n        // Redirect to the new course page - dialog will be unmounted during navigation\r\n        router.push(`/school/admin/${id}/courses/${courseData.id}`);\r\n    };\r\n\r\n    // Handle tab change\r\n    const handleTabChange = (tab: TabType) => {\r\n        setActiveTab(tab);\r\n\r\n        // Only add hash for non-default tabs\r\n        if (tab !== 'courses') {\r\n            window.location.hash = tab;\r\n        } else {\r\n            // Remove hash if it's the courses tab\r\n            if (window.location.hash && typeof window !== 'undefined' && window.history) {\r\n                history.pushState(\"\", document.title, window.location.pathname);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleCohortDelete = async (cohortId: number) => {\r\n        try {\r\n            // Refresh school data to get updated cohorts list\r\n            const cohortsResponse = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/cohorts/?org_id=${id}`);\r\n            if (!cohortsResponse.ok) {\r\n                throw new Error('Failed to fetch updated cohorts');\r\n            }\r\n            const cohortsData = await cohortsResponse.json();\r\n\r\n            // Update school state with new cohorts\r\n            setSchool(prev => prev ? {\r\n                ...prev,\r\n                cohorts: cohortsData\r\n            } : null);\r\n\r\n            // Show toast notification for successful deletion\r\n            setToastMessage({\r\n                title: 'Cohort removed',\r\n                description: `Cohort has been removed from your school`,\r\n                emoji: '✓'\r\n            });\r\n            setShowToast(true);\r\n        } catch (error) {\r\n            console.error('Error refreshing cohorts list:', error);\r\n            // Here you would typically show an error message to the user\r\n        }\r\n    };\r\n\r\n    const handleCourseDelete = async (courseId: string | number) => {\r\n        try {\r\n            // Refresh school data to get updated courses list\r\n            const coursesResponse = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/courses/?org_id=${id}`);\r\n            if (!coursesResponse.ok) {\r\n                throw new Error('Failed to fetch updated courses');\r\n            }\r\n            const coursesData = await coursesResponse.json();\r\n\r\n            // Update school state with new courses\r\n            setSchool(prev => prev ? {\r\n                ...prev,\r\n                courses: coursesData.map((course: any) => ({\r\n                    id: course.id,\r\n                    name: course.name,\r\n                }))\r\n            } : null);\r\n\r\n            // Show toast notification for successful deletion\r\n            setToastMessage({\r\n                title: 'Course removed',\r\n                description: `Course has been removed from your school`,\r\n                emoji: '✓'\r\n            });\r\n            setShowToast(true);\r\n        } catch (error) {\r\n            console.error('Error refreshing courses list:', error);\r\n            // Here you would typically show an error message to the user\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"min-h-screen bg-black text-white\">\r\n                <Header showCreateCourseButton={false} />\r\n                <div className=\"flex justify-center items-center py-12\">\r\n                    <div className=\"w-12 h-12 border-t-2 border-b-2 border-white rounded-full animate-spin\"></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!school) {\r\n        return (\r\n            <div className=\"min-h-screen bg-black text-white flex items-center justify-center\">\r\n                <p>School not found</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header showCreateCourseButton={false} />\r\n\r\n            <div className=\"min-h-screen bg-black text-white\">\r\n                <div className=\"container mx-auto px-4 py-8\">\r\n                    <main>\r\n                        {/* School header with title */}\r\n                        <div className=\"mb-10\">\r\n                            <div className=\"flex items-center justify-between\">\r\n                                <div className=\"flex items-center\">\r\n                                    <div className=\"w-12 h-12 bg-purple-700 rounded-lg flex items-center justify-center mr-4\">\r\n                                        <Building size={24} className=\"text-white\" />\r\n                                    </div>\r\n                                    <div>\r\n                                        <div className=\"flex items-center\">\r\n                                            <h1\r\n                                                ref={schoolNameRef}\r\n                                                contentEditable={isEditingName}\r\n                                                suppressContentEditableWarning\r\n                                                className={`text-3xl font-light outline-none ${isEditingName ? 'border-b border-white' : ''}`}\r\n                                                onBlur={handleNameBlur}\r\n                                                onKeyDown={handleNameKeyDown}\r\n                                            >\r\n                                                {school.name}\r\n                                            </h1>\r\n                                            {/* <button\r\n                                                onClick={toggleNameEdit}\r\n                                                className=\"ml-2 p-2 text-gray-400 hover:text-white\"\r\n                                                aria-label={isEditingName ? \"Save school name\" : \"Edit school name\"}\r\n                                            >\r\n                                                {isEditingName ? <Save size={16} /> : <Edit size={16} />}\r\n                                            </button> */}\r\n                                        </div>\r\n                                        <div className=\"flex items-center mt-1\">\r\n                                            <p className=\"text-gray-400\">{school.url}</p>\r\n                                            <a\r\n                                                href={school.url}\r\n                                                target=\"_blank\"\r\n                                                rel=\"noopener noreferrer\"\r\n                                                className=\"ml-2 text-gray-400 hover:text-white transition-colors cursor-pointer\"\r\n                                                aria-label=\"Open school URL\"\r\n                                            >\r\n                                                <ExternalLink size={14} />\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Tabs for navigation */}\r\n                        <div className=\"mb-8\">\r\n                            <div className=\"flex border-b border-gray-800\">\r\n                                <button\r\n                                    className={`px-4 py-2 font-light cursor-pointer ${activeTab === 'courses' ? 'text-white border-b-2 border-white' : 'text-gray-400 hover:text-white'}`}\r\n                                    onClick={() => handleTabChange('courses')}\r\n                                >\r\n                                    <div className=\"flex items-center\">\r\n                                        <BookOpen size={16} className=\"mr-2\" />\r\n                                        Courses\r\n                                    </div>\r\n                                </button>\r\n                                <button\r\n                                    className={`px-4 py-2 font-light cursor-pointer ${activeTab === 'cohorts' ? 'text-white border-b-2 border-white' : 'text-gray-400 hover:text-white'}`}\r\n                                    onClick={() => handleTabChange('cohorts')}\r\n                                >\r\n                                    <div className=\"flex items-center\">\r\n                                        <Layers size={16} className=\"mr-2\" />\r\n                                        Cohorts\r\n                                    </div>\r\n                                </button>\r\n                                <button\r\n                                    className={`px-4 py-2 font-light cursor-pointer ${activeTab === 'members' ? 'text-white border-b-2 border-white' : 'text-gray-400 hover:text-white'}`}\r\n                                    onClick={() => handleTabChange('members')}\r\n                                >\r\n                                    <div className=\"flex items-center\">\r\n                                        <Users size={16} className=\"mr-2\" />\r\n                                        Team\r\n                                    </div>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Tab content */}\r\n                        <div>\r\n                            {/* Courses Tab */}\r\n                            {activeTab === 'courses' && (\r\n                                <div>\r\n                                    {school.courses.length > 0 ? (\r\n                                        <>\r\n                                            <div className=\"flex justify-start items-center mb-6\">\r\n                                                <button\r\n                                                    onClick={() => setIsCreateCourseDialogOpen(true)}\r\n                                                    className=\"px-6 py-3 bg-white text-black text-sm font-medium rounded-full hover:opacity-90 transition-opacity inline-block cursor-pointer\"\r\n                                                >\r\n                                                    Create course\r\n                                                </button>\r\n                                            </div>\r\n\r\n                                            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                                                {school.courses.map(course => (\r\n                                                    <CourseCard key={course.id} course={{\r\n                                                        id: course.id,\r\n                                                        title: course.name,\r\n                                                    }} onDelete={handleCourseDelete} />\r\n                                                ))}\r\n                                            </div>\r\n                                        </>\r\n                                    ) : (\r\n                                        <div className=\"flex flex-col items-center justify-center py-20\">\r\n                                            <h2 className=\"text-4xl font-light mb-4\">What if your next big idea became a course?</h2>\r\n                                            <p className=\"text-gray-400 mb-8\">It might be easier than you think</p>\r\n                                            <button\r\n                                                onClick={() => setIsCreateCourseDialogOpen(true)}\r\n                                                className=\"px-6 py-3 bg-white text-black text-sm font-medium rounded-full hover:opacity-90 transition-opacity inline-block cursor-pointer\"\r\n                                            >\r\n                                                Create course\r\n                                            </button>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n\r\n                            {/* Cohorts Tab */}\r\n                            {activeTab === 'cohorts' && (\r\n                                <div>\r\n                                    {school.cohorts.length > 0 ? (\r\n                                        <>\r\n                                            <div className=\"flex justify-start items-center mb-6\">\r\n                                                <button\r\n                                                    className=\"px-6 py-3 bg-white text-black text-sm font-medium rounded-full hover:opacity-90 transition-opacity focus:outline-none cursor-pointer\"\r\n                                                    onClick={() => {\r\n                                                        setIsCreateCohortDialogOpen(true);\r\n                                                    }}\r\n                                                >\r\n                                                    Create cohort\r\n                                                </button>\r\n                                            </div>\r\n\r\n                                            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                                                {school.cohorts.map(cohort => (\r\n                                                    <CohortCard\r\n                                                        key={cohort.id}\r\n                                                        cohort={cohort}\r\n                                                        schoolId={school.id}\r\n                                                        onDelete={handleCohortDelete}\r\n                                                    />\r\n                                                ))}\r\n                                            </div>\r\n                                        </>\r\n                                    ) : (\r\n                                        <div className=\"flex flex-col items-center justify-center py-20\">\r\n                                            <h2 className=\"text-4xl font-light mb-4\">Bring your courses to life with cohorts</h2>\r\n                                            <p className=\"text-gray-400 mb-8\">Create groups of learners and assign them courses to learn together</p>\r\n                                            <button\r\n                                                className=\"px-6 py-3 bg-white text-black text-sm font-medium rounded-full hover:opacity-90 transition-opacity focus:outline-none cursor-pointer\"\r\n                                                onClick={() => {\r\n                                                    setIsCreateCohortDialogOpen(true);\r\n                                                }}\r\n                                            >\r\n                                                Create cohort\r\n                                            </button>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n\r\n                            {/* Team Tab */}\r\n                            {activeTab === 'members' && (\r\n                                <div>\r\n                                    <div className=\"flex justify-start items-center mb-6 gap-4\">\r\n                                        <button\r\n                                            className=\"px-6 py-3 bg-white text-black text-sm font-medium rounded-full hover:opacity-90 transition-opacity focus:outline-none cursor-pointer\"\r\n                                            onClick={() => setIsInviteDialogOpen(true)}\r\n                                        >\r\n                                            Invite members\r\n                                        </button>\r\n                                        {selectedMembers.length > 0 && (\r\n                                            <button\r\n                                                className=\"px-6 py-3 bg-red-800 text-white text-sm font-medium rounded-full hover:bg-red-900 transition-colors focus:outline-none cursor-pointer flex items-center\"\r\n                                                onClick={handleDeleteSelectedMembers}\r\n                                            >\r\n                                                <Trash2 size={16} className=\"mr-2\" />\r\n                                                Remove ({selectedMembers.length})\r\n                                            </button>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    <div className=\"overflow-hidden rounded-lg border border-gray-800\">\r\n                                        <table className=\"min-w-full divide-y divide-gray-800\">\r\n                                            <thead className=\"bg-gray-900\">\r\n                                                <tr>\r\n                                                    <th scope=\"col\" className=\"w-10 px-3 py-3 text-left\">\r\n                                                        <div className=\"flex items-center justify-center\">\r\n                                                            {hasSelectableMembers() && (\r\n                                                                <input\r\n                                                                    type=\"checkbox\"\r\n                                                                    className=\"h-5 w-5 rounded-md border-2 border-purple-600 text-white appearance-none checked:bg-purple-600 focus:ring-2 focus:ring-purple-500 focus:ring-opacity-30 focus:outline-none bg-[#111111] cursor-pointer transition-all duration-200 ease-in-out hover:border-purple-500 relative before:content-[''] before:absolute before:top-1/2 before:left-1/2 before:-translate-y-1/2 before:-translate-x-1/2 before:w-2.5 before:h-2.5 before:opacity-0 before:bg-white checked:before:opacity-100 checked:before:scale-100 before:scale-0 before:rounded-sm before:transition-all before:duration-200 checked:border-transparent\"\r\n                                                                    checked={areAllMembersSelected()}\r\n                                                                    onChange={handleSelectAllMembers}\r\n                                                                    title=\"Select all members\"\r\n                                                                />\r\n                                                            )}\r\n                                                        </div>\r\n                                                    </th>\r\n                                                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">Email</th>\r\n                                                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">Role</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody className=\"bg-[#111] divide-y divide-gray-800\">\r\n                                                {school.members.map(member => (\r\n                                                    <tr key={member.id}>\r\n                                                        <td className=\"w-10 px-4 py-4 whitespace-nowrap\">\r\n                                                            <div className=\"flex justify-center\">\r\n                                                                {member.role !== 'owner' && !isCurrentUser(member) && (\r\n                                                                    <input\r\n                                                                        type=\"checkbox\"\r\n                                                                        className=\"h-5 w-5 rounded-md border-2 border-purple-600 text-white appearance-none checked:bg-purple-600 focus:ring-2 focus:ring-purple-500 focus:ring-opacity-30 focus:outline-none bg-[#111111] cursor-pointer transition-all duration-200 ease-in-out hover:border-purple-500 relative before:content-[''] before:absolute before:top-1/2 before:left-1/2 before:-translate-y-1/2 before:-translate-x-1/2 before:w-2.5 before:h-2.5 before:opacity-0 before:bg-white checked:before:opacity-100 checked:before:scale-100 before:scale-0 before:rounded-sm before:transition-all before:duration-200 checked:border-transparent\"\r\n                                                                        checked={selectedMembers.some(m => m.id === member.id)}\r\n                                                                        onChange={() => handleMemberSelection(member)}\r\n                                                                    />\r\n                                                                )}\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">{member.email}</td>\r\n                                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm flex justify-between items-center\">\r\n                                                            <span className={`inline-flex items-center px-3 py-0.5 rounded-full text-xs font-medium ${member.role === 'owner' ? 'bg-purple-900 text-purple-200' : 'bg-gray-800 text-gray-300'}`}>\r\n                                                                {member.role === 'owner' ? 'Owner' : 'Admin'}\r\n                                                            </span>\r\n                                                            {member.role !== 'owner' && !isCurrentUser(member) && (\r\n                                                                <button\r\n                                                                    onClick={() => handleDeleteMember(member)}\r\n                                                                    className=\"flex items-center gap-1 text-gray-400 hover:text-red-500 transition-colors focus:outline-none cursor-pointer\"\r\n                                                                    aria-label=\"Remove Member\"\r\n                                                                >\r\n                                                                    <Trash2 size={18} />\r\n                                                                </button>\r\n                                                            )}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                ))}\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </main>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Invite Members Dialog */}\r\n            <InviteMembersDialog\r\n                open={isInviteDialogOpen}\r\n                onClose={() => setIsInviteDialogOpen(false)}\r\n                onInvite={handleInviteMembers}\r\n            />\r\n\r\n            {/* Delete Member Confirmation Dialog */}\r\n            <ConfirmationDialog\r\n                show={isDeleteConfirmOpen}\r\n                title={memberToDelete || selectedMembers.length == 1 ? \"Remove member\" : \"Remove selected members\"}\r\n                message={memberToDelete\r\n                    ? `Are you sure you want to remove ${memberToDelete.email} from this organization?`\r\n                    : `Are you sure you want to remove ${selectedMembers.length} ${selectedMembers.length === 1 ? 'member' : 'members'} from this organization?`\r\n                }\r\n                confirmButtonText=\"Remove\"\r\n                onConfirm={confirmDeleteMember}\r\n                onCancel={() => setIsDeleteConfirmOpen(false)}\r\n                type=\"delete\"\r\n            />\r\n\r\n            {/* Create cohort Dialog */}\r\n            <CreateCohortDialog\r\n                open={isCreateCohortDialogOpen}\r\n                onClose={() => setIsCreateCohortDialogOpen(false)}\r\n                onCreateCohort={handleCreateCohort}\r\n                schoolId={id}\r\n            />\r\n\r\n            {/* Create course Dialog */}\r\n            <CreateCourseDialog\r\n                open={isCreateCourseDialogOpen}\r\n                onClose={() => setIsCreateCourseDialogOpen(false)}\r\n                onSuccess={handleCourseCreationSuccess}\r\n                schoolId={id}\r\n            />\r\n\r\n            {/* Toast notification */}\r\n            <Toast\r\n                show={showToast}\r\n                title={toastMessage.title}\r\n                description={toastMessage.description}\r\n                emoji={toastMessage.emoji}\r\n                onClose={() => setShowToast(false)}\r\n            />\r\n        </>\r\n    );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2497, "column": 0}, "map": {"version":3,"sources":["file:///C:/Hyperverge/sensai-frontend/src/app/school/admin/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport ClientSchoolAdminView from './ClientSchoolAdminView';\r\nimport { useParams } from 'next/navigation';\r\n\r\nexport default function SchoolPage() {\r\n    // Use the proper Next.js hook to get route parameters\r\n    const params = useParams();\r\n    const id = params.id as string;\r\n\r\n    return <ClientSchoolAdminView id={id} />;\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS;IACpB,sDAAsD;IACtD,MAAM,SAAS,CAAA,GAAA,iPAAA,CAAA,YAAS,AAAD;IACvB,MAAM,KAAK,OAAO,EAAE;IAEpB,qBAAO,6VAAC,iKAAA,CAAA,UAAqB;QAAC,IAAI;;;;;;AACtC","debugId":null}}]
}